# Saved by TopBraid on Wed Feb 02 11:15:31 CST 2011
# baseURI: http://mdacc.org/SPARQLQuery
# imports: http://www.isi.edu/~pan/damltime/time-entry.owl
# imports: http://swan.mindinformatics.org/ontologies/1.2/collections.owl
# imports: http://mdacc.org/Microarray
# imports: http://www.w3.org/2009/08/skos-reference/skos.rdf
# imports: http://xmlns.com/foaf/0.1/
# imports: http://mdacc.org/Sample
# imports: http://www.w3.org/TR/skos-reference/skos-xl.rdf
# imports: http://spinrdf.org/spl

@prefix Thesaurus:  <http://ncicb.nci.nih.gov/xml/owl/EVS/Thesaurus.owl#> .
@prefix collections:  <http://swan.mindinformatics.org/ontologies/1.2/collections/> .
@prefix dc:      <http://purl.org/dc/elements/1.1/> .
@prefix fn:      <http://www.w3.org/2005/xpath-functions#> .
@prefix foaf:    <http://xmlns.com/foaf/0.1/> .
@prefix mage:    <http://mged.sourceforge.net/ontologies/MGEDOntology.owl#> .
@prefix nco:     <http://www.semanticdesktop.org/ontologies/2007/03/22/nco#> .
@prefix owl:     <http://www.w3.org/2002/07/owl#> .
@prefix p3:      <http://my.com/file3#> .
@prefix pav:     <http://swan.mindinformatics.org/ontologies/1.2/pav/> .
@prefix rdf:     <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:    <http://www.w3.org/2000/01/rdf-schema#> .
@prefix reification:  <http://swan.mindinformatics.org/ontologies/1.2/reification/> .
@prefix skos:    <http://www.w3.org/2004/02/skos/core#> .
@prefix skos-xl:  <http://www.w3.org/2008/05/skos-xl#> .
@prefix sp:      <http://spinrdf.org/sp#> .
@prefix sparqlQuery:  <http://mdacc.org/SPARQLQuery#> .
@prefix spin:    <http://spinrdf.org/spin#> .
@prefix tcga:    <http://mdacc.org/TCGAArchive#> .
@prefix time-entry:  <http://www.isi.edu/~pan/damltime/time-entry.owl#> .
@prefix wordnet:  <http://xmlns.com/wordnet/1.6/> .
@prefix xsd:     <http://www.w3.org/2001/XMLSchema#> .

<http://mdacc.org/SPARQLQuery>
      rdf:type owl:Ontology ;
      owl:imports <http://www.w3.org/2009/08/skos-reference/skos.rdf> , <http://www.w3.org/TR/skos-reference/skos-xl.rdf> , <http://mdacc.org/Sample> , foaf: , <http://swan.mindinformatics.org/ontologies/1.2/collections.owl> , <http://www.isi.edu/~pan/damltime/time-entry.owl> , <http://mdacc.org/Microarray> , <http://spinrdf.org/spl> ;
      owl:versionInfo "Created with TopBraid Composer"^^xsd:string .

sparqlQuery:ABIOrg
      rdf:type sparqlQuery:Organization .

sparqlQuery:ABIPlatform
      rdf:type sparqlQuery:Platform ;
      sparqlQuery:hasVendor
              sparqlQuery:ABIOrg .

sparqlQuery:Absorbance260Nm
      rdf:type owl:Class ;
      rdfs:comment "The quantity of 260nm light that is not transmitted through a substance or solution."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:Quantity ;
      dc:creator foaf:JimLomax .

sparqlQuery:Absorbance260To280Nm
      rdf:type owl:Class ;
      rdfs:comment "There is no corresponding entity in the BioPortal for 260-280 nm absorbance value."^^xsd:string , "This ratio reveals the purity of nucleic acids. The A260A280 ratio is a quality assurance test on an analyte, post-extraction. The ratio will indicate the purity of the analyte."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:PurityMeasurment ;
      dc:creator foaf:JimLomax .

sparqlQuery:Absorbance280Nm
      rdf:type owl:Class ;
      rdfs:comment "The quantity of 280nm light that is not transmitted through a substance or solution."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:Quantity ;
      dc:creator foaf:JimLomax .

sparqlQuery:AcquireCancersAvailableGoal
      rdf:type sparqlQuery:Goal ;
      dc:creator foaf:JimLomax .

sparqlQuery:AddDataToTCGAInventoryGoal
      rdf:type sparqlQuery:Goal ;
      dc:creator foaf:JimLomax .

sparqlQuery:AddToTCGAInventory
      rdf:type sparqlQuery:UseCase ;
      rdfs:comment "TCGA data is a large collection of clinical and molecular data aggregated by the NIH and dissemenated asycnhronously. As consumer of TCGA data the philosophy of data acquisition has been to download deltas between the inventory of already acquired data and the data currently residing in the TCGA archives. To support this philosophy, the consuming TCGA data curator will add deltas to the inventory on a regular basis. The deltas manifest themselves as TCGA Archive Downloads, the files comprising the delta are captured in a list known as the ArchiveDownloadList. Fundamental to semantic technologies is the transformation of the target datasets into RDF. TCGA data is currently disseminated as text files; some categories of data are packaged as tab separated files, some are simply text that has been partitioned into row or column major data items, others are packaged according to algorithms indigenous to the type of data they contain."^^xsd:string ;
      sparqlQuery:hasGoal sparqlQuery:AddDataToTCGAInventoryGoal ;
      sparqlQuery:name "Transform Raw TCGA Data into RDF"^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:AffymetrixOrg
      rdf:type sparqlQuery:Organization .

sparqlQuery:AgilentOrg
      rdf:type sparqlQuery:Organization .

sparqlQuery:Aliquot
      rdf:type owl:Class ;
      rdfs:comment "An Aliquot is a biological entity and it represents a measurable component of a biological sample,  generally of one genomic type, such as RNA or DNA. An Aliquot is considered a part of a biological sample but not in the same capacity as a Portion. A Portion is a subdivision of the biological sample involving all of the samples constituents, an Aliquot is just one constituent. "^^xsd:string ;
      rdfs:subClassOf skos:Concept ;
      sparqlQuery:designNote
              "An Aliquot  instance will be measured by a quantity and units."^^xsd:string , "Aliquot is the name given to the concept of a single genomic constituent of a biological sample from a TCGA perspective but labeling of the concept must accept other perspectives."^^xsd:string , "An Aliquot instance from a TCGA perspective will be uniquely identified by a TCGA manufactured string. While this is local to TCGA, a unique identification mechanism per Aliquot instance is a reasonable deisgn globally."^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:Aliquot1_Aliquot
      rdf:type sparqlQuery:Aliquot .

sparqlQuery:AliquotId
      rdf:type owl:Class ;
      rdfs:comment "Aliquot Id is a concept for uniquely identifying an Aliquot.  "^^xsd:string ;
      rdfs:subClassOf skos:Concept ;
      sparqlQuery:designNote
              "The naming of Aliquot Id instances may vary with audiences."^^xsd:string , "To aid in data integration, an Aliquot Id will be defined  by an equivalent class which is a union of known concepts that logically map to the concept of Aliquot Id."^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:AliquotQuantity
      rdf:type owl:Class ;
      rdfs:comment "The quantity measurement of an aliquot; perspectives may vary on how quantities are represented, particularly units of measurement."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:Quantity ;
      dc:creator foaf:JimLomax .

sparqlQuery:AliquotQuantityUnits
      rdf:type owl:Class ;
      rdfs:subClassOf sparqlQuery:Units .

sparqlQuery:AmericanIndianAlaskaNative_Race
      rdf:type sparqlQuery:Race ;
      dc:creator foaf:JimLomax .

sparqlQuery:Analyte
      rdf:type owl:Class ;
      rdfs:comment "A substance or chemical constituent determined (identified) from an analytical procedure. The substance can  refer to a solute in solvent or one substance in the presence of a hetergeneous mixture of substances."^^xsd:string , "For example in blood glucose testing, the analyte is glucose."^^xsd:string , "In TCGA context, an Analyte is created from (exactly) one Portion"^^xsd:string ;
      rdfs:subClassOf skos:Concept ;
      sparqlQuery:designNote
              "A specific instance of an Analyte may be referred to by different names, therefore a SKOS labeling system will be employed."^^xsd:string , "By definition an analyte has a concentration."^^xsd:string , "Analyte is the concept of a substance determined by / identified from an analytical procedure."^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:Analyte1_Analyte
      rdf:type sparqlQuery:Analyte .

sparqlQuery:Anaplasia
      rdf:type owl:Class ;
      rdfs:comment "Anaplasia refers to a reversion of differentiation (dediiferentiation or a reversal in maturity) in cells and is characteristic of malignant neoplasms (tumors)."^^xsd:string ;
      rdfs:subClassOf skos:Concept ;
      sparqlQuery:designNote
              "Anaplasia is a observation."^^xsd:string , "Anaplasia instances may be referred to by different names, therefore a SKOS labeling system will be employed"^^xsd:string , "Anaplasia in a TCGA context can be disffuse anaplasia,  focal anaplasia or just simply anaplasia (which not observed as either diffuse or focal)"^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:AnatomicSite
      rdf:type owl:Class ;
      rdfs:comment "Body tissue, region, surface, cavity, fluid, organ, or collection of organs."^^xsd:string ;
      rdfs:subClassOf skos:Concept ;
      sparqlQuery:designNote
              "Since anatomic sites may be referred to by many different terms, a SKOS labeling scheme will be employed."^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:AnatomicSite_1
      rdf:type sparqlQuery:AnatomicSite .

sparqlQuery:Archive
      rdf:type owl:Class ;
      rdfs:comment "An archive is a collection of archive listings with respect to an originating source, which can be considered a Project. An Archive is viewed as a single processable entity, the  Archive Listings within are processed according to rules that govern their inherent structure and relationships to other Archive Listings. Archives are versioned per release; versions are labeled in any number of ways but are only consistently labeled within a particular archive source (or project). An Archive has a creation date, however we have not added pre  processing instructions to extract the creation date; currently it is artificially set. An Archive has a name for easy retrieval; archive names are first class entities to support owl:sameAs synonomy and SWRL rules to enforce naming conventions, if any."^^xsd:string ;
      rdfs:subClassOf skos:Concept ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:onProperty sparqlQuery:project ;
                owl:someValuesFrom sparqlQuery:Project
              ] ;
      dc:creator foaf:JimLomax ;
      dc:date "2010-04-16"^^xsd:string .

sparqlQuery:ArchiveDownload
      rdf:type owl:Class ;
      rdfs:comment "An Archive Download is a collection of Archive Artifacts downloaded in a particular time frame, contiguously. An ArchiveDownload is a slice of an Archive. The slice may be a time-dependent download of files (some time range) or any other facet. Archive Downloads are created on a specified date and named for easy identification"^^xsd:string ;
      rdfs:subClassOf skos:Concept ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:onProperty sparqlQuery:createdOn ;
                owl:someValuesFrom xsd:dateTime
              ] ;
      dc:creator foaf:JimLomax .

sparqlQuery:ArchiveDownload_1
      rdf:type sparqlQuery:ArchiveDownload .

sparqlQuery:ArchiveFileType
      rdf:type owl:Class ;
      rdfs:comment "Archive File Type is used to support a classification scheme for listings in an Archive. Archive File Types are first class entities to support a flexible type hierarchy and a transitive relationship within the hierarchy using a designated parent-child inverse property set."^^xsd:string ;
      rdfs:subClassOf skos:Concept ;
      dc:creator foaf:JimLomax .

sparqlQuery:ArchiveListing
      rdf:type owl:Class ;
      rdfs:comment "Any listing of an Archive. Each listing has a name for user identification purposes. Each listing has an access level to support protection of sensitive information. In the context of TCGA (which is the current iteration), each listing is associated with an Archive, which has a version. A listing may be associated to an archive download, however listings can also exist outside of an archive download context. This is the case when files are downloaded directly from the TCGA portal outside of the scheduled downloads. One of the most important aspects of the listing is its type. We have added a hierarchical typing mechanism which is transitive along a parent-child type hierarchy. Also, each listing has a last modified date to indicate when its contents were last changed. This is important in establishing a provenance model for archive components. Although we do not yet have the infrastructure to capture any other provenance information about listings we can at least verify temporal changes."^^xsd:string ;
      rdfs:subClassOf skos:Concept ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:onProperty sparqlQuery:hasAccessLevel ;
                owl:someValuesFrom sparqlQuery:ArchiveListingAccessLevel
              ] ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:onProperty sparqlQuery:hasFileType ;
                owl:someValuesFrom sparqlQuery:ArchiveFileType
              ] ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:cardinality "1"^^xsd:nonNegativeInteger ;
                owl:onProperty sparqlQuery:hasAccessLevel
              ] ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:onProperty sparqlQuery:hasArchive ;
                owl:someValuesFrom sparqlQuery:Archive
              ] ;
      dc:creator foaf:JimLomax .

sparqlQuery:ArchiveListingAccessLevel
      rdf:type owl:Class ;
      rdfs:comment "Archive Listings have a hierarchy of access levels to protect sensitive data."^^xsd:string ;
      rdfs:subClassOf skos:Concept ;
      dc:creator foaf:JimLomax .

sparqlQuery:ArchiveListingFacetAnalysis
      rdf:type sparqlQuery:UseCase ;
      rdfs:comment "Use case for varieties of ways a Data Curator can perform facet analysis of archive listings. Counting occurences of facet values gives an indication of how that facet is represented in the dataset. A Data Curator, through faceted analysis of archive lists, may recognize trends or anomalies in the dataset. There is no set path of activities for this use case as this is exploratory in nature."^^xsd:string ;
      rdfs:label "Archive Listing Facet Analysis"^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:Archive_1
      rdf:type sparqlQuery:Archive .

sparqlQuery:ArrayDataArtifact
      rdf:type owl:Class ;
      rdfs:comment "Array Data is an Archive Artifact containing the results set of applying processes in the SampleDataRelationship Artifact to a  corresponding sample in the SampleDataRelationship Artifact. In a TCGA context the Array Data has an implicit cancer type, genomic processing center, platform  and datatype; all of these must be present for Array Data. Array Data is collected per sample."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:ComputationalArtifact ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:onProperty sparqlQuery:hasDatatype ;
                owl:someValuesFrom sparqlQuery:PlatformDatatype
              ] ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:onProperty sparqlQuery:genomicCenter ;
                owl:someValuesFrom sparqlQuery:Organization
              ] ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:onProperty sparqlQuery:hasPlatform ;
                owl:someValuesFrom sparqlQuery:Platform
              ] ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:cardinality "1"^^xsd:int ;
                owl:onProperty sparqlQuery:hasPlatform
              ] ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:onProperty sparqlQuery:hasTissueSample ;
                owl:someValuesFrom sparqlQuery:TissueSample
              ] ;
      dc:creator foaf:JimLomax .

sparqlQuery:ArrayDesignArtifact
      rdf:type owl:Class ;
      rdfs:comment "Artifact containing the design of a microarray. Each microarry is designed by a genomic processing center; two centers could design the same microarray very differently for different purposes. The design is specific to one micoarray. The microarray itself is represented as a Platform."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:ComputationalArtifact ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:onProperty sparqlQuery:hasDatatype ;
                owl:someValuesFrom sparqlQuery:PlatformDatatype
              ] ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:onProperty sparqlQuery:hasPlatform ;
                owl:someValuesFrom sparqlQuery:Platform
              ] ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:cardinality "1"^^xsd:int ;
                owl:onProperty sparqlQuery:hasPlatform
              ] ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:onProperty sparqlQuery:genomicCenter ;
                owl:someValuesFrom mage:Organization
              ] ;
      dc:creator foaf:JimLomax .

sparqlQuery:Asian_Race
      rdf:type sparqlQuery:Race ;
      dc:creator foaf:JimLomax .

sparqlQuery:AttractTalent
      rdf:type sparqlQuery:Goal .

sparqlQuery:BCR
      rdf:type owl:Class ;
      rdfs:comment "A BCR is a TCGA-specific workflow entity. The BCR is responsible for collecting and processing biological samples from TCGA Collection Sites. "^^xsd:string , "The Biospecimen Core Resource (BCR) receives tissues and clinical metadata from Collection Sites"^^xsd:string , "The BCR provides each TCGA  Data Coordination Center(DCC) with biospecimen analytes (DNA and RNA) and their corresponding sample identifiers. The BCR also transfers the clinical metadata and IDs tothe TCGA Data Coordination Center (DCC)."^^xsd:string , "We suspect that Collection Sites send their samples to a BCR that is geographically close, however this has not been confirmed."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:Organization ;
      sparqlQuery:designNote
              "A BCR concept is labeled as both a BCR and Biospecimen Core Resource. Also, as these terms are TCGA-specific, there will be a generic mechanism to label this concept for other interpretations outside of a TCGA context."^^xsd:string , "A BCR is an Organization"^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:BCRAliquotBarcode1_AliquotId
      rdf:type sparqlQuery:AliquotId .

sparqlQuery:Batch1UploadComplete
      rdf:type time-entry:Instant ;
      time-entry:inCalendarClockDataType
              "2010-11-02T00:23:08.7"^^xsd:dateTime .

sparqlQuery:BaylorOrg
      rdf:type sparqlQuery:Organization .

sparqlQuery:BiologicalCollectionResource
      rdf:type owl:Class ;
      rdfs:comment "The Biological Collection Resource (BCR) receives tissues and clinical metadata from Collection Centers"^^xsd:string , "The BCR provides each TCGA  Data Coordination Center(DCC) with biospecimen analytes (DNA and RNA) and their corresponding sample identifiers. The BCR also transfers the clinical metadata and IDs tothe TCGA Data Coordination Center (DCC)."^^xsd:string , "A Biological Collection Resource is a TCGA-specific workflow entity. Also known as a BCR, the biological collection resource is responsible for collecting and processing biological samples from TCGA Collection Sites. "^^xsd:string , "BCRs are responsible for verifying the quality and quantity of tissue shipped by Collection sites, the isolation of DNA and RNA from the samples, quality control of these biomolecules and the shipment of samples to the GSCs and GCCs"^^xsd:string , "We suspect that Collection Sites send their samples to a BCR that is geographically close, however this has not been confirmed."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:Organization ;
      sparqlQuery:designNote
              "A BCR concept is labeled as both a BCR and Biological Collection Resource. Also, as these terms are TCGA-specific, there will be a generic mechanism to label this concept for other interpretations outside of a TCGA context."^^xsd:string , "A BCR is an Organization"^^xsd:string ;
      dc:creator foaf:JimLomax ;
      owl:equivalentClass sparqlQuery:BCR .

sparqlQuery:Biomarker
      rdf:type owl:Class ;
      rdfs:comment "A variation in cellular or biochemical components or processes, structures, or functions that is objectively measurable in a biological system and that characterizes normal biologic processes, pathogenic processes, an organism's state of health or disease, likelihood of developing a disease, prognosis, or response to a particular therapeutic intervention."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:Indicator ;
      dc:creator foaf:JimLomax .

sparqlQuery:BiospecimenCollection
      rdf:type owl:Class ;
      rdfs:subClassOf sparqlQuery:TemporalEvent ;
      dc:creator foaf:JimLomax .

sparqlQuery:Birth1_PatientEvent
      rdf:type sparqlQuery:BirthPatientEvent ;
      sparqlQuery:eventTarget
              sparqlQuery:Patient1_Patient ;
      time-entry:before sparqlQuery:DeathPatient1_PatientEvent ;
      time-entry:inCalendarClockDataType
              "1980-10-01T00:39:39.232"^^xsd:dateTime .

sparqlQuery:BirthPatientEvent
      rdf:type owl:Class ;
      rdfs:subClassOf sparqlQuery:PatientEvent ;
      sparqlQuery:designNote
              "The concept of a birth in context of a Patient. An instance of which is temporal. This is in contrast to a an instance of Birth, which is merely existential."^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:Black_Race
      rdf:type sparqlQuery:Race ;
      dc:creator foaf:JimLomax .

sparqlQuery:BloodDerivedTissueSample
      rdf:type owl:Class ;
      rdfs:subClassOf sparqlQuery:TissueSample ;
      owl:equivalentClass
              [ rdf:type owl:Class ;
                owl:intersectionOf (sparqlQuery:TissueSample [ rdf:type owl:Restriction ;
                            owl:hasValue sparqlQuery:SampleType_BloodDerivedNormal ;
                            owl:onProperty sparqlQuery:sampleType
                          ])
              ] .

sparqlQuery:Brain
      rdf:type owl:Class ;
      rdfs:comment "An organ composed of grey and white matter containing billions of neurons that is the center for intelligence and reasoning. It is protected by the bony cranium."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:AnatomicSite ;
      sparqlQuery:domainQuestion
              "Does Brain need to be an instance of anatomic site or are there more specific instances of brain anatomic sites to capture in context of cancer  progression/therapy. For now we will model the brain as a concept."^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:BroadOrg
      rdf:type sparqlQuery:Organization .

sparqlQuery:BuccalCellLineControlTissueSample
      rdf:type owl:Class ;
      rdfs:subClassOf sparqlQuery:TissueSample ;
      owl:equivalentClass
              [ rdf:type owl:Class ;
                owl:intersectionOf (sparqlQuery:TissueSample [ rdf:type owl:Restriction ;
                            owl:hasValue sparqlQuery:SampleType_CellLineControl ;
                            owl:onProperty sparqlQuery:sampleType
                          ])
              ] .

sparqlQuery:BuccalCellNormalTissueSample
      rdf:type owl:Class ;
      rdfs:subClassOf sparqlQuery:TissueSample ;
      owl:equivalentClass
              [ rdf:type owl:Class ;
                owl:intersectionOf (sparqlQuery:TissueSample [ rdf:type owl:Restriction ;
                            owl:hasValue sparqlQuery:SampleType_BuccalCellNormal ;
                            owl:onProperty sparqlQuery:sampleType
                          ])
              ] .

sparqlQuery:CALGBOrg
      rdf:type sparqlQuery:Organization .

sparqlQuery:CNAPlatformDatatype
      rdf:type sparqlQuery:PlatformDatatype .

sparqlQuery:CalendarClockDescription_29OfMonth
      rdf:type time-entry:CalendarClockDescription ;
      time-entry:day "---29"^^xsd:gDay ;
      time-entry:dayOfWeekField
              "0"^^xsd:nonNegativeInteger .

sparqlQuery:CancerProgressionIndicator
      rdf:type owl:Class ;
      rdfs:comment "Any indicator of cancer progression"^^xsd:string ;
      rdfs:subClassOf sparqlQuery:Indicator ;
      dc:creator foaf:JimLomax .

sparqlQuery:CentralizeDataAccess
      rdf:type sparqlQuery:Goal ;
      sparqlQuery:hasGoal sparqlQuery:CentralizeResearchData .

sparqlQuery:CentralizeResearchData
      rdf:type sparqlQuery:Goal .

sparqlQuery:ChangePresentationLanguage
      rdf:type sparqlQuery:UseCase ;
      sparqlQuery:hasGoal sparqlQuery:InternationalizationGoal ;
      sparqlQuery:hasQuery
              sparqlQuery:SelectHebrewLanguageLabels , sparqlQuery:SelectAllLanguageLabels , sparqlQuery:SelectSpanishLanguageLabels , sparqlQuery:SelectEnglishLanguageLabels .

sparqlQuery:Chemotherapy
      rdf:type owl:Class ;
      rdfs:comment "The use of synthetic or naturally-occurring chemicals for the treatment of diseases. Although this term is used to describe any therapy involving the use of chemical-based agents, it is particularly used to refer to the use of chemical-based agents to treat cancer."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:TherapeuticProcedure ;
      dc:contributor foaf:JimLomax .

sparqlQuery:Chemotherapy1Patient1Event1_PatientEvent
      rdf:type sparqlQuery:ChemotherapyPatientEvent ;
      sparqlQuery:dateTime
              "02-01-2010"^^xsd:string ;
      sparqlQuery:eventSource
              sparqlQuery:Chemotherapy1_TherapeuticProcedure ;
      sparqlQuery:eventTarget
              sparqlQuery:Patient1_Patient .

sparqlQuery:Chemotherapy1Patient1Event2_PatientEvent
      rdf:type sparqlQuery:ChemotherapyPatientEvent ;
      sparqlQuery:dateTime
              "03-01-2010"^^xsd:string ;
      sparqlQuery:eventSource
              sparqlQuery:Chemotherapy1_TherapeuticProcedure ;
      sparqlQuery:eventTarget
              sparqlQuery:Patient1_Patient .

sparqlQuery:Chemotherapy1_TherapeuticProcedure
      rdf:type sparqlQuery:Chemotherapy .

sparqlQuery:Chemotherapy2Patient1Event1_PatientEvent
      rdf:type sparqlQuery:ChemotherapyPatientEvent ;
      sparqlQuery:eventSource
              sparqlQuery:Chemotherapy2_TherapeuticProcedure ;
      sparqlQuery:eventTarget
              sparqlQuery:Patient1_Patient .

sparqlQuery:Chemotherapy2_TherapeuticProcedure
      rdf:type sparqlQuery:Chemotherapy .

sparqlQuery:ChemotherapyNoChange_TherapeuticProcedureOutcome
      rdf:type sparqlQuery:TherapeuticProcedureOutcome .

sparqlQuery:ChemotherapyPatientEvent
      rdf:type owl:Class ;
      rdfs:comment "Chemotherapy as applied to a Patient, temporally."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:TherapeuticProcedurePatientEvent ;
      sparqlQuery:designNote
              "A Chemotherpay Patient Event is a Patient Event that is generated by (eventSource) a Chemotherapy."^^xsd:string ;
      dc:contributor foaf:JimLomax ;
      owl:equivalentClass
              [ rdf:type owl:Class ;
                owl:intersectionOf (sparqlQuery:TherapeuticProcedurePatientEvent [ rdf:type owl:Restriction ;
                            owl:onProperty sparqlQuery:eventSource ;
                            owl:someValuesFrom sparqlQuery:Chemotherapy
                          ])
              ] .

sparqlQuery:Clamping
      rdf:type owl:Class ;
      rdfs:subClassOf sparqlQuery:DurationTemporalEvent ;
      dc:creator foaf:JimLomax .

sparqlQuery:CompressedArtifact
      rdf:type owl:Class ;
      rdfs:comment "Any artifact that has been processed by a compression alogorithm. These artifacts must first be decompressed before they can be asserted to be another type of artifact. Often Compressed artifacts will be a collection of artifacts themselves, this is often the way tissue imagery is packaged."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:ComputationalArtifact ;
      dc:creator foaf:JimLomax .

sparqlQuery:ComputationalArtifact
      rdf:type owl:Class ;
      rdfs:comment "Any artifact in the Archive containing information that can (or will be) processed by an algorithm (some existing function somewhere)"^^xsd:string ;
      rdfs:subClassOf sparqlQuery:ArchiveListing ;
      dc:creator foaf:JimLomax .

sparqlQuery:Concentration
      rdf:type owl:Class ;
      rdfs:comment "The quantity of a substance per volume or unit of weight."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:Quantity ;
      sparqlQuery:designNote
              "A Concentration instance has  the capacity to be labeled differently to support different perspectives. For example one consumer may label a concentration by its numeric value, however another may deem it \"Target Concentration\", \"Desired Concentration\", \"Hypothesis Concentration\", etc. For this reason a SKOS labeling system will be employed."^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:ConcentrationUnits
      rdf:type owl:Class ;
      rdfs:subClassOf sparqlQuery:Units .

sparqlQuery:CountArchiveListingByCancerDatatypePlatformCenter
      rdf:type sparqlQuery:SPARQLQuery ;
      rdfs:comment "Count all Archive Listings in the current graph by cancer type, datatype, platform type,  genomic processing center, archive version, data source and access level."^^xsd:string ;
      rdfs:label "Archive Listing Count:Distinct"^^xsd:string ;
      dc:creator foaf:JimLomax ;
      spin:query
              [ rdf:type sp:Select ;
                sp:groupBy (_:b1) ;
                sp:resultVariables (_:b1 [ rdf:type sp:Count ;
                            sp:as   [ sp:varName "fileCount"^^xsd:string
                                    ] ;
                            sp:expression _:b2
                          ]) ;
                sp:where ([ sp:object <http://mdacc.org/Archive#ArchiveListing> ;
                            sp:predicate rdf:type ;
                            sp:subject _:b3
                          ] [ sp:object _:b4 ;
                            sp:predicate <http://mdacc.org/Archive#locatedBy> ;
                            sp:subject _:b3
                          ] [ sp:object _:b2 ;
                            sp:predicate <http://mdacc.org/Archive#file> ;
                            sp:subject _:b4
                          ] [ sp:object _:b5 ;
                            sp:predicate <http://mdacc.org/Microarray#datatype> ;
                            sp:subject _:b3
                          ] [ sp:object _:b6 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b5
                          ] [ sp:object _:b1 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b6
                          ])
              ] .

sparqlQuery:CountArchiveListingByCancerDatatypePlatformCenterVersionDataSourceAccessLevelFileType
      rdf:type sparqlQuery:SPARQLQuery ;
      rdfs:comment "Count all Archive Listings in the current graph by cancer type, datatype, platform type,  genomic processing center, archive version, data source and access level."^^xsd:string ;
      rdfs:label "Archive Listing Count:Distinct"^^xsd:string ;
      dc:creator foaf:JimLomax ;
      spin:query
              [ rdf:type sp:Select ;
                sp:groupBy (_:b7 _:b8 _:b9 _:b10 _:b11 _:b12 _:b13 _:b14) ;
                sp:orderBy (_:b7 _:b9 _:b10 _:b13) ;
                sp:resultVariables (_:b7 _:b8 _:b9 _:b10 _:b11 _:b12 _:b13 _:b14 [ rdf:type sp:Count ;
                            sp:as   [ sp:varName "fileCount"^^xsd:string
                                    ] ;
                            sp:expression _:b15
                          ]) ;
                sp:where ([ sp:object <http://mdacc.org/Archive#ArchiveListing> ;
                            sp:predicate rdf:type ;
                            sp:subject _:b16
                          ] [ sp:object _:b17 ;
                            sp:predicate <http://mdacc.org/Archive#locatedBy> ;
                            sp:subject _:b16
                          ] [ sp:object _:b15 ;
                            sp:predicate <http://mdacc.org/Archive#file> ;
                            sp:subject _:b17
                          ] [ sp:object _:b18 ;
                            sp:predicate <http://mdacc.org/Microarray#datatype> ;
                            sp:subject _:b16
                          ] [ sp:object _:b19 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b18
                          ] [ sp:object _:b9 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b19
                          ] [ sp:object _:b20 ;
                            sp:predicate <http://mdacc.org/Archive#fileType> ;
                            sp:subject _:b16
                          ] [ sp:object _:b21 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b20
                          ] [ sp:object _:b14 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b21
                          ] [ sp:object _:b22 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b23
                          ] [ sp:object _:b10 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b22
                          ] [ sp:object _:b24 ;
                            sp:predicate <http://mdacc.org/Microarray#platformIdentifier> ;
                            sp:subject _:b23
                          ] [ sp:object _:b11 ;
                            sp:predicate dc:identifier ;
                            sp:subject _:b24
                          ] [ sp:object _:b25 ;
                            sp:predicate <http://mdacc.org/Clinical#cancer> ;
                            sp:subject _:b16
                          ] [ sp:object _:b26 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b25
                          ] [ sp:object _:b8 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b26
                          ] [ sp:object _:b27 ;
                            sp:predicate <http://mdacc.org/Clinical#cancerId> ;
                            sp:subject _:b25
                          ] [ sp:object _:b7 ;
                            sp:predicate dc:identifier ;
                            sp:subject _:b27
                          ] [ sp:object _:b28 ;
                            sp:predicate <http://mdacc.org/Organization#genomicCenter> ;
                            sp:subject _:b16
                          ] [ sp:object _:b29 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b28
                          ] [ sp:object _:b12 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b29
                          ] [ sp:object _:b30 ;
                            sp:predicate <http://mdacc.org/Archive#archive> ;
                            sp:subject _:b16
                          ] [ sp:object _:b31 ;
                            sp:predicate <http://mdacc.org/Archive#archiveVersion> ;
                            sp:subject _:b30
                          ] [ sp:object _:b13 ;
                            sp:predicate <http://mdacc.org/Archive#name> ;
                            sp:subject _:b31
                          ] [ sp:object _:b32 ;
                            sp:predicate <http://mdacc.org/Archive#project> ;
                            sp:subject _:b16
                          ] [ sp:object _:b33 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b32
                          ] [ sp:object
                                    [ sp:varName "dataSource"^^xsd:string
                                    ] ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b33
                          ] [ sp:object _:b34 ;
                            sp:predicate <http://mdacc.org/Archive#accessLevel> ;
                            sp:subject _:b16
                          ] [ sp:object
                                    [ sp:varName "accessLevel"^^xsd:string
                                    ] ;
                            sp:predicate <http://mdacc.org/Archive#name> ;
                            sp:subject _:b34
                          ])
              ] .

sparqlQuery:CountArchiveListingByDatatypePlatformCenterVersionDataSourceAccessLevelFileType
      rdf:type sparqlQuery:SPARQLQuery ;
      rdfs:comment "Count all Archive Listings in the current graph by cancer type, datatype, platform type,  genomic processing center, archive version, data source and access level."^^xsd:string ;
      rdfs:label "Archive Listing Count:Distinct"^^xsd:string ;
      dc:creator foaf:JimLomax ;
      spin:query
              [ rdf:type sp:Select ;
                sp:groupBy (_:b35 _:b36 _:b37 _:b38 _:b39 _:b40 _:b41 _:b42 _:b43) ;
                sp:resultVariables (_:b35 _:b36 _:b37 _:b38 _:b39 _:b40 _:b41 _:b42 _:b43 [ rdf:type sp:Count ;
                            sp:as   [ sp:varName "fileCount"^^xsd:string
                                    ] ;
                            sp:expression _:b44
                          ]) ;
                sp:where ([ sp:object <http://mdacc.org/Archive#ArchiveListing> ;
                            sp:predicate rdf:type ;
                            sp:subject _:b45
                          ] [ sp:object _:b46 ;
                            sp:predicate <http://mdacc.org/Archive#locatedBy> ;
                            sp:subject _:b45
                          ] [ sp:object _:b44 ;
                            sp:predicate <http://mdacc.org/Archive#file> ;
                            sp:subject _:b46
                          ] [ sp:object _:b47 ;
                            sp:predicate <http://mdacc.org/Microarray#datatype> ;
                            sp:subject _:b45
                          ] [ sp:object _:b48 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b47
                          ] [ sp:object _:b36 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b48
                          ] [ sp:object _:b49 ;
                            sp:predicate <http://mdacc.org/Archive#fileType> ;
                            sp:subject _:b45
                          ] [ sp:object _:b50 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b49
                          ] [ sp:object _:b43 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b50
                          ] [ sp:object _:b51 ;
                            sp:predicate <http://mdacc.org/Microarray#platform> ;
                            sp:subject _:b45
                          ] [ sp:object _:b52 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b51
                          ] [ sp:object _:b37 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b52
                          ] [ sp:object _:b53 ;
                            sp:predicate <http://mdacc.org/Microarray#platformIdentifier> ;
                            sp:subject _:b51
                          ] [ sp:object _:b38 ;
                            sp:predicate dc:identifier ;
                            sp:subject _:b53
                          ] [ sp:object _:b54 ;
                            sp:predicate <http://mdacc.org/Organization#genomicCenter> ;
                            sp:subject _:b45
                          ] [ sp:object _:b55 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b54
                          ] [ sp:object _:b39 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b55
                          ] [ sp:object _:b56 ;
                            sp:predicate <http://mdacc.org/Archive#archive> ;
                            sp:subject _:b45
                          ] [ sp:object _:b57 ;
                            sp:predicate <http://mdacc.org/Archive#archiveVersion> ;
                            sp:subject _:b56
                          ] [ sp:object _:b40 ;
                            sp:predicate <http://mdacc.org/Archive#name> ;
                            sp:subject _:b57
                          ] [ sp:object _:b58 ;
                            sp:predicate <http://mdacc.org/Archive#project> ;
                            sp:subject _:b45
                          ] [ sp:object _:b59 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b58
                          ] [ sp:object _:b41 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b59
                          ] [ sp:object _:b60 ;
                            sp:predicate <http://mdacc.org/Archive#accessLevel> ;
                            sp:subject _:b45
                          ] [ sp:object _:b42 ;
                            sp:predicate <http://mdacc.org/Archive#name> ;
                            sp:subject _:b60
                          ] [ sp:object _:b61 ;
                            sp:predicate <http://mdacc.org/Clinical#cancer> ;
                            sp:subject _:b45
                          ] [ sp:object _:b62 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b61
                          ] [ sp:object _:b35 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b62
                          ] [ sp:object _:b63 ;
                            sp:predicate <http://mdacc.org/Clinical#cancerId> ;
                            sp:subject _:b61
                          ] [ sp:object
                                    [ sp:varName "cancerId"^^xsd:string
                                    ] ;
                            sp:predicate dc:identifier ;
                            sp:subject _:b63
                          ])
              ] .

sparqlQuery:CountArchiveListingsByCancerType
      rdf:type sparqlQuery:SPARQLQuery ;
      rdfs:comment "Count all Archive Listings in the current graph context by their cancer type. This dimensional slice through the archive listings gives an indication of the representation of each cancer type in the dataset. Note: The type of archive listing is not distinguished in this query, therefore raw data listings are combined with readme, manifest, image, etc."^^xsd:string ;
      rdfs:label "Archive Listing Count: By Cancer Type"^^xsd:string ;
      dc:creator foaf:JimLomax ;
      spin:query
              [ rdf:type sp:Select ;
                sp:groupBy (_:b64) ;
                sp:resultVariables (_:b64 [ rdf:type sp:Count ;
                            sp:as   [ sp:varName "FileCount"^^xsd:string
                                    ] ;
                            sp:expression _:b65
                          ]) ;
                sp:where ([ sp:object <http://mdacc.org/Archive#ArchiveListing> ;
                            sp:predicate rdf:type ;
                            sp:subject _:b66
                          ] [ sp:object _:b67 ;
                            sp:predicate <http://mdacc.org/Archive#locatedBy> ;
                            sp:subject _:b66
                          ] [ sp:object _:b65 ;
                            sp:predicate <http://mdacc.org/Archive#file> ;
                            sp:subject _:b67
                          ] [ sp:object _:b68 ;
                            sp:predicate <http://mdacc.org/Clinical#cancer> ;
                            sp:subject _:b66
                          ] [ sp:object _:b69 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b68
                          ] [ sp:object _:b64 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b69
                          ])
              ] .

sparqlQuery:CountArchiveListingsByDatatype
      rdf:type sparqlQuery:SPARQLQuery ;
      rdfs:comment "Count all Archive Listings in the current graph context by their associated platform datatype. This dimensional slice through the archive listings gives an indication of the representation of each cancer type in the dataset. Note: The type of archive listing is not distinguished in this query, therefore raw data listings are combined with readme, manifest, image, etc."^^xsd:string ;
      rdfs:label "Archive Listing Count: By Platform Datatype"^^xsd:string ;
      dc:creator foaf:JimLomax ;
      spin:query
              [ rdf:type sp:Select ;
                sp:groupBy (_:b70) ;
                sp:resultVariables (_:b70 [ rdf:type sp:Count ;
                            sp:as   [ sp:varName "FileCount"^^xsd:string
                                    ] ;
                            sp:expression _:b71
                          ]) ;
                sp:where ([ sp:object <http://mdacc.org/Archive#ArchiveListing> ;
                            sp:predicate rdf:type ;
                            sp:subject _:b72
                          ] [ sp:object _:b73 ;
                            sp:predicate <http://mdacc.org/Archive#locatedBy> ;
                            sp:subject _:b72
                          ] [ sp:object _:b71 ;
                            sp:predicate <http://mdacc.org/Archive#file> ;
                            sp:subject _:b73
                          ] [ sp:object _:b74 ;
                            sp:predicate <http://mdacc.org/Microarray#datatype> ;
                            sp:subject _:b72
                          ] [ sp:object _:b75 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b74
                          ] [ sp:object _:b70 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b75
                          ])
              ] .

sparqlQuery:CountArchiveListingsByFileType
      rdf:type sparqlQuery:SPARQLQuery ;
      rdfs:comment "Count all Archive Listings in the current graph context by their file type. This facet  slice through the archive listings gives an indication of the representation of each file type in the dataset."^^xsd:string ;
      rdfs:label "Archive Listing Count: By File Type"^^xsd:string ;
      dc:creator foaf:JimLomax ;
      spin:query
              [ rdf:type sp:Select ;
                sp:groupBy (_:b76) ;
                sp:resultVariables (_:b76 [ rdf:type sp:Count ;
                            sp:as   [ sp:varName "FileCount"^^xsd:string
                                    ] ;
                            sp:expression _:b77
                          ]) ;
                sp:where ([ sp:object <http://mdacc.org/Archive#ArchiveListing> ;
                            sp:predicate rdf:type ;
                            sp:subject _:b78
                          ] [ sp:object _:b79 ;
                            sp:predicate <http://mdacc.org/Archive#locatedBy> ;
                            sp:subject _:b78
                          ] [ sp:object _:b77 ;
                            sp:predicate <http://mdacc.org/Archive#file> ;
                            sp:subject _:b79
                          ] [ sp:object _:b80 ;
                            sp:predicate <http://mdacc.org/Archive#fileType> ;
                            sp:subject _:b78
                          ] [ sp:object _:b81 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b80
                          ] [ sp:object _:b76 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b81
                          ])
              ] .

sparqlQuery:CountArchiveListingsByPlatformID
      rdf:type sparqlQuery:SPARQLQuery ;
      rdfs:comment "Count all Archive Listings in the current graph context by their associated platform type. This dimensional slice through the archive listings gives an indication of the representation of each platform in the dataset. Note: The type of archive listing is not distinguished in this query, therefore raw data listings are combined with readme, manifest, image, etc."^^xsd:string ;
      rdfs:label "Archive Listing Count: By Platform"^^xsd:string ;
      dc:creator foaf:JimLomax ;
      spin:query
              [ rdf:type sp:Select ;
                sp:groupBy (_:b82) ;
                sp:resultVariables (_:b82 [ rdf:type sp:Count ;
                            sp:as   [ sp:varName "FileCount"^^xsd:string
                                    ] ;
                            sp:expression _:b83
                          ]) ;
                sp:where ([ sp:object <http://mdacc.org/Archive#ArchiveListing> ;
                            sp:predicate rdf:type ;
                            sp:subject _:b84
                          ] [ sp:object _:b85 ;
                            sp:predicate <http://mdacc.org/Archive#locatedBy> ;
                            sp:subject _:b84
                          ] [ sp:object _:b83 ;
                            sp:predicate <http://mdacc.org/Archive#file> ;
                            sp:subject _:b85
                          ] [ sp:object _:b86 ;
                            sp:predicate <http://mdacc.org/Microarray#platform> ;
                            sp:subject _:b84
                          ] [ sp:object _:b87 ;
                            sp:predicate <http://mdacc.org/Microarray#platformIdentifier> ;
                            sp:subject _:b86
                          ] [ sp:object _:b82 ;
                            sp:predicate dc:identifier ;
                            sp:subject _:b87
                          ])
              ] .

sparqlQuery:CountArchiveListingsByProcessingCenter
      rdf:type sparqlQuery:SPARQLQuery ;
      rdfs:comment "Count all Archive Listings in the current graph context by their associated processing center. This dimensional slice through the archive listings gives an indication of the representation of each processing center in the dataset. Note: The type of archive listing is not distinguished in this query, therefore raw data listings are combined with readme, manifest, image, etc."^^xsd:string ;
      rdfs:label "Archive Listing Count: By Genomic Center"^^xsd:string ;
      dc:creator foaf:JimLomax ;
      spin:query
              [ rdf:type sp:Select ;
                sp:groupBy (_:b88) ;
                sp:resultVariables (_:b88 [ rdf:type sp:Count ;
                            sp:as   [ sp:varName "FileCount"^^xsd:string
                                    ] ;
                            sp:expression _:b89
                          ]) ;
                sp:where ([ sp:object sparqlQuery:ArchiveListing ;
                            sp:predicate rdf:type ;
                            sp:subject _:b90
                          ] [ sp:object _:b91 ;
                            sp:predicate sparqlQuery:locatedBy ;
                            sp:subject _:b90
                          ] [ sp:object _:b89 ;
                            sp:predicate sparqlQuery:file ;
                            sp:subject _:b91
                          ] [ sp:object _:b92 ;
                            sp:predicate sparqlQuery:genomicCenter ;
                            sp:subject _:b90
                          ] [ sp:object _:b93 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b92
                          ] [ sp:object _:b88 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b93
                          ])
              ] .

sparqlQuery:CountDistinctCancerTypes
      rdf:type sparqlQuery:SPARQLQuery ;
      rdfs:comment "This query returns the number of distinct cancer types found in the current graph"^^xsd:string , "Count cancer types known in the graph. SKOS is used to control mulitple representations of the same cancer type."^^xsd:string ;
      rdfs:label "Cancer Type Count: All, Unique"^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:CountDistinctPlatformDatatypes
      rdf:type sparqlQuery:SPARQLQuery ;
      rdfs:comment "Count distinct platform datatypes available in the current graph. SKOS extended labeling is employed to provide multiple representations of the same platform datatype concept."^^xsd:string ;
      rdfs:label "Platform Datatype Count: All, Unique"^^xsd:string ;
      dc:creator foaf:JimLomax ;
      spin:query
              [ rdf:type sp:Select ;
                sp:resultVariables ([ rdf:type sp:Count ;
                            sp:distinct "true"^^xsd:boolean ;
                            sp:expression
                                    [ sp:varName "datatype"^^xsd:string
                                    ]
                          ]) ;
                sp:where ([ sp:object sparqlQuery:PlatformDatatype ;
                            sp:predicate rdf:type ;
                            sp:subject _:b94
                          ] [ sp:object _:b95 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b94
                          ] [ sp:object
                                    [ sp:varName "datatype"^^xsd:string
                                    ] ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b95
                          ])
              ] .

sparqlQuery:CountInterpretedDataArchiveListingByCancerDatatypePlatformCenterVersionDataSourceAccessLevel
      rdf:type sparqlQuery:SPARQLQuery ;
      rdfs:comment "Count all Interpreted Data (Level 3) files in the current graph by cancer type, datatype, platform type,  genomic processing center, archive version, data source and access level."^^xsd:string ;
      rdfs:label "Interpreted Data Count: By Cancer, Datatype, Platform, GenomicCenter, ArchiveVersion, DataSource, AccessLevel"^^xsd:string ;
      dc:creator foaf:JimLomax ;
      spin:query
              [ rdf:type sp:Select ;
                sp:groupBy (_:b96 _:b97 _:b98 _:b99 _:b100 _:b101 _:b102 _:b103) ;
                sp:orderBy (_:b96 _:b97 _:b100 _:b101 _:b102 _:b103) ;
                sp:resultVariables (_:b96 _:b97 _:b98 _:b99 _:b100 _:b101 _:b102 _:b103 [ rdf:type sp:Count ;
                            sp:as   [ sp:varName "InterpretedDataFileCount"^^xsd:string
                                    ] ;
                            sp:expression _:b104
                          ]) ;
                sp:where ([ sp:object sparqlQuery:ArchiveListing ;
                            sp:predicate rdf:type ;
                            sp:subject _:b105
                          ] [ sp:object _:b106 ;
                            sp:predicate sparqlQuery:locatedBy ;
                            sp:subject _:b105
                          ] [ sp:object _:b104 ;
                            sp:predicate sparqlQuery:file ;
                            sp:subject _:b106
                          ] [ sp:object _:b107 ;
                            sp:predicate sparqlQuery:hasDatatype ;
                            sp:subject _:b105
                          ] [ sp:object _:b108 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b107
                          ] [ sp:object _:b97 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b108
                          ] [ sp:object _:b109 ;
                            sp:predicate sparqlQuery:hasFileType ;
                            sp:subject _:b105
                          ] [ sp:object _:b110 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b109
                          ] [ sp:object "interpreted-data" ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b110
                          ] [ sp:object _:b111 ;
                            sp:predicate sparqlQuery:hasPlatform ;
                            sp:subject _:b105
                          ] [ sp:object _:b112 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b111
                          ] [ sp:object _:b98 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b112
                          ] [ sp:object _:b113 ;
                            sp:predicate sparqlQuery:platformIdentifier ;
                            sp:subject _:b111
                          ] [ sp:object _:b99 ;
                            sp:predicate dc:identifier ;
                            sp:subject _:b113
                          ] [ sp:object _:b114 ;
                            sp:predicate sparqlQuery:cancer ;
                            sp:subject _:b105
                          ] [ sp:object _:b115 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b114
                          ] [ sp:object _:b96 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b115
                          ] [ sp:object _:b116 ;
                            sp:predicate sparqlQuery:genomicCenter ;
                            sp:subject _:b105
                          ] [ sp:object _:b117 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b116
                          ] [ sp:object _:b100 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b117
                          ] [ sp:object _:b118 ;
                            sp:predicate sparqlQuery:hasArchive ;
                            sp:subject _:b105
                          ] [ sp:object _:b119 ;
                            sp:predicate sparqlQuery:hasArchiveVersion ;
                            sp:subject _:b118
                          ] [ sp:object _:b101 ;
                            sp:predicate sparqlQuery:name ;
                            sp:subject _:b119
                          ] [ sp:object _:b120 ;
                            sp:predicate sparqlQuery:project ;
                            sp:subject _:b105
                          ] [ sp:object _:b121 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b120
                          ] [ sp:object _:b102 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b121
                          ] [ sp:object _:b122 ;
                            sp:predicate sparqlQuery:hasAccessLevel ;
                            sp:subject _:b105
                          ] [ sp:object _:b103 ;
                            sp:predicate sparqlQuery:name ;
                            sp:subject _:b122
                          ])
              ] .

sparqlQuery:CountInterpretededDataArchiveListingByCancerDatatypePlatformCenter
      rdf:type sparqlQuery:SPARQLQuery ;
      rdfs:comment "Count all Interpreted Data (Level 3) files in the current graph by cancer type, datatype, platform and genomic processing center."^^xsd:string ;
      rdfs:label "Interpreted Data Count: By Cancer, Datatype, Platform, GenomicCenter."^^xsd:string ;
      dc:creator foaf:JimLomax ;
      spin:query
              [ rdf:type sp:Select ;
                sp:groupBy (_:b123 _:b124 _:b125 _:b126) ;
                sp:resultVariables (_:b123 _:b124 _:b125 _:b126 [ rdf:type sp:Count ;
                            sp:as   [ sp:varName "RawDataFileCount"^^xsd:string
                                    ] ;
                            sp:expression _:b127
                          ]) ;
                sp:where ([ sp:object sparqlQuery:ArchiveListing ;
                            sp:predicate rdf:type ;
                            sp:subject _:b128
                          ] [ sp:object _:b129 ;
                            sp:predicate sparqlQuery:locatedBy ;
                            sp:subject _:b128
                          ] [ sp:object _:b127 ;
                            sp:predicate sparqlQuery:file ;
                            sp:subject _:b129
                          ] [ sp:object _:b130 ;
                            sp:predicate sparqlQuery:hasDatatype ;
                            sp:subject _:b128
                          ] [ sp:object _:b131 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b130
                          ] [ sp:object _:b124 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b131
                          ] [ sp:object _:b132 ;
                            sp:predicate sparqlQuery:hasFileType ;
                            sp:subject _:b128
                          ] [ sp:object _:b133 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b132
                          ] [ sp:object "interpreted-data" ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b133
                          ] [ sp:object _:b134 ;
                            sp:predicate sparqlQuery:hasPlatform ;
                            sp:subject _:b128
                          ] [ sp:object _:b135 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b134
                          ] [ sp:object _:b125 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b135
                          ] [ sp:object _:b136 ;
                            sp:predicate sparqlQuery:cancer ;
                            sp:subject _:b128
                          ] [ sp:object _:b137 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b136
                          ] [ sp:object _:b123 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b137
                          ] [ sp:object _:b138 ;
                            sp:predicate sparqlQuery:genomicCenter ;
                            sp:subject _:b128
                          ] [ sp:object _:b139 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b138
                          ] [ sp:object _:b126 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b139
                          ])
              ] .

sparqlQuery:CountPatientByCancer
      rdf:type sparqlQuery:SPARQLQuery ;
      rdfs:comment "Count patients by cancer type in the current graph"^^xsd:string , "In order to count distinct patients in the context of TCGA  the SPARQL query must ensure that the patient Ids are unique and are  counted uniquely. The patient id's as they exist in the graph are not unique; they are specific to collection site. To make them unique for the sake of querying, patient Id and collection site Id must be logically concatenated."^^xsd:string ;
      rdfs:label "Patient Count: By Cancer"^^xsd:string ;
      dc:creator foaf:JimLomax ;
      spin:query
              [ rdf:type sp:Select ;
                sp:groupBy (_:b140) ;
                sp:orderBy (_:b140) ;
                sp:resultVariables (_:b140 [ sp:expression
                                    [ rdf:type sp:Count ;
                                      sp:distinct "true"^^xsd:boolean ;
                                      sp:expression
                                              [ sp:varName "collectionSiteQualifiedPatientId"^^xsd:string
                                              ]
                                    ] ;
                            sp:varName "patientCount"^^xsd:string
                          ]) ;
                sp:where ([ sp:object sparqlQuery:TissueSample ;
                            sp:predicate rdf:type ;
                            sp:subject _:b141
                          ] [ sp:object _:b142 ;
                            sp:predicate sparqlQuery:hasCancer ;
                            sp:subject _:b141
                          ] [ sp:object _:b143 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b142
                          ] [ sp:object _:b140 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b143
                          ] [ sp:object _:b144 ;
                            sp:predicate sparqlQuery:hasCollectionSite ;
                            sp:subject _:b141
                          ] [ sp:object _:b145 ;
                            sp:predicate sparqlQuery:collectionSiteId ;
                            sp:subject _:b144
                          ] [ sp:object _:b146 ;
                            sp:predicate dc:identifier ;
                            sp:subject _:b145
                          ] [ sp:object _:b147 ;
                            sp:predicate sparqlQuery:hasPatient ;
                            sp:subject _:b141
                          ] [ sp:object _:b148 ;
                            sp:predicate sparqlQuery:hasPatientId ;
                            sp:subject _:b147
                          ] [ sp:object _:b149 ;
                            sp:predicate dc:identifier ;
                            sp:subject _:b148
                          ] [ rdf:type sp:Let ;
                            sp:expression
                                    [ rdf:type fn:concat ;
                                      sp:arg1 _:b146 ;
                                      sp:arg2 _:b149
                                    ] ;
                            sp:variable
                                    [ sp:varName "collectionSiteQualifiedPatientId"^^xsd:string
                                    ]
                          ])
              ] .

sparqlQuery:CountPatientByCancerDatatypePlatformCenterVersionModDateDataSourceAccessLevelTissueTypeDownloadDate
      rdf:type sparqlQuery:SPARQLQuery ;
      rdfs:comment "Count all Patients  in the current graph by cancer type, datatype, platform, genomic processing center, archive version, data source, access level,  tissue typ and download date (if any)."^^xsd:string ;
      rdfs:label "Patient Count: By Cancer, Datatype, Platform, GenomicCenter, ArchiveVersion, LastModifiedData, DataSource, AccessLevel,  TissueType and Download Date (if any)"^^xsd:string ;
      dc:creator foaf:JimLomax ;
      spin:query
              [ rdf:type sp:Select ;
                sp:groupBy (_:b150 _:b151 _:b152 _:b153 _:b154 _:b155 _:b156 _:b157 _:b158 _:b159 _:b160) ;
                sp:orderBy (_:b151 _:b152 _:b153 _:b156 _:b158 _:b159 _:b160) ;
                sp:resultVariables (_:b150 _:b151 _:b152 _:b154 _:b155 _:b153 _:b156 _:b157 _:b158 _:b159 _:b160 [ rdf:type sp:Count ;
                            sp:as   [ sp:varName "PatientCount"^^xsd:string
                                    ] ;
                            sp:distinct "true"^^xsd:boolean ;
                            sp:expression _:b161
                          ]) ;
                sp:where ([ sp:object <http://mdacc.org/Sample#TissueSample> ;
                            sp:predicate rdf:type ;
                            sp:subject _:b162
                          ] [ sp:object _:b163 ;
                            sp:predicate <http://mdacc.org/Sample#tissueSampleId> ;
                            sp:subject _:b162
                          ] [ sp:object
                                    [ sp:varName "sampleId"^^xsd:string
                                    ] ;
                            sp:predicate dc:identifier ;
                            sp:subject _:b163
                          ] [ sp:object _:b164 ;
                            sp:predicate <http://mdacc.org/Microarray#platform> ;
                            sp:subject _:b162
                          ] [ sp:object _:b165 ;
                            sp:predicate <http://mdacc.org/Microarray#platformIdentifier> ;
                            sp:subject _:b164
                          ] [ sp:object _:b154 ;
                            sp:predicate dc:identifier ;
                            sp:subject _:b165
                          ] [ sp:object _:b166 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b164
                          ] [ sp:object _:b155 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b166
                          ] [ sp:object _:b167 ;
                            sp:predicate <http://mdacc.org/Clinical#cancer> ;
                            sp:subject _:b162
                          ] [ sp:object _:b168 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b167
                          ] [ sp:object _:b151 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b168
                          ] [ sp:object _:b169 ;
                            sp:predicate <http://mdacc.org/Microarray#datatype> ;
                            sp:subject _:b164
                          ] [ sp:object _:b170 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b169
                          ] [ sp:object _:b152 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b170
                          ] [ sp:object _:b171 ;
                            sp:predicate <http://mdacc.org/Organization#genomicCenter> ;
                            sp:subject _:b162
                          ] [ sp:object _:b172 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b171
                          ] [ sp:object _:b153 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b172
                          ] [ sp:object _:b173 ;
                            sp:predicate <http://mdacc.org/Sample#tissueSampleOf> ;
                            sp:subject _:b162
                          ] [ sp:object _:b174 ;
                            sp:predicate <http://mdacc.org/Archive#archive> ;
                            sp:subject _:b173
                          ] [ sp:object _:b175 ;
                            sp:predicate <http://mdacc.org/Temporal#lastUpdatedOn> ;
                            sp:subject _:b173
                          ] [ sp:object _:b157 ;
                            sp:predicate <http://mdacc.org/Temporal#dateTime> ;
                            sp:subject _:b175
                          ] [ sp:object _:b176 ;
                            sp:predicate <http://mdacc.org/Archive#archiveVersion> ;
                            sp:subject _:b174
                          ] [ sp:object _:b156 ;
                            sp:predicate <http://mdacc.org/Archive#name> ;
                            sp:subject _:b176
                          ] [ sp:object _:b177 ;
                            sp:predicate <http://mdacc.org/Archive#project> ;
                            sp:subject _:b162
                          ] [ sp:object _:b178 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b177
                          ] [ sp:object _:b158 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b178
                          ] [ sp:object _:b179 ;
                            sp:predicate <http://mdacc.org/Archive#accessLevel> ;
                            sp:subject _:b173
                          ] [ sp:object _:b159 ;
                            sp:predicate <http://mdacc.org/Archive#name> ;
                            sp:subject _:b179
                          ] [ sp:object _:b180 ;
                            sp:predicate <http://mdacc.org/Sample#tissueType> ;
                            sp:subject _:b162
                          ] [ sp:object _:b160 ;
                            sp:predicate <http://mdacc.org/Archive#name> ;
                            sp:subject _:b180
                          ] [ sp:object _:b181 ;
                            sp:predicate <http://mdacc.org/Clinical#patient> ;
                            sp:subject _:b162
                          ] [ sp:object _:b182 ;
                            sp:predicate <http://mdacc.org/Clinical#patientId> ;
                            sp:subject _:b181
                          ] [ sp:object _:b161 ;
                            sp:predicate dc:identifier ;
                            sp:subject _:b182
                          ] [ rdf:type sp:Optional ;
                            sp:elements ([ sp:object _:b183 ;
                                        sp:predicate <http://mdacc.org/Archive#archiveDownload> ;
                                        sp:subject _:b173
                                      ] [ sp:object _:b184 ;
                                        sp:predicate <http://mdacc.org/Temporal#creationDate> ;
                                        sp:subject _:b183
                                      ] [ sp:object _:b150 ;
                                        sp:predicate <http://mdacc.org/Temporal#dateTime> ;
                                        sp:subject _:b184
                                      ])
                          ])
              ] .

sparqlQuery:CountProcessedDataArchiveListingByCancerDatatypePlatformCenter
      rdf:type sparqlQuery:SPARQLQuery ;
      rdfs:comment "Count all Processed Data  (Level 2) Archive Listings in the current graph context by cancer type, datatype, platform type and genomic processing center."^^xsd:string ;
      rdfs:label "Processed Data Count: By Cancer, Datatype, Platform, GenomicCenter"^^xsd:string ;
      dc:creator foaf:JimLomax ;
      spin:query
              [ rdf:type sp:Select ;
                sp:groupBy (_:b185 _:b186 _:b187 _:b188) ;
                sp:resultVariables (_:b185 _:b186 _:b187 _:b188 [ rdf:type sp:Count ;
                            sp:as   [ sp:varName "ProcessedDataFileCount"^^xsd:string
                                    ] ;
                            sp:expression _:b189
                          ]) ;
                sp:where ([ sp:object sparqlQuery:ArchiveListing ;
                            sp:predicate rdf:type ;
                            sp:subject _:b190
                          ] [ sp:object _:b191 ;
                            sp:predicate sparqlQuery:locatedBy ;
                            sp:subject _:b190
                          ] [ sp:object _:b189 ;
                            sp:predicate sparqlQuery:file ;
                            sp:subject _:b191
                          ] [ sp:object _:b192 ;
                            sp:predicate sparqlQuery:hasDatatype ;
                            sp:subject _:b190
                          ] [ sp:object _:b193 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b192
                          ] [ sp:object _:b186 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b193
                          ] [ sp:object _:b194 ;
                            sp:predicate sparqlQuery:hasFileType ;
                            sp:subject _:b190
                          ] [ sp:object _:b195 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b194
                          ] [ sp:object "processed-data" ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b195
                          ] [ sp:object _:b196 ;
                            sp:predicate sparqlQuery:hasPlatform ;
                            sp:subject _:b190
                          ] [ sp:object _:b197 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b196
                          ] [ sp:object _:b187 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b197
                          ] [ sp:object _:b198 ;
                            sp:predicate sparqlQuery:cancer ;
                            sp:subject _:b190
                          ] [ sp:object _:b199 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b198
                          ] [ sp:object _:b185 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b199
                          ] [ sp:object _:b200 ;
                            sp:predicate sparqlQuery:genomicCenter ;
                            sp:subject _:b190
                          ] [ sp:object _:b201 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b200
                          ] [ sp:object _:b188 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b201
                          ])
              ] .

sparqlQuery:CountProcessedDataArchiveListingByCancerDatatypePlatformCenterVersionDataSourceAccessLevel
      rdf:type sparqlQuery:SPARQLQuery ;
      rdfs:comment "Count all Processed Data (Level 2) files in the current graph by cancer type, datatype, platform type,  genomic processing center, archive version, data source and access level."^^xsd:string ;
      rdfs:label "Processed Data Count: By Cancer, Datatype, Platform, GenomicCenter, ArchiveVersion, DataSource, AccessLevel"^^xsd:string ;
      dc:creator foaf:JimLomax ;
      spin:query
              [ rdf:type sp:Select ;
                sp:groupBy (_:b202 _:b203 _:b204 _:b205 _:b206 _:b207 _:b208 _:b209) ;
                sp:orderBy (_:b202 _:b203 _:b206 _:b207 _:b208 _:b209) ;
                sp:resultVariables (_:b202 _:b203 _:b204 _:b205 _:b206 _:b207 _:b208 _:b209 [ rdf:type sp:Count ;
                            sp:as   [ sp:varName "ProcessedDataFileCount"^^xsd:string
                                    ] ;
                            sp:expression _:b210
                          ]) ;
                sp:where ([ sp:object sparqlQuery:ArchiveListing ;
                            sp:predicate rdf:type ;
                            sp:subject _:b211
                          ] [ sp:object _:b212 ;
                            sp:predicate sparqlQuery:locatedBy ;
                            sp:subject _:b211
                          ] [ sp:object _:b210 ;
                            sp:predicate sparqlQuery:file ;
                            sp:subject _:b212
                          ] [ sp:object _:b213 ;
                            sp:predicate sparqlQuery:hasDatatype ;
                            sp:subject _:b211
                          ] [ sp:object _:b214 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b213
                          ] [ sp:object _:b203 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b214
                          ] [ sp:object _:b215 ;
                            sp:predicate sparqlQuery:hasFileType ;
                            sp:subject _:b211
                          ] [ sp:object _:b216 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b215
                          ] [ sp:object "processed-data" ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b216
                          ] [ sp:object _:b217 ;
                            sp:predicate sparqlQuery:hasPlatform ;
                            sp:subject _:b211
                          ] [ sp:object _:b218 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b217
                          ] [ sp:object _:b204 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b218
                          ] [ sp:object _:b219 ;
                            sp:predicate sparqlQuery:platformIdentifier ;
                            sp:subject _:b217
                          ] [ sp:object _:b205 ;
                            sp:predicate dc:identifier ;
                            sp:subject _:b219
                          ] [ sp:object _:b220 ;
                            sp:predicate sparqlQuery:cancer ;
                            sp:subject _:b211
                          ] [ sp:object _:b221 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b220
                          ] [ sp:object _:b202 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b221
                          ] [ sp:object _:b222 ;
                            sp:predicate sparqlQuery:genomicCenter ;
                            sp:subject _:b211
                          ] [ sp:object _:b223 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b222
                          ] [ sp:object _:b206 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b223
                          ] [ sp:object _:b224 ;
                            sp:predicate sparqlQuery:hasArchive ;
                            sp:subject _:b211
                          ] [ sp:object _:b225 ;
                            sp:predicate sparqlQuery:hasArchiveVersion ;
                            sp:subject _:b224
                          ] [ sp:object _:b207 ;
                            sp:predicate sparqlQuery:name ;
                            sp:subject _:b225
                          ] [ sp:object _:b226 ;
                            sp:predicate sparqlQuery:project ;
                            sp:subject _:b211
                          ] [ sp:object _:b227 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b226
                          ] [ sp:object _:b208 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b227
                          ] [ sp:object _:b228 ;
                            sp:predicate sparqlQuery:hasAccessLevel ;
                            sp:subject _:b211
                          ] [ sp:object _:b209 ;
                            sp:predicate sparqlQuery:name ;
                            sp:subject _:b228
                          ])
              ] .

sparqlQuery:CountRawDataArchiveListingByCancerDatatypePlatformCenter
      rdf:type sparqlQuery:SPARQLQuery ;
      rdfs:comment "Count all Raw Data (Level 1) files in the current graph by cancer type, datatype, platform type and genomic processing center."^^xsd:string ;
      rdfs:label "Raw Data Count: By Cancer, Datatype, Platform, GenomicCenter"^^xsd:string ;
      dc:contributor foaf:JimLomax ;
      spin:query
              [ rdf:type sp:Select ;
                sp:groupBy (_:b229 _:b230 _:b231 _:b232) ;
                sp:resultVariables (_:b229 _:b230 _:b231 _:b232 [ rdf:type sp:Count ;
                            sp:as   [ sp:varName "RawDataFileCount"^^xsd:string
                                    ] ;
                            sp:expression _:b233
                          ]) ;
                sp:where ([ sp:object <http://mdacc.org/Archive#ArchiveListing> ;
                            sp:predicate rdf:type ;
                            sp:subject _:b234
                          ] [ sp:object _:b235 ;
                            sp:predicate <http://mdacc.org/Archive#locatedBy> ;
                            sp:subject _:b234
                          ] [ sp:object _:b233 ;
                            sp:predicate <http://mdacc.org/Archive#file> ;
                            sp:subject _:b235
                          ] [ sp:object _:b236 ;
                            sp:predicate <http://mdacc.org/Microarray#datatype> ;
                            sp:subject _:b234
                          ] [ sp:object _:b237 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b236
                          ] [ sp:object _:b230 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b237
                          ] [ sp:object _:b238 ;
                            sp:predicate <http://mdacc.org/Archive#fileType> ;
                            sp:subject _:b234
                          ] [ sp:object _:b239 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b238
                          ] [ sp:object "raw-data" ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b239
                          ] [ sp:object _:b240 ;
                            sp:predicate <http://mdacc.org/Microarray#platform> ;
                            sp:subject _:b234
                          ] [ sp:object _:b241 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b240
                          ] [ sp:object _:b231 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b241
                          ] [ sp:object _:b242 ;
                            sp:predicate <http://mdacc.org/Clinical#cancer> ;
                            sp:subject _:b234
                          ] [ sp:object _:b243 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b242
                          ] [ sp:object _:b229 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b243
                          ] [ sp:object _:b244 ;
                            sp:predicate <http://mdacc.org/Organization#genomicCenter> ;
                            sp:subject _:b234
                          ] [ sp:object _:b245 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b244
                          ] [ sp:object _:b232 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b245
                          ])
              ] .

sparqlQuery:CountRawDataArchiveListingByCancerDatatypePlatformCenterVersionModificationDateDataSourceAccessLevel
      rdf:type sparqlQuery:SPARQLQuery ;
      rdfs:comment "Count all Raw Data (Level 1) files in the current graph by cancer type, datatype, platform type,  genomic processing center, archive version, last modified  date, data source and access level."^^xsd:string ;
      rdfs:label "Raw Data Count: By Cancer, Datatype, Platform, GenomicCenter, ArchiveVersion, Last Modified Date,  DataSource, AccessLevel"^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:CountRawDataArchiveListings
      rdf:type sparqlQuery:SPARQLQuery ;
      rdfs:comment "Count all Raw Data (Level 1) files available in the current graph."^^xsd:string ;
      rdfs:label "Raw Data Count: All, Unique"^^xsd:string ;
      dc:creator foaf:JimLomax ;
      spin:query
              [ rdf:type sp:Select ;
                sp:resultVariables ([ rdf:type sp:Count ;
                            sp:expression _:b246
                          ]) ;
                sp:where ([ sp:object sparqlQuery:ArchiveListing ;
                            sp:predicate rdf:type ;
                            sp:subject _:b246
                          ] [ sp:object _:b247 ;
                            sp:predicate sparqlQuery:hasFileType ;
                            sp:subject _:b246
                          ] [ sp:object _:b248 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b247
                          ] [ sp:object "raw-data" ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b248
                          ])
              ] .

sparqlQuery:CountSamplesByCancer
      rdf:type sparqlQuery:SPARQLQuery ;
      rdfs:comment "Count all Tissue Samples in the current graph by cancer type."^^xsd:string ;
      rdfs:label "Sample Count: By Cancer"^^xsd:string ;
      dc:creator foaf:JimLomax ;
      spin:query
              [ rdf:type sp:Select ;
                sp:groupBy (_:b249) ;
                sp:orderBy (_:b249) ;
                sp:resultVariables (_:b249 [ sp:expression
                                    [ rdf:type sp:Count ;
                                      sp:distinct "true"^^xsd:boolean ;
                                      sp:expression
                                              [ sp:varName "sampleId"^^xsd:string
                                              ]
                                    ] ;
                            sp:varName "sampleCount"^^xsd:string
                          ]) ;
                sp:where ([ sp:object sparqlQuery:TissueSample ;
                            sp:predicate rdf:type ;
                            sp:subject _:b250
                          ] [ sp:object _:b251 ;
                            sp:predicate sparqlQuery:hasCancer ;
                            sp:subject _:b250
                          ] [ sp:object _:b252 ;
                            sp:predicate sparqlQuery:tissueSampleId ;
                            sp:subject _:b250
                          ] [ sp:object
                                    [ sp:varName "sampleId"^^xsd:string
                                    ] ;
                            sp:predicate dc:identifier ;
                            sp:subject _:b252
                          ] [ sp:object _:b253 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b251
                          ] [ sp:object _:b249 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b253
                          ])
              ] .

sparqlQuery:CountSamplesByCancerDatatypePlatformCenter
      rdf:type sparqlQuery:SPARQLQuery ;
      rdfs:comment "Count all Tissue Samples in the current graph by cancer type, datatype, platform and genomic processing center."^^xsd:string ;
      rdfs:label "Sample Count: By Cancer, Datatype, Platform, Genomic Center"^^xsd:string ;
      dc:creator foaf:JimLomax ;
      spin:query
              [ rdf:type sp:Select ;
                sp:groupBy (_:b254 _:b255 _:b256 _:b257 _:b258) ;
                sp:resultVariables (_:b254 _:b255 _:b256 _:b257 _:b258 [ rdf:type sp:Count ;
                            sp:as   [ sp:varName "SampleCount"^^xsd:string
                                    ] ;
                            sp:expression _:b259
                          ]) ;
                sp:where ([ sp:object sparqlQuery:TissueSample ;
                            sp:predicate rdf:type ;
                            sp:subject _:b260
                          ] [ sp:object _:b261 ;
                            sp:predicate sparqlQuery:tissueSampleId ;
                            sp:subject _:b260
                          ] [ sp:object _:b259 ;
                            sp:predicate dc:identifier ;
                            sp:subject _:b261
                          ] [ sp:object _:b262 ;
                            sp:predicate sparqlQuery:hasPlatform ;
                            sp:subject _:b260
                          ] [ sp:object _:b263 ;
                            sp:predicate sparqlQuery:platformIdentifier ;
                            sp:subject _:b262
                          ] [ sp:object _:b256 ;
                            sp:predicate dc:identifier ;
                            sp:subject _:b263
                          ] [ sp:object _:b264 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b262
                          ] [ sp:object _:b257 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b264
                          ] [ sp:object _:b265 ;
                            sp:predicate sparqlQuery:cancer ;
                            sp:subject _:b260
                          ] [ sp:object _:b266 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b265
                          ] [ sp:object _:b254 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b266
                          ] [ sp:object _:b267 ;
                            sp:predicate sparqlQuery:hasDatatype ;
                            sp:subject _:b262
                          ] [ sp:object _:b268 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b267
                          ] [ sp:object _:b255 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b268
                          ] [ sp:object _:b269 ;
                            sp:predicate sparqlQuery:genomicCenter ;
                            sp:subject _:b260
                          ] [ sp:object _:b270 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b269
                          ] [ sp:object _:b258 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b270
                          ])
              ] .

sparqlQuery:CountSamplesByCancerDatatypePlatformCenterVersion
      rdf:type sparqlQuery:SPARQLQuery ;
      rdfs:comment "Count all Tissue Samples in the current graph by cancer type, datatype, platform, genomic processing center and archive version."^^xsd:string ;
      rdfs:label "Sample Count: By Cancer, Datatype, Platform, GenomicCenter, ArchiveVersion"^^xsd:string ;
      dc:creator foaf:JimLomax ;
      spin:query
              [ rdf:type sp:Select ;
                sp:groupBy (_:b271 _:b272 _:b273 _:b274 _:b275 _:b276) ;
                sp:resultVariables (_:b271 _:b272 _:b273 _:b274 _:b275 _:b276 [ rdf:type sp:Count ;
                            sp:as   [ sp:varName "SampleCount"^^xsd:string
                                    ] ;
                            sp:expression _:b277
                          ]) ;
                sp:where ([ sp:object <http://mdacc.org/Sample#TissueSample> ;
                            sp:predicate rdf:type ;
                            sp:subject _:b278
                          ] [ sp:object _:b279 ;
                            sp:predicate <http://mdacc.org/Sample#tissueSampleId> ;
                            sp:subject _:b278
                          ] [ sp:object _:b277 ;
                            sp:predicate dc:identifier ;
                            sp:subject _:b279
                          ] [ sp:object _:b280 ;
                            sp:predicate <http://mdacc.org/Microarray#platform> ;
                            sp:subject _:b278
                          ] [ sp:object _:b281 ;
                            sp:predicate <http://mdacc.org/Microarray#platformIdentifier> ;
                            sp:subject _:b280
                          ] [ sp:object _:b282 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b280
                          ] [ sp:object _:b274 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b282
                          ] [ sp:object _:b273 ;
                            sp:predicate dc:identifier ;
                            sp:subject _:b281
                          ] [ sp:object _:b283 ;
                            sp:predicate <http://mdacc.org/Clinical#cancer> ;
                            sp:subject _:b278
                          ] [ sp:object _:b284 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b283
                          ] [ sp:object _:b271 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b284
                          ] [ sp:object _:b285 ;
                            sp:predicate <http://mdacc.org/Microarray#datatype> ;
                            sp:subject _:b280
                          ] [ sp:object _:b286 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b285
                          ] [ sp:object _:b272 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b286
                          ] [ sp:object _:b287 ;
                            sp:predicate <http://mdacc.org/Organization#genomicCenter> ;
                            sp:subject _:b278
                          ] [ sp:object _:b288 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b287
                          ] [ sp:object _:b275 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b288
                          ] [ sp:object _:b289 ;
                            sp:predicate <http://mdacc.org/Sample#tissueSampleOf> ;
                            sp:subject _:b278
                          ] [ sp:object _:b290 ;
                            sp:predicate <http://mdacc.org/Archive#archive> ;
                            sp:subject _:b289
                          ] [ sp:object _:b291 ;
                            sp:predicate <http://mdacc.org/Archive#archiveVersion> ;
                            sp:subject _:b290
                          ] [ sp:object _:b276 ;
                            sp:predicate <http://mdacc.org/Archive#name> ;
                            sp:subject _:b291
                          ])
              ] .

sparqlQuery:CountSamplesByCancerDatatypePlatformCenterVersion2
      rdf:type sparqlQuery:SPARQLQuery ;
      rdfs:comment "Count all Tissue Samples in the current graph by cancer type, datatype, platform, genomic processing center, archive version, project, access level,  tissue typ and download date (if any)."^^xsd:string ;
      rdfs:label "Sample Count: By Cancer, Datatype, Platform, GenomicCenter, ArchiveVersion, LastModifiedData, Project, AccessLevel,  TissueType and Download Date (if any)"^^xsd:string ;
      dc:creator foaf:JimLomax ;
      spin:query
              [ rdf:type sp:Select ;
                sp:groupBy (_:b292 _:b293 _:b294 _:b295 _:b296 _:b297) ;
                sp:orderBy (_:b292 _:b293 _:b294 _:b297 [ sp:varName "Project"^^xsd:string
                          ]) ;
                sp:resultVariables (_:b292 _:b293 _:b295 _:b296 _:b294 _:b297 [ rdf:type sp:Count ;
                            sp:as   [ sp:varName "SampleCount"^^xsd:string
                                    ] ;
                            sp:expression _:b298
                          ]) ;
                sp:where ([ sp:object <http://mdacc.org/Sample#TissueSample> ;
                            sp:predicate rdf:type ;
                            sp:subject _:b299
                          ] [ sp:object _:b300 ;
                            sp:predicate <http://mdacc.org/Sample#tissueSampleId> ;
                            sp:subject _:b299
                          ] [ sp:object _:b298 ;
                            sp:predicate dc:identifier ;
                            sp:subject _:b300
                          ] [ sp:object _:b301 ;
                            sp:predicate <http://mdacc.org/Microarray#platform> ;
                            sp:subject _:b299
                          ] [ sp:object _:b302 ;
                            sp:predicate <http://mdacc.org/Microarray#platformIdentifier> ;
                            sp:subject _:b301
                          ] [ sp:object _:b295 ;
                            sp:predicate dc:identifier ;
                            sp:subject _:b302
                          ] [ sp:object _:b303 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b301
                          ] [ sp:object _:b296 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b303
                          ] [ sp:object _:b304 ;
                            sp:predicate <http://mdacc.org/Clinical#cancer> ;
                            sp:subject _:b299
                          ] [ sp:object _:b305 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b304
                          ] [ sp:object _:b292 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b305
                          ] [ sp:object _:b306 ;
                            sp:predicate <http://mdacc.org/Microarray#datatype> ;
                            sp:subject _:b301
                          ] [ sp:object _:b307 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b306
                          ] [ sp:object _:b293 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b307
                          ] [ sp:object _:b308 ;
                            sp:predicate <http://mdacc.org/Organization#genomicCenter> ;
                            sp:subject _:b299
                          ] [ sp:object _:b309 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b308
                          ] [ sp:object _:b294 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b309
                          ] [ sp:object _:b310 ;
                            sp:predicate <http://mdacc.org/Sample#tissueSampleOf> ;
                            sp:subject _:b299
                          ] [ sp:object _:b311 ;
                            sp:predicate <http://mdacc.org/Archive#archive> ;
                            sp:subject _:b310
                          ] [ sp:object _:b312 ;
                            sp:predicate <http://mdacc.org/Archive#archiveVersion> ;
                            sp:subject _:b311
                          ] [ sp:object _:b297 ;
                            sp:predicate <http://mdacc.org/Archive#name> ;
                            sp:subject _:b312
                          ])
              ] .

sparqlQuery:CountSamplesByCancerDatatypePlatformCenterVersionModDateDataSourceAccessLevelTissueTypeDownloadDate
      rdf:type sparqlQuery:SPARQLQuery ;
      rdfs:comment "Count all Tissue Samples in the current graph by cancer type, datatype, platform, genomic processing center, archive version, project, access level,  tissue typ and download date (if any)."^^xsd:string ;
      rdfs:label "Sample Count: By Cancer, Datatype, Platform, GenomicCenter, ArchiveVersion, LastModifiedData, Project, AccessLevel,  TissueType and Download Date (if any)"^^xsd:string ;
      dc:creator foaf:JimLomax ;
      spin:query
              [ rdf:type sp:Select ;
                sp:groupBy (_:b313 _:b314 _:b315 _:b316 _:b317 _:b318 _:b319 _:b320 _:b321 _:b322 _:b323) ;
                sp:orderBy (_:b314 _:b315 _:b316 _:b319 _:b321 _:b322 _:b323) ;
                sp:resultVariables (_:b313 _:b314 _:b315 _:b317 _:b318 _:b316 _:b319 _:b320 _:b321 _:b322 _:b323 [ rdf:type sp:Count ;
                            sp:as   [ sp:varName "SampleCount"^^xsd:string
                                    ] ;
                            sp:distinct "true"^^xsd:boolean ;
                            sp:expression _:b324
                          ]) ;
                sp:where ([ sp:object <http://mdacc.org/Sample#TissueSample> ;
                            sp:predicate rdf:type ;
                            sp:subject _:b325
                          ] [ sp:object _:b326 ;
                            sp:predicate <http://mdacc.org/Sample#tissueSampleId> ;
                            sp:subject _:b325
                          ] [ sp:object _:b324 ;
                            sp:predicate dc:identifier ;
                            sp:subject _:b326
                          ] [ sp:object _:b327 ;
                            sp:predicate <http://mdacc.org/Microarray#platform> ;
                            sp:subject _:b325
                          ] [ sp:object _:b328 ;
                            sp:predicate <http://mdacc.org/Microarray#platformIdentifier> ;
                            sp:subject _:b327
                          ] [ sp:object _:b317 ;
                            sp:predicate dc:identifier ;
                            sp:subject _:b328
                          ] [ sp:object _:b329 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b327
                          ] [ sp:object _:b318 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b329
                          ] [ sp:object _:b330 ;
                            sp:predicate <http://mdacc.org/Clinical#cancer> ;
                            sp:subject _:b325
                          ] [ sp:object _:b331 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b330
                          ] [ sp:object _:b314 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b331
                          ] [ sp:object _:b332 ;
                            sp:predicate <http://mdacc.org/Microarray#datatype> ;
                            sp:subject _:b327
                          ] [ sp:object _:b333 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b332
                          ] [ sp:object _:b315 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b333
                          ] [ sp:object _:b334 ;
                            sp:predicate <http://mdacc.org/Organization#genomicCenter> ;
                            sp:subject _:b325
                          ] [ sp:object _:b335 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b334
                          ] [ sp:object _:b316 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b335
                          ] [ sp:object _:b336 ;
                            sp:predicate <http://mdacc.org/Sample#tissueSampleOf> ;
                            sp:subject _:b325
                          ] [ sp:object _:b337 ;
                            sp:predicate <http://mdacc.org/Archive#archive> ;
                            sp:subject _:b336
                          ] [ sp:object _:b338 ;
                            sp:predicate <http://mdacc.org/Temporal#lastUpdatedOn> ;
                            sp:subject _:b336
                          ] [ sp:object _:b320 ;
                            sp:predicate <http://mdacc.org/Temporal#dateTime> ;
                            sp:subject _:b338
                          ] [ sp:object _:b339 ;
                            sp:predicate <http://mdacc.org/Archive#archiveVersion> ;
                            sp:subject _:b337
                          ] [ sp:object _:b319 ;
                            sp:predicate <http://mdacc.org/Archive#name> ;
                            sp:subject _:b339
                          ] [ sp:object _:b340 ;
                            sp:predicate <http://mdacc.org/Archive#project> ;
                            sp:subject _:b325
                          ] [ sp:object _:b341 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b340
                          ] [ sp:object _:b321 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b341
                          ] [ sp:object _:b342 ;
                            sp:predicate <http://mdacc.org/Archive#accessLevel> ;
                            sp:subject _:b336
                          ] [ sp:object _:b322 ;
                            sp:predicate <http://mdacc.org/Archive#name> ;
                            sp:subject _:b342
                          ] [ sp:object _:b343 ;
                            sp:predicate <http://mdacc.org/Sample#tissueType> ;
                            sp:subject _:b325
                          ] [ sp:object _:b323 ;
                            sp:predicate <http://mdacc.org/Archive#name> ;
                            sp:subject _:b343
                          ] [ rdf:type sp:Optional ;
                            sp:elements ([ sp:object _:b344 ;
                                        sp:predicate <http://mdacc.org/Archive#archiveDownload> ;
                                        sp:subject _:b336
                                      ] [ sp:object _:b345 ;
                                        sp:predicate <http://mdacc.org/Temporal#creationDate> ;
                                        sp:subject _:b344
                                      ] [ sp:object _:b313 ;
                                        sp:predicate <http://mdacc.org/Temporal#dateTime> ;
                                        sp:subject _:b345
                                      ])
                          ])
              ] .

sparqlQuery:CountSamplesByCancerDatatypePlatformCenterVersionModDateTissueTypeDownloadDate
      rdf:type sparqlQuery:SPARQLQuery ;
      rdfs:comment "Count all Tissue Samples in the current graph by cancer type, datatype, platform, genomic processing center, archive version, project, access level,  tissue typ and download date (if any)."^^xsd:string ;
      rdfs:label "Sample Count: By Cancer, Datatype, Platform, GenomicCenter, ArchiveVersion, LastModifiedData, Project, AccessLevel,  TissueType and Download Date (if any)"^^xsd:string ;
      dc:creator foaf:JimLomax ;
      spin:query
              [ rdf:type sp:Select ;
                sp:groupBy (_:b346 _:b347 _:b348 _:b349 _:b350 _:b351 _:b352 _:b353 _:b354) ;
                sp:orderBy (_:b347 _:b348 _:b349 _:b352 [ sp:varName "Project"^^xsd:string
                          ] [ sp:varName "AccessLevel"^^xsd:string
                          ] _:b354) ;
                sp:resultVariables (_:b346 _:b347 _:b348 _:b350 _:b351 _:b349 _:b352 _:b353 _:b354 [ rdf:type sp:Count ;
                            sp:as   [ sp:varName "SampleCount"^^xsd:string
                                    ] ;
                            sp:expression _:b355
                          ]) ;
                sp:where ([ sp:object <http://mdacc.org/Sample#TissueSample> ;
                            sp:predicate rdf:type ;
                            sp:subject _:b356
                          ] [ sp:object _:b357 ;
                            sp:predicate <http://mdacc.org/Sample#tissueSampleId> ;
                            sp:subject _:b356
                          ] [ sp:object _:b355 ;
                            sp:predicate dc:identifier ;
                            sp:subject _:b357
                          ] [ sp:object _:b358 ;
                            sp:predicate <http://mdacc.org/Microarray#platform> ;
                            sp:subject _:b356
                          ] [ sp:object _:b359 ;
                            sp:predicate <http://mdacc.org/Microarray#platformIdentifier> ;
                            sp:subject _:b358
                          ] [ sp:object _:b350 ;
                            sp:predicate dc:identifier ;
                            sp:subject _:b359
                          ] [ sp:object _:b360 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b358
                          ] [ sp:object _:b351 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b360
                          ] [ sp:object _:b361 ;
                            sp:predicate <http://mdacc.org/Clinical#cancer> ;
                            sp:subject _:b356
                          ] [ sp:object _:b362 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b361
                          ] [ sp:object _:b347 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b362
                          ] [ sp:object _:b363 ;
                            sp:predicate <http://mdacc.org/Microarray#datatype> ;
                            sp:subject _:b358
                          ] [ sp:object _:b364 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b363
                          ] [ sp:object _:b348 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b364
                          ] [ sp:object _:b365 ;
                            sp:predicate <http://mdacc.org/Organization#genomicCenter> ;
                            sp:subject _:b356
                          ] [ sp:object _:b366 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b365
                          ] [ sp:object _:b349 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b366
                          ] [ sp:object _:b367 ;
                            sp:predicate <http://mdacc.org/Sample#tissueSampleOf> ;
                            sp:subject _:b356
                          ] [ sp:object _:b368 ;
                            sp:predicate <http://mdacc.org/Archive#archive> ;
                            sp:subject _:b367
                          ] [ sp:object _:b369 ;
                            sp:predicate <http://mdacc.org/Temporal#lastUpdatedOn> ;
                            sp:subject _:b367
                          ] [ sp:object _:b353 ;
                            sp:predicate <http://mdacc.org/Temporal#dateTime> ;
                            sp:subject _:b369
                          ] [ sp:object _:b370 ;
                            sp:predicate <http://mdacc.org/Archive#archiveVersion> ;
                            sp:subject _:b368
                          ] [ sp:object _:b352 ;
                            sp:predicate <http://mdacc.org/Archive#name> ;
                            sp:subject _:b370
                          ] [ sp:object _:b371 ;
                            sp:predicate <http://mdacc.org/Sample#tissueType> ;
                            sp:subject _:b356
                          ] [ sp:object _:b354 ;
                            sp:predicate <http://mdacc.org/Archive#name> ;
                            sp:subject _:b371
                          ] [ rdf:type sp:Optional ;
                            sp:elements ([ sp:object _:b372 ;
                                        sp:predicate <http://mdacc.org/Archive#archiveDownload> ;
                                        sp:subject _:b367
                                      ] [ sp:object _:b373 ;
                                        sp:predicate <http://mdacc.org/Temporal#creationDate> ;
                                        sp:subject _:b372
                                      ] [ sp:object _:b346 ;
                                        sp:predicate <http://mdacc.org/Temporal#dateTime> ;
                                        sp:subject _:b373
                                      ])
                          ])
              ] .

sparqlQuery:CreateServiceOrientedArchitecture
      rdf:type sparqlQuery:Goal .

sparqlQuery:CreateUseCaseUseCase
      rdf:type sparqlQuery:UseCase ;
      sparqlQuery:hasGoal sparqlQuery:ModelUseCasesSemanticallyGoal ;
      sparqlQuery:involvesConcept
              sparqlQuery:UseCase , sparqlQuery:Goal .

sparqlQuery:DNAAnalyte
      rdf:type owl:Class ;
      rdfs:comment "The analyte in question is DNA"^^xsd:string ;
      rdfs:subClassOf sparqlQuery:Analyte ;
      sparqlQuery:designNote
              "DNA Analyte is both DNA and an analyte."^^xsd:string , "An instance of DNA Analyte cannot be an instance of any other class of Analyte (disjoint)."^^xsd:string ;
      dc:creator foaf:JimLomax ;
      owl:disjointWith sparqlQuery:EBVImmortalizedNormalAnalyte , sparqlQuery:RepliGDNAAnalyte , sparqlQuery:TotalRNAAnalyte , sparqlQuery:GenomePlexAmplifiedDNAAnalyte .

sparqlQuery:DNAAnalyte1_DNAAnalyte
      rdf:type sparqlQuery:DNAAnalyte .

sparqlQuery:DNAAnalyte2_DNAAnalyte
      rdf:type sparqlQuery:DNAAnalyte .

sparqlQuery:DNAMethylationBioAssayAffymetrix
      rdf:type mage:PhysicalBioAssay .

sparqlQuery:DNATissueSample
      rdf:type owl:Class ;
      rdfs:subClassOf sparqlQuery:TissueSample ;
      owl:equivalentClass
              [ rdf:type owl:Class ;
                owl:intersectionOf (sparqlQuery:TissueSample [ rdf:type owl:Restriction ;
                            owl:hasValue sparqlQuery:SampleType_DNA ;
                            owl:onProperty sparqlQuery:sampleType
                          ])
              ] .

sparqlQuery:DataCoordinatingCenter
      rdf:type owl:Class ;
      rdfs:comment "The Data Coordinating Center is the central repository for TCGA data. It is also responsible for the quality control of data entering the TCGA database. The DCC also maintains the TCGA Data Portal which is where users access TCGA data. This work is performed under contract by bioinformatics scientists and developers from SRA International, Inc"^^xsd:string ;
      rdfs:subClassOf sparqlQuery:Organization ;
      dc:creator foaf:JimLomax .

sparqlQuery:DataIntegrity
      rdf:type sparqlQuery:Goal ;
      sparqlQuery:hasGoal sparqlQuery:ResearchDataIntegrity ;
      owl:sameAs sparqlQuery:EnsureOrganizationWideDataIntegrity .

sparqlQuery:DeathPatient1_PatientEvent
      rdf:type sparqlQuery:DeathPatientEvent ;
      sparqlQuery:eventTarget
              sparqlQuery:Patient1_Patient ;
      time-entry:ends sparqlQuery:Birth1_PatientEvent ;
      time-entry:inCalendarClockDataType
              "2010-09-08T17:26:07.835"^^xsd:dateTime .

sparqlQuery:DeathPatientEvent
      rdf:type owl:Class ;
      rdfs:subClassOf sparqlQuery:PatientEvent ;
      sparqlQuery:designNote
              "The concept of a Death in the context of a Patient. A Death Event is temporal as opposed to a Death, which is merely existential."^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:Deceased_VitalStatus
      rdf:type sparqlQuery:VitalStatus .

sparqlQuery:DiffuseAnaplasia_Anaplasia
      rdf:type sparqlQuery:Anaplasia ;
      rdfs:comment "Diffuse anaplasia is not focused in a particular area, it is wdespread within a anatomical region."^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:DiseaseMarker
      rdf:type owl:Class ;
      rdfs:comment "Specific molecular signature of disease, physiological measurement, genotype structural or functional characteristic, metabolic changes, or other determinant that may simplify the diagnostic process, make diagnoses more accurate, distinguish different causes of disease, or enable physicians to make diagnoses before symptoms appear and to track disease progression."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:Biomarker ;
      dc:creator foaf:JimLomax .

sparqlQuery:DiseaseOutcome
      rdf:type owl:Class ;
      rdfs:comment "The result of a disease. There are most likely members to this concept that are defined by NCI Thesaurus."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:Outcome ;
      dc:creator foaf:JimLomax .

sparqlQuery:DisplayArtifact
      rdf:type owl:Class ;
      rdfs:comment "Any artifact of an Archive whose contents do not require further processing; they can be displayed as-is."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:ArchiveListing ;
      dc:creator foaf:JimLomax .

sparqlQuery:DocumentAtrifact
      rdf:type owl:Class ;
      rdfs:comment "Any text-based document that is meant to be viewed (and possible edited) but is not subject to computation to derive the information it contains."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:DisplayArtifact ;
      dc:creator foaf:JimLomax .

sparqlQuery:Dosage
      rdf:type owl:Class ;
      rdfs:comment "A quantity of an agent (such as substance or energy) administered, taken, or absorbed at one time."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:Quantity ;
      sparqlQuery:designNote
              "A Dosage instance has  the capacity to be labeled differently to support different perspectives. For example one consumer may label a dosage by its numeric value, however another may deem it \"Normal Dosage\", \"Experimental Dosage\", \"Clinical Trial 2 Dosage\", etc. For this reason a SKOS labeling system will be employed."^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:DosageUnits
      rdf:type owl:Class ;
      rdfs:subClassOf sparqlQuery:Units ;
      dc:creator foaf:JimLomax .

sparqlQuery:DrugTherapy
      rdf:type owl:Class ;
      rdfs:comment "Administration of medication"^^xsd:string ;
      rdfs:subClassOf sparqlQuery:TherapeuticProcedure ;
      dc:creator foaf:JimLomax .

sparqlQuery:DrugTherapyPatientEvent
      rdf:type owl:Class ;
      rdfs:comment "Administration of medication to a Patient, temporally."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:TherapeuticProcedurePatientEvent ;
      sparqlQuery:designNote
              "A Drug Therapy Patient Event is a Patient Event generated by (event source) a Drug Therapy"^^xsd:string ;
      dc:creator foaf:JimLomax ;
      owl:equivalentClass
              [ rdf:type owl:Class ;
                owl:intersectionOf (sparqlQuery:TherapeuticProcedurePatientEvent [ rdf:type owl:Restriction ;
                            owl:onProperty sparqlQuery:eventSource ;
                            owl:someValuesFrom sparqlQuery:DrugTherapy
                          ])
              ] .

sparqlQuery:DukeBrainBankOwner
      rdf:type mage:Person .

sparqlQuery:DurationDescription_30Days
      rdf:type time-entry:DurationDescription ;
      time-entry:days "30"^^xsd:decimal .

sparqlQuery:DurationTemporalEvent
      rdf:type owl:Class ;
      rdfs:subClassOf sparqlQuery:TemporalEvent .

sparqlQuery:EBVImmortalizedNormalAnalyte
      rdf:type owl:Class ;
      rdfs:comment "The analyte in question is Epstein-Barr virus immortalized B cells used as a control group."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:Analyte ;
      sparqlQuery:designNote
              "DNA Analyte is both DNA and an analyte."^^xsd:string , "An instance of EBVImmortalizedNormalAnalyte cannot be an instance of any other class of Analyte (disjoint)."^^xsd:string ;
      dc:creator foaf:JimLomax ;
      owl:disjointWith sparqlQuery:RepliGDNAAnalyte , sparqlQuery:DNAAnalyte , sparqlQuery:TotalRNAAnalyte , sparqlQuery:GenomePlexAmplifiedDNAAnalyte .

sparqlQuery:EBVImmortalizedNormalAnalyte1_EBVImmortalizedNormalAnalyte
      rdf:type sparqlQuery:EBVImmortalizedNormalAnalyte .

sparqlQuery:EBVImmortalizedTissueSample
      rdf:type owl:Class ;
      rdfs:subClassOf sparqlQuery:TissueSample ;
      owl:equivalentClass
              [ rdf:type owl:Class ;
                owl:intersectionOf (sparqlQuery:TissueSample [ rdf:type owl:Restriction ;
                            owl:hasValue sparqlQuery:SampleType_EBVImmortalizedNormal ;
                            owl:onProperty sparqlQuery:sampleType
                          ])
              ] .

sparqlQuery:EndocrineTherapy
      rdf:type owl:Class ;
      rdfs:comment "Treatment that adds, blocks, or removes hormones"^^xsd:string ;
      rdfs:subClassOf sparqlQuery:TherapeuticProcedure ;
      dc:creator foaf:JimLomax .

sparqlQuery:EndocrineTherapyPatientEvent
      rdf:type owl:Class ;
      rdfs:comment "Adminstration of Endocrine Therapy to Patient, temporally."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:TherapeuticProcedurePatientEvent ;
      sparqlQuery:designNote
              "An Endocrine Therapy Patietn Event is a Patient Event that is gernated by (event source) a Endocrine Therapy"^^xsd:string ;
      dc:creator foaf:JimLomax ;
      owl:equivalentClass
              [ rdf:type owl:Class ;
                owl:intersectionOf (sparqlQuery:TherapeuticProcedurePatientEvent [ rdf:type owl:Restriction ;
                            owl:onProperty sparqlQuery:eventSource ;
                            owl:someValuesFrom sparqlQuery:EndocrineTherapy
                          ])
              ] .

sparqlQuery:EnsureOrganizationWideDataIntegrity
      rdf:type sparqlQuery:Goal ;
      sparqlQuery:realizedBy
              sparqlQuery:DataIntegrity .

sparqlQuery:ExampleTissueSample
      rdf:type sparqlQuery:TissueSample ;
      sparqlQuery:collectionSite
              sparqlQuery:TCGACollectionSite_MDABrainBank ;
      sparqlQuery:patient sparqlQuery:Patient1_Patient ;
      sparqlQuery:project sparqlQuery:TCGAProject ;
      sparqlQuery:tissueType
              sparqlQuery:ExampleTissueType .

sparqlQuery:ExampleTissueType
      rdf:type sparqlQuery:TissueType .

sparqlQuery:Example_Weight
      rdf:type sparqlQuery:Weight ;
      sparqlQuery:units sparqlQuery:Pounds_WeightUnits ;
      sparqlQuery:value "10.1"^^xsd:string .

sparqlQuery:ExcisionSurgicalProcedure
      rdf:type owl:Class ;
      rdfs:comment "Represents a surgical excision"^^xsd:string ;
      rdfs:subClassOf sparqlQuery:SurgicalProcedure ;
      sparqlQuery:designNote
              "in TCGA, a Surgical Excision is performed to extract a tumor due to the single-focused cancer domain."^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:ExcisionSurgicalProcedurePatientEvent
      rdf:type owl:Class ;
      rdfs:comment "Removal of tissue or part or all of an organ by surgery."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:SurgicalProcedurePatientEvent ;
      dc:creator foaf:JimLomax ;
      owl:equivalentClass
              [ rdf:type owl:Class ;
                owl:intersectionOf (sparqlQuery:SurgicalProcedurePatientEvent [ rdf:type owl:Restriction ;
                            owl:onProperty sparqlQuery:eventSource ;
                            owl:someValuesFrom sparqlQuery:ExcisionSurgicalProcedure
                          ])
              ] .

sparqlQuery:ExtensionUseCase
      rdf:type owl:Class ;
      rdfs:comment "An Extension to a Use Case a branch away from the main flow of the use case to handle special circumstances. An Extension branches off at a specific ordered activity associated with the Use Case due to a precoordinated system condition The extension point identifies the ordered activity in the extended Use Case that will be augmented by a set of Extension Activities. After the branch a set of Ordered Activities are executed; this is the set of Extension Acitivites. After the Extension Activies are executed, the extended Use Case resumes at the branch point."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:UseCase ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:maxCardinality "1"^^xsd:int ;
                owl:onProperty sparqlQuery:hasBranchConidition
              ] ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:onProperty sparqlQuery:extendsUseCase ;
                owl:someValuesFrom sparqlQuery:UseCase
              ] ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:maxCardinality "1"^^xsd:int ;
                owl:onProperty sparqlQuery:hasExtensionPoint
              ] ;
      dc:creator foaf:JimLomax .

sparqlQuery:ExternalBeamRadiationTherapy
      rdf:type owl:Class ;
      rdfs:comment "Radiation therapy that uses a machine to aim high-energy rays at the cancer."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:RadiationTherapy ;
      dc:creator foaf:JimLomax .

sparqlQuery:ExternalBeamRadiationTherapy1_TherapeuticProcedure
      rdf:type sparqlQuery:ExternalBeamRadiationTherapy .

sparqlQuery:Female_Gender
      rdf:type sparqlQuery:Gender .

sparqlQuery:FocalAnaplasia_Anaplasia
      rdf:type sparqlQuery:Anaplasia ;
      rdfs:comment "Focal anaplasia applies only to tumors with anaplasia confined to one or a few discrete loci within the primary tumor, with no anaplasia or marked nuclear atypia elsewhere"^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:FollowUpPatientEvent
      rdf:type owl:Class ;
      rdfs:comment "The process by which information about the health status of an individual is obtained after a study has officially closed; an activity that continues something that has already begun or that repeats something that has already been done."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:PatientEvent ;
      sparqlQuery:domainQuestion
              "Is this the same as follow_up appointment under appointment hierarchy?"^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:FollowupAppointmentEvent
      rdf:type owl:Class ;
      rdfs:subClassOf sparqlQuery:MedicalAppointmentPatientEvent ;
      dc:creator foaf:JimLomax .

sparqlQuery:Freezing
      rdf:type owl:Class ;
      rdfs:subClassOf sparqlQuery:TemporalEvent ;
      dc:creator foaf:JimLomax .

sparqlQuery:Functions_1
      rdf:type spin:Function ;
      rdfs:subClassOf spin:Functions .

sparqlQuery:GelElectrophoresis
      rdf:type owl:Class ;
      rdfs:comment "Gel electrophoresis is a method of separating large molecules (such as DNA fragments or proteins) from a mixture of similar molecules by electrophoretic filtration through a gelatinous matrix. Subject to an electric field, each molecule in the sample mixture migrates through the matrix at a different rate, depending mainly on electrical charge and size, resulting in spatial separation within the matrix of each molecular species in the sample mixture. Agarose and acrylamide in a cylindrical tube or slab gel are commonly used media for electrophoresis of proteins and nucleic acids."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:LabProcedure ;
      dc:creator foaf:JimLomax .

sparqlQuery:Gemistocyte
      rdf:type owl:Class ;
      rdfs:comment "A pathologic astrocyte in which the cell body swells and contains glial filaments and an eccentric nucleus; seen particularly in demyelinating and neoplastic conditions. A gemistocytic presence in the context of of known astrocytoma is a indication of cancer progression and a worsening prognosis for the patient."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:CancerProgressionIndicator ;
      sparqlQuery:designNote
              "Gemistocyte may become an instance of cancer progression inidcator and an instance of astrocyte."^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:Gender
      rdf:type owl:Class ;
      rdfs:comment "Human gender"^^xsd:string ;
      rdfs:subClassOf skos:Concept ;
      sparqlQuery:designNote
              "Since any instance of Gender can have multiple labels (Male, M), a skos labeling system will be employed."^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:GeneralAnaplasia_Anaplasia
      rdf:type sparqlQuery:Anaplasia ;
      rdfs:comment "Anaplasia that is cannot be classificed as focal or diffuse"^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:GenomePlexAmplifiedDNAAnalyte
      rdf:type owl:Class ;
      rdfs:comment "The analyte in question  is DNA collected from whole genome amplification by GenomePlex’s chromatin imunoprecipitation."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:Analyte ;
      sparqlQuery:designNote
              "The analyte is DNA at the least, however the specific amplification process may be important or somehow leave a characteristic mark on the DNA."^^xsd:string , "Until we know more about this type of amplification this class of Analyte will remain distinct (although it sounds like it might need to be a subclass of DNAAnalyte)"^^xsd:string ;
      dc:creator foaf:JimLomax ;
      owl:disjointWith sparqlQuery:EBVImmortalizedNormalAnalyte , sparqlQuery:RepliGDNAAnalyte , sparqlQuery:DNAAnalyte , sparqlQuery:TotalRNAAnalyte .

sparqlQuery:GenomePlexAmplifiedDNAAnalyte1_GenomePlexAmplifiedDNAAnalyte
      rdf:type sparqlQuery:GenomePlexAmplifiedDNAAnalyte .

sparqlQuery:GenomePlexAmplifiedDNATissueSample
      rdf:type owl:Class ;
      rdfs:subClassOf sparqlQuery:TissueSample ;
      owl:equivalentClass
              [ rdf:type owl:Class ;
                owl:intersectionOf (sparqlQuery:TissueSample [ rdf:type owl:Restriction ;
                            owl:hasValue sparqlQuery:SampleType_GenomePlexAmplifiedDNA ;
                            owl:onProperty sparqlQuery:sampleType
                          ])
              ] .

sparqlQuery:GenomicCharacterizationCenter
      rdf:type owl:Class ;
      rdfs:comment "Genomic Characterization Centers (GCC) transfer experimental results for characterization assays (e.g. gene expression, copy number variation, and methylation)."^^xsd:string , "GCC's are a TCGA-specific concept."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:GenomicProcessingCenter ;
      dc:creator foaf:JimLomax .

sparqlQuery:GenomicDataIntegrity
      rdf:type sparqlQuery:Goal ;
      sparqlQuery:hasGoal sparqlQuery:TCGADataIntegrity .

sparqlQuery:GenomicProcessingCenter
      rdf:type owl:Class ;
      rdfs:subClassOf sparqlQuery:Organization ;
      dc:creator foaf:JimLomax .

sparqlQuery:GenomicSequencingCenter
      rdf:type owl:Class ;
      rdfs:comment "GSCs are a TCGA-specific concept."^^xsd:string , "Genomic Sequencing Centers (GSC) submit trace files to NCBI Trace. They also transfer trace-to-ID relationship files and mutations to the DCC."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:GenomicProcessingCenter ;
      dc:creator foaf:JimLomax .

sparqlQuery:GlialFibrillaryAcideicProtein_Indicator
      rdf:type sparqlQuery:TumorMarker , sparqlQuery:CancerProgressionIndicator .

sparqlQuery:Goal
      rdf:type owl:Class ;
      rdfs:subClassOf skos:Concept ;
      dc:creator foaf:JimLomax .

sparqlQuery:Gray_DosageUnits
      rdf:type sparqlQuery:RadiationDosageUnits ;
      sparqlQuery:value "Gray"^^xsd:string .

sparqlQuery:GynecologicOncologyOrg
      rdf:type sparqlQuery:Organization .

sparqlQuery:HGNCOrg
      rdf:type sparqlQuery:Organization .

sparqlQuery:HarvardOrg
      rdf:type sparqlQuery:Organization .

sparqlQuery:HistologicGrade
      rdf:type owl:Class ;
      rdfs:comment "The degree of abnormality of cancer cells, a measure of differentiation, the extent to which cancer cells are similar in appearance and function to healthy cells of the same tissue type. The degree of differentiation often relates to the clinical behavior of the particular tumor. Based on the microscopic findings, tumor grade is commonly described by one of four degrees of severity. Histopathologic grade of a tumor may be used to plan treatment and estimate the future course, outcome, and overall prognosis of disease. Certain types of cancers, such as soft tissue sarcoma, primary brain tumors, lymphomas, and breast have special grading systems"^^xsd:string ;
      rdfs:subClassOf skos:Concept ;
      sparqlQuery:designNote
              "Histological grade instances may be known by different names so a skos labeling system will be employed."^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:HistologicType
      rdf:type owl:Class ;
      rdfs:comment "Refers to the type of tissue in which a tumor originated."^^xsd:string ;
      rdfs:subClassOf skos:Concept ;
      sparqlQuery:designNote
              "Since each instance of a histologic type may be labeled differently, a sko labeling system will be employed."^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:HmiRNA8x15KPlatform
      rdf:type sparqlQuery:Platform ;
      sparqlQuery:hasVendor
              sparqlQuery:AgilentOrg .

sparqlQuery:HmiRNA8x15KPlatformv2
      rdf:type sparqlQuery:Platform ;
      sparqlQuery:hasVendor
              sparqlQuery:AgilentOrg .

sparqlQuery:HudsonAlphaOrg
      rdf:type sparqlQuery:Organization .

sparqlQuery:Human1mduoPlatform
      rdf:type sparqlQuery:Platform ;
      sparqlQuery:hasVendor
              sparqlQuery:IlluminaOrg .

sparqlQuery:HumanHap550Platform
      rdf:type sparqlQuery:Platform ;
      sparqlQuery:hasVendor
              sparqlQuery:IlluminaOrg .

sparqlQuery:IlluminaHumanMethylation27ArrayDesign
      rdf:type owl:Class ;
      rdfs:comment "Specific array design for Illumina's Human Methylation 27 microarray"^^xsd:string ;
      rdfs:subClassOf sparqlQuery:ArrayDesignArtifact ;
      dc:creator foaf:JimLomax .

sparqlQuery:IlluminaOrg
      rdf:type sparqlQuery:Organization .

sparqlQuery:ImageArtifact
      rdf:type owl:Class ;
      rdfs:comment "Any image-based Archive Artifiact that is meant to be viewed (and possible edited) but is not subject to computation to derive the information it contains."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:DisplayArtifact ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:onProperty sparqlQuery:hasImageFormat ;
                owl:someValuesFrom sparqlQuery:ImageFormat
              ] ;
      dc:creator foaf:JimLomax .

sparqlQuery:ImageFormat
      rdf:type owl:Class ;
      rdfs:comment "Storage format for an electronic image. Storage formats are produced by image compression algorithms."^^xsd:string ;
      rdfs:subClassOf skos:Concept ;
      dc:creator foaf:JimLomax .

sparqlQuery:Immortalization
      rdf:type owl:Class ;
      rdfs:comment "Laboratory methods used to generate cells that are able to reproduce indefinitely."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:LabProcedure ;
      dc:creator foaf:JimLomax .

sparqlQuery:Immunotherapy
      rdf:type owl:Class ;
      rdfs:comment "Therapy designed to induce changes in a patient's immune status in order to treat disease."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:TherapeuticProcedure ;
      dc:creator foaf:JimLomax .

sparqlQuery:ImmunotherapyPatientEvent
      rdf:type owl:Class ;
      rdfs:comment "Administration of Immunotherapy to a Patient, temporally."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:TherapeuticProcedurePatientEvent ;
      sparqlQuery:designNote
              "An Immunotherapy Patient Event is a Patient Event that is generated by (event source) an Immunotherapy."^^xsd:string ;
      dc:creator foaf:JimLomax ;
      owl:equivalentClass
              [ rdf:type owl:Class ;
                owl:intersectionOf (sparqlQuery:TherapeuticProcedurePatientEvent [ rdf:type owl:Restriction ;
                            owl:onProperty sparqlQuery:eventSource ;
                            owl:someValuesFrom sparqlQuery:Immunotherapy
                          ])
              ] .

sparqlQuery:Indicator
      rdf:type owl:Class ;
      rdfs:comment "An event, entity or condition that typically characterizes a prescribed environment or situation and determines or aids in determining whether certain stated circumstances exist or criteria are satisfied."^^xsd:string ;
      rdfs:subClassOf skos:Concept ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:onProperty sparqlQuery:indicates ;
                owl:someValuesFrom owl:Thing
              ] ;
      dc:creator foaf:JimLomax .

sparqlQuery:InstantEvent_StartRegularChemo
      rdf:type time-entry:InstantEvent ;
      time-entry:durationDescriptionOf
              sparqlQuery:DurationDescription_30Days .

sparqlQuery:InstantThingPair_1
      rdf:type time-entry:InstantThingPair ;
      time-entry:firstInstantThing
              sparqlQuery:Patient1Birth_Instant .

sparqlQuery:IntGenBCR
      rdf:type sparqlQuery:BCR .

sparqlQuery:IntGenBCR_1
      rdf:type sparqlQuery:BiologicalCollectionResource .

sparqlQuery:InternationalizationGoal
      rdf:type sparqlQuery:Goal .

sparqlQuery:Interval_StartStopChemoRegular
      rdf:type time-entry:Interval ;
      time-entry:durationDescriptionOf
              sparqlQuery:DurationDescription_30Days .

sparqlQuery:IntgenOrg
      rdf:type sparqlQuery:Organization .

sparqlQuery:InvestigationDesignArtifact
      rdf:type owl:Class ;
      rdfs:comment "Artifact describing the \"metadata: and design premises of an investigation (experiment). The strucutre of the artifact will depend on many factors, including the umbrella project that the investigation may be comprising, however the artifact typically includes information about the investigation's protocols and the primary investigator. ID is a general concept applicable to any investigation description, and not restricted to microarray investigations"^^xsd:string ;
      rdfs:subClassOf sparqlQuery:ComputationalArtifact ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:onProperty sparqlQuery:hasPlatform ;
                owl:someValuesFrom sparqlQuery:Platform
              ] ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:cardinality "1"^^xsd:int ;
                owl:onProperty sparqlQuery:hasPlatform
              ] ;
      dc:creator foaf:JimLomax .

sparqlQuery:JPG
      rdf:type sparqlQuery:ImageFormat ;
      sparqlQuery:name "JPEG"^^xsd:string .

sparqlQuery:JohnsHopkinsOrg
      rdf:type sparqlQuery:Organization .

sparqlQuery:LabProcedure
      rdf:type owl:Class ;
      rdfs:comment "Any procedure that involves testing or manipulating a sample of blood, urine, or other body substance in a laboratory setting."^^xsd:string ;
      rdfs:subClassOf skos:Concept ;
      sparqlQuery:designNote
              "An instance of a lab procedure can be labeled differently depending on perspective on the procedure and local naming conventions. Therefore a skos labeling scheme will be employed."^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:LabProcedureExecution
      rdf:type owl:Class ;
      rdfs:comment "The execution of a lab  procedure. An instance of a lab procedure only describes the  procedure itself, not the execution of the procedure."^^xsd:string ;
      rdfs:subClassOf skos:Concept ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:onProperty sparqlQuery:labProcedure ;
                owl:someValuesFrom sparqlQuery:LabProcedure
              ] ;
      sparqlQuery:designNote
              "The execution of a specified  lab procedure can be labeled differently depending on perspective on the procedure and local naming conventions. Therefore a skos labeling scheme will be employed."^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:LawrenceLabOrg
      rdf:type sparqlQuery:Organization .

sparqlQuery:Living_VitalStatus
      rdf:type sparqlQuery:VitalStatus .

sparqlQuery:Lung
      rdf:type owl:Class ;
      rdfs:comment "One of a pair of viscera occupying the pulmonary cavities of the thorax, the organs of respiration in which aeration of the blood takes place. As a rule, the right lung is slightly larger than the left and is divided into three lobes (an upper, a middle, and a lower or basal), while the left has two lobes (an upper and a lower or basal). Each lung is irregularly conical in shape, presenting a blunt upper extremity (the apex), a concave base following the curve of the diaphragm, an outer convex surface (costal surface), an inner or mediastinal surface (mediastinal surface), a thin and sharp anterior border, and a thick and rounded posterior border."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:AnatomicSite ;
      sparqlQuery:domainQuestion
              "Does Lung need to be an instance of anatomic site or are there more specific instances of lung anatomic sites to capture in context of cancer  progression/therapy. Also left and right lung could be instances of lung, which seems appropriate in tumor lcoation."^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:MDA-BCBOrg
      rdf:type sparqlQuery:Organization ;
      sparqlQuery:hasGoal sparqlQuery:DataIntegrity .

sparqlQuery:MDA-RISOrg
      rdf:type sparqlQuery:Organization .

sparqlQuery:MDAOrg
      rdf:type sparqlQuery:Organization ;
      sparqlQuery:organization
              sparqlQuery:MDA-BCBOrg , sparqlQuery:MDA-RISOrg .

sparqlQuery:MDAndersonBrainBankOwner
      rdf:type mage:Person .

sparqlQuery:MDAndersonBrainBankRepository
      rdf:type mage:BioSourceProvider .

sparqlQuery:Male_Gender
      rdf:type sparqlQuery:Gender .

sparqlQuery:ManifestArchiveFileType
      rdf:type sparqlQuery:ArchiveFileType .

sparqlQuery:ManifestArtifact
      rdf:type owl:Class ;
      rdfs:comment "A Manifest contains a list of all Artifacts contained in the Archive."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:ComputationalArtifact ;
      dc:creator foaf:JimLomax .

sparqlQuery:MedicalAppointmentPatientEvent
      rdf:type owl:Class ;
      rdfs:comment "A planned Act for a specific time, place and medical purpose."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:PatientEvent ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:onProperty sparqlQuery:isPlanned ;
                owl:someValuesFrom xsd:boolean
              ] ;
      sparqlQuery:designNote
              "A medical appointment occurs at a specific physical location."^^xsd:string , "A medical appointment is a patient event; it occurs in the context of a patient."^^xsd:string ;
      dc:creator foaf:JimLomax ;
      owl:disjointWith sparqlQuery:TherapeuticProcedurePatientEvent , sparqlQuery:BirthPatientEvent , sparqlQuery:SurgicalProcedurePatientEvent , sparqlQuery:DeathPatientEvent .

sparqlQuery:MedicalAppointment_PatientEvent
      rdf:type sparqlQuery:MedicalAppointmentPatientEvent .

sparqlQuery:Microarray
      rdf:type owl:Class ;
      rdfs:comment "Represents the physical microarray. The class is designed to hold the row(x) and column(y) dimensions, if available."^^xsd:string ;
      rdfs:subClassOf skos:Concept ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:allValuesFrom xsd:integer ;
                owl:onProperty sparqlQuery:yMax
              ] ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:allValuesFrom xsd:integer ;
                owl:onProperty sparqlQuery:xMax
              ] ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:maxCardinality "1"^^xsd:int ;
                owl:onProperty sparqlQuery:hasPlatform
              ] ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:onProperty sparqlQuery:hasPlatform ;
                owl:someValuesFrom sparqlQuery:Platform
              ] ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onProperty sparqlQuery:yMax
              ] ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:maxCardinality "1"^^xsd:nonNegativeInteger ;
                owl:onProperty sparqlQuery:xMax
              ] ;
      dc:creator foaf:JimLomax .

sparqlQuery:Milliliter_VolumeUnits
      rdf:type sparqlQuery:VolumeUnits .

sparqlQuery:MindBomb1Protein_Indicator
      rdf:type sparqlQuery:TumorMarker , sparqlQuery:CancerProgressionIndicator .

sparqlQuery:ModelClosureGoal
      rdf:type sparqlQuery:Goal .

sparqlQuery:ModelUseCasesSemanticallyGoal
      rdf:type sparqlQuery:Goal .

sparqlQuery:Molarity_ConcentrationUnits
      rdf:type sparqlQuery:ConcentrationUnits .

sparqlQuery:Mouth
      rdf:type owl:Class ;
      rdfs:comment "Slitlike space in the oral cavity , bounded externally by the lips and cheek, and internally by the gingiva and teeth."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:AnatomicSite ;
      sparqlQuery:designNote
              "The mouth may become an instance of Anatomic Site or it may be a remain a class with specific Mouth instances."^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:NCIOrg
      rdf:type sparqlQuery:Organization .

sparqlQuery:NativeHawaiianPacificIslander_Race
      rdf:type sparqlQuery:Race ;
      dc:creator foaf:JimLomax .

sparqlQuery:NuclearGrade
      rdf:type owl:Class ;
      rdfs:comment "An evaluation of the size and shape of the nucleus in tumor cells and the percentage of tumor cells that are in the process of dividing or growing. Cancers with low nuclear grade grow and spread less quickly than cancers with high nuclear grade."^^xsd:string ;
      rdfs:subClassOf skos:Concept ;
      sparqlQuery:designNote
              "Nuclear grade instances may be known by different names so a skos labeling system will be employed."^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:Nucleus
      rdf:type mage:CellularComponent .

sparqlQuery:ObsoleteArtifact
      rdf:type owl:Class ;
      rdfs:comment "Any ArchiveArtifact thatis no longer relevant to the Archive but is listed for completion or historical purposes. An Obsolote ArchiveArtifact's contents are not subject to any computation and are not intended to be viewed."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:ArchiveListing ;
      dc:creator foaf:JimLomax .

sparqlQuery:Omentum
      rdf:type owl:Class ;
      rdfs:comment "A fold of peritoneum originating at the stomach and supporting the viscera."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:AnatomicSite ;
      sparqlQuery:domainQuestion
              "Does Omentum need to be an instance of anatomic site or are there more specific instances of Omentum anatomic sites to capture in context of cancer  progression/therapy"^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:OneM_Concentration
      rdf:type sparqlQuery:Concentration ;
      sparqlQuery:units sparqlQuery:Molarity_ConcentrationUnits ;
      sparqlQuery:value "1"^^xsd:string .

sparqlQuery:OnePointFiveM_Concentration
      rdf:type sparqlQuery:Concentration ;
      sparqlQuery:units sparqlQuery:Molarity_ConcentrationUnits ;
      sparqlQuery:value "1.5"^^xsd:string .

sparqlQuery:Ontology_1
      rdf:type owl:Ontology .

sparqlQuery:OralCavity
      rdf:type owl:Class ;
      rdfs:comment "The cavity located at the upper end of the alimentary canal, behind the teeth and gums that is bounded on the outside by the lips, above by the hard and soft palates and below by the tongue"^^xsd:string ;
      rdfs:subClassOf sparqlQuery:AnatomicSite ;
      dc:creator foaf:JimLomax .

sparqlQuery:Organization
      rdf:type owl:Class ;
      rdfs:comment "An organization is a group of persons organized for some end or work (dictionary.com). Organizations can be assembled from subdivisions, which are also organizations. Organizations are named, but a unique Organziation may have several known names or synonyms, depending on the refering source. Each organization (and recognizable subdivision as organization) will have a unique domain name. The organization's domain name does not necessarily represent the domain component of a URL."^^xsd:string ;
      rdfs:subClassOf foaf:Organization , skos:Concept ;
      sparqlQuery:designNote
              "While an Organization must have a name, its uniqueness is determined by its Domain."^^xsd:string , "An Organization will have a preferred name with synonyms possible. SKOS will used to realize this goal."^^xsd:string , "An Organization in TCGA context will derived from a FOAF Organziation to adhere to the definition of a commonly used Organization concept."^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:Outcome
      rdf:type owl:Class ;
      rdfs:comment "The result of an action. This definition is necessarily generic to support the more specific uses of the concept. "^^xsd:string ;
      rdfs:subClassOf skos:Concept ;
      sparqlQuery:designNote
              "An outcome is a temporal event; it occurs on a specific date/time."^^xsd:string , "An outcome may be labeled differently from different perspectives."^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:Ovary
      rdf:type owl:Class ;
      rdfs:comment "The pair of female reproductive glands in which the ova, or eggs, are formed. The ovaries are located in the pelvis, one on each side of the uterus"^^xsd:string ;
      rdfs:subClassOf sparqlQuery:AnatomicSite ;
      sparqlQuery:domainQuestion
              "Does Ovary need to be an instance of anatomic site or are there more specific instances of ovarian anatomic sites to capture in context of cancer  progression/therapy"^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:PNG
      rdf:type sparqlQuery:ImageFormat .

sparqlQuery:Patient
      rdf:type owl:Class ;
      rdfs:subClassOf foaf:Person , skos:Concept ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:onProperty sparqlQuery:patientId ;
                owl:someValuesFrom sparqlQuery:PatientId
              ] ;
      sparqlQuery:designNote
              "A patient has a unique identifier, patient id."^^xsd:string ;
      owl:equivalentClass
              [ rdf:type owl:Class ;
                owl:intersectionOf (foaf:Person [ rdf:type owl:Restriction ;
                            owl:onProperty sparqlQuery:patientId ;
                            owl:someValuesFrom sparqlQuery:PatientId
                          ])
              ] .

sparqlQuery:Patient1Birth_Instant
      rdf:type time-entry:Instant ;
      time-entry:inCalendarClockDataType
              "1999-10-12T10:38:32"^^xsd:dateTime .

sparqlQuery:Patient1Death_Instant
      rdf:type time-entry:Instant ;
      time-entry:inCalendarClockDataType
              "2010-11-01T17:38:09.188"^^xsd:dateTime .

sparqlQuery:Patient1_Patient
      rdf:type sparqlQuery:Patient ;
      sparqlQuery:patientId
              sparqlQuery:Patient1_PatientId .

sparqlQuery:Patient1_PatientId
      rdf:type sparqlQuery:PatientId .

sparqlQuery:Patient2_Patient
      rdf:type sparqlQuery:Patient ;
      sparqlQuery:patientId
              sparqlQuery:Patient2_PatientId .

sparqlQuery:Patient2_PatientId
      rdf:type sparqlQuery:PatientId .

sparqlQuery:PatientEvent
      rdf:type owl:Class ;
      rdfs:comment "There is no corresponding concept in Bioportal"^^xsd:string , "Any action *on* a patient that occurs with a specific date."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:TemporalEvent ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:onProperty sparqlQuery:eventTarget ;
                owl:someValuesFrom sparqlQuery:Patient
              ] ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:onProperty sparqlQuery:eventSource ;
                owl:someValuesFrom owl:Thing
              ] ;
      dc:creator foaf:JimLomax ;
      owl:equivalentClass
              [ rdf:type owl:Class ;
                owl:intersectionOf (sparqlQuery:TemporalEvent [ rdf:type owl:Restriction ;
                            owl:onProperty sparqlQuery:eventTarget ;
                            owl:someValuesFrom sparqlQuery:Patient
                          ] [ rdf:type owl:Restriction ;
                            owl:onProperty sparqlQuery:eventSource ;
                            owl:someValuesFrom owl:Thing
                          ])
              ] .

sparqlQuery:PatientId
      rdf:type owl:Class ;
      rdfs:comment "Patient Id is a concept for uniquely identifying a Patient. The consumable label for a Patient Id may vary across  domain interpretations. This is the case with The Cancer Genome Atlas, where patients are identified in a clinical context by a \"BCRPatientBarcode\".  To allow for variations in  consumable labels for the concept, the  SKOS-XL framework is used; SKOS-XL in particular for its extensions that allow relationships  to exist between labels. To aid in data integration a Patient Id will be defined  by a union of known concepts that logically map to the concept of Patient Id."^^xsd:string ;
      rdfs:subClassOf skos:Concept ;
      owl:equivalentClass
              [ rdf:type owl:Restriction ;
                owl:onProperty sparqlQuery:patientIdOf ;
                owl:someValuesFrom owl:Thing
              ] .

sparqlQuery:Pill_DosageUnits
      rdf:type sparqlQuery:DosageUnits ;
      sparqlQuery:value "Pill"^^xsd:string .

sparqlQuery:Platform
      rdf:type owl:Class ;
      rdfs:subClassOf skos:Concept ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:onProperty sparqlQuery:hasVendor ;
                owl:someValuesFrom mage:Organization
              ] ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:onProperty sparqlQuery:hasDatatype ;
                owl:someValuesFrom sparqlQuery:PlatformDatatype
              ] ;
      dc:creator foaf:JimLomax .

sparqlQuery:PlatformDatatype
      rdf:type owl:Class ;
      rdfs:subClassOf skos:Concept ;
      dc:creator foaf:JimLomax .

sparqlQuery:Pounds_WeightUnits
      rdf:type sparqlQuery:WeightUnits ;
      sparqlQuery:value "Pounds"^^xsd:string .

sparqlQuery:PrimaryBloodDerivedTissueSample
      rdf:type owl:Class ;
      rdfs:subClassOf sparqlQuery:TissueSample ;
      owl:equivalentClass
              [ rdf:type owl:Class ;
                owl:intersectionOf (sparqlQuery:TissueSample [ rdf:type owl:Restriction ;
                            owl:hasValue sparqlQuery:SampleType_PrimaryBloodDervivedCancer ;
                            owl:onProperty sparqlQuery:sampleType
                          ])
              ] .

sparqlQuery:PrimaryTumorTissueSample
      rdf:type owl:Class ;
      rdfs:subClassOf sparqlQuery:TissueSample ;
      owl:equivalentClass
              [ rdf:type owl:Class ;
                owl:intersectionOf (sparqlQuery:TissueSample [ rdf:type owl:Restriction ;
                            owl:hasValue sparqlQuery:SampleType_PrimaryTumor ;
                            owl:onProperty sparqlQuery:sampleType
                          ])
              ] .

sparqlQuery:Project
      rdf:type owl:Class ;
      rdfs:subClassOf skos:Concept , foaf:Project ;
      dc:creator foaf:JimLomax .

sparqlQuery:Proteasome
      rdf:type mage:CellularComponent .

sparqlQuery:ProtectedArchiveListingAccessLevel
      rdf:type sparqlQuery:ArchiveListingAccessLevel ;
      rdfs:comment "Protected access  indicates that only those that are approved through some authentication method may access an entity assigned this access level."^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:ProteinDimer
      rdf:type mage:CellularComponent .

sparqlQuery:ProteinTrimer
      rdf:type mage:CellularComponent .

sparqlQuery:ProteomicDataIntegrity
      rdf:type sparqlQuery:Goal ;
      sparqlQuery:name "Ensure Proteomic Data Integrity"^^xsd:string .

sparqlQuery:Protocol
      rdf:type owl:Class ;
      rdfs:comment "A rule which guides how an activity should be performed."^^xsd:string ;
      rdfs:subClassOf skos:Concept ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:onProperty dc:identifier ;
                owl:someValuesFrom rdfs:Literal
              ] ;
      dc:creator foaf:JimLomax .

sparqlQuery:PublicArchiveAccessLevel
      rdf:type sparqlQuery:ArchiveListingAccessLevel ;
      rdfs:comment "Public access indicates that anyone can access the data contained in entity assigned this access level"^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:PurityMeasurment
      rdf:type owl:Class ;
      rdfs:comment "Measures the purity of a substance."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:Quantity ;
      sparqlQuery:domainQuestion
              "I'm unclear whether the purity measurement values will be in a range of [0-1] or if they will be other range values. Knowing the numeric ranges will be necessary to establish validation rules, however this is not a requirement for purity values in general."^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:Quantity
      rdf:type owl:Class ;
      rdfs:comment "How much of something there is to measure.A quantity is more than a numeric value; it is a numeric value with units of measurement"^^xsd:string ;
      rdfs:subClassOf skos:Concept ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:onProperty sparqlQuery:value ;
                owl:someValuesFrom rdfs:Literal
              ] ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:onProperty sparqlQuery:units ;
                owl:someValuesFrom sparqlQuery:Units
              ] ;
      dc:creator foaf:JimLomax .

sparqlQuery:RISOrg
      rdf:type sparqlQuery:Organization .

sparqlQuery:RNATissueSample
      rdf:type owl:Class ;
      rdfs:subClassOf sparqlQuery:TissueSample ;
      owl:equivalentClass
              [ rdf:type owl:Class ;
                owl:intersectionOf (sparqlQuery:TissueSample [ rdf:type owl:Restriction ;
                            owl:hasValue sparqlQuery:SampleType_RNA ;
                            owl:onProperty sparqlQuery:sampleType
                          ])
              ] .

sparqlQuery:Race
      rdf:type owl:Class ;
      rdfs:comment "The US Census Bureau makes use of both race and ethnicity in surveys, however there are no race or ethnicity vocabularies or taxonomies used."^^xsd:string , "http://en.wikipedia.org/wiki/Race_and_ethnicity_in_the_United_States_Census"^^xsd:string ;
      rdfs:subClassOf skos:Concept ;
      dc:creator foaf:JimLomax .

sparqlQuery:RadiationDosage
      rdf:type owl:Class ;
      rdfs:comment "The amount of radiation energy that is deposited in a unit mass of material, such as tissues of plants or animal. In RADIOTHERAPY, radiation dosage is expressed in gray units (Gy). In RADIOLOGIC HEALTH, the dosage is expressed by the product of absorbed dose (Gy) and quality factor (a function of linear energy transfer), and is called radiation dose equivalent in sievert units (Sv)."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:Dosage ;
      dc:creator foaf:JimLomax .

sparqlQuery:RadiationDosageUnits
      rdf:type owl:Class ;
      rdfs:subClassOf sparqlQuery:DosageUnits ;
      dc:creator foaf:JimLomax .

sparqlQuery:RadiationTherapy
      rdf:type owl:Class ;
      rdfs:comment "The use of high-energy radiation from x-rays, gamma rays, neutrons, and other sources to kill cancer cells and shrink tumors. Radiation may come from a machine outside the body (external-beam radiation therapy) or from materials called radioisotopes. Radioisotopes produce radiation and can be placed in or near the tumor or in the area near cancer cells. This type of radiation treatment is called internal radiation therapy, implant radiation, interstitial radiation, or brachytherapy. Systemic radiation therapy uses a radioactive substance, such as a radiolabeled monoclonal antibody, that circulates throughout the body."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:TherapeuticProcedure ;
      dc:creator foaf:JimLomax .

sparqlQuery:RadiationTherapyPatientEvent
      rdf:type owl:Class ;
      rdfs:comment "Radiation Therapy as applied to a Patient, temporally."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:TherapeuticProcedurePatientEvent ;
      sparqlQuery:designNote
              "A Radiation Therapy Patient Event is a Patient Event generated by (event source) a Radiation Therapy."^^xsd:string ;
      dc:creator foaf:JimLomax ;
      owl:equivalentClass
              [ rdf:type owl:Class ;
                owl:intersectionOf (sparqlQuery:TherapeuticProcedurePatientEvent [ rdf:type owl:Restriction ;
                            owl:onProperty sparqlQuery:eventSource ;
                            owl:someValuesFrom sparqlQuery:RadiationTherapy
                          ])
              ] .

sparqlQuery:RadioIsotopeTherapy
      rdf:type owl:Class ;
      rdfs:comment "Radiation therapy that uses a machine to aim high-energy rays at the cancer."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:RadiationTherapy ;
      dc:creator foaf:JimLomax .

sparqlQuery:RawArchiveFileType
      rdf:type sparqlQuery:ArchiveFileType .

sparqlQuery:RawArrayData
      rdf:type owl:Class ;
      rdfs:subClassOf sparqlQuery:ArrayDataArtifact .

sparqlQuery:ReadMe
      rdf:type owl:Class ;
      rdfs:comment "An informational ArchiveArtifact  whose purpose is to describe features of the Archive, as well as any known issues."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:DocumentAtrifact ;
      dc:creator foaf:JimLomax .

sparqlQuery:RecurrentBloodDerivedCancerTissueSample
      rdf:type owl:Class ;
      rdfs:subClassOf sparqlQuery:TissueSample ;
      owl:equivalentClass
              [ rdf:type owl:Class ;
                owl:intersectionOf (sparqlQuery:TissueSample [ rdf:type owl:Restriction ;
                            owl:hasValue sparqlQuery:SampleType_RecurrentBloodDerivedCancer ;
                            owl:onProperty sparqlQuery:sampleType
                          ])
              ] .

sparqlQuery:RecurrentTumorTissueSample
      rdf:type owl:Class ;
      rdfs:subClassOf sparqlQuery:TissueSample ;
      owl:equivalentClass
              [ rdf:type owl:Class ;
                owl:intersectionOf (sparqlQuery:TissueSample [ rdf:type owl:Restriction ;
                            owl:hasValue sparqlQuery:SampleType_RecurrentTumor ;
                            owl:onProperty sparqlQuery:sampleType
                          ])
              ] .

sparqlQuery:Regimen
      rdf:type owl:Class ;
      rdfs:comment "A treatment plan that specifies the dosage, the schedule, and the duration of treatment."^^xsd:string ;
      rdfs:subClassOf skos:Concept ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:onProperty sparqlQuery:therapeuticProcedures ;
                owl:someValuesFrom collections:List
              ] ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:onProperty sparqlQuery:patient ;
                owl:someValuesFrom sparqlQuery:Patient
              ] ;
      sparqlQuery:designNote
              "A Regimen may be based off of a Regimen Model which is also an ordered list  of treatments but they are not specific to a Patient."^^xsd:string , "A Regimen is a temporally ordered list of treatments."^^xsd:string , "A Regimen is a collection of treatments which are applied to a specific Patient."^^xsd:string ;
      sparqlQuery:domainQuestion
              "Is a regimen an ordered collection of treamments?"^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:Regimen1_Regimen
      rdf:type sparqlQuery:Regimen ;
      sparqlQuery:regimenModel
              sparqlQuery:RegimenModel1_RegimenModel ;
      sparqlQuery:therapeuticProcedures
              sparqlQuery:TherpaeuticProcedureList1 .

sparqlQuery:RegimenModel
      rdf:type owl:Class ;
      rdfs:comment "A Regimen Model is a Regimen that is not designed specifically for a Patient, it is designed to be a guide for treatments of a particular condition."^^xsd:string ;
      rdfs:subClassOf skos:Concept ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:onProperty sparqlQuery:therapeuticProcedures ;
                owl:someValuesFrom collections:List
              ] ;
      sparqlQuery:designNote
              "A Regimen Model may be specific to a cancer type but it is not necessary (TCGA specific)"^^xsd:string , "A Regimen Model which is also an ordered list of treatments not specific to a Patient."^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:RegimenModel1_RegimenModel
      rdf:type sparqlQuery:RegimenModel ;
      sparqlQuery:therapeuticProcedures
              sparqlQuery:TherpaeuticProcedureList1 .

sparqlQuery:Remission_DiseaseOutcome
      rdf:type sparqlQuery:DiseaseOutcome .

sparqlQuery:RepliGDNAAnalyte
      rdf:type owl:Class ;
      rdfs:comment "The analyte in question is DNA collected from whole genome amplification by Qiagen’s multiple displacement amplification."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:Analyte ;
      sparqlQuery:designNote
              "The analyte is DNA at the least, however the specific amplification process may be important or somehow leave a characteristic mark on the DNA."^^xsd:string , "Until we know more about this type of amplification this class of Analyte will remain distinct (although it sounds like it might need to be a subclass of DNAAnalyte)"^^xsd:string ;
      dc:creator foaf:JimLomax ;
      owl:disjointWith sparqlQuery:EBVImmortalizedNormalAnalyte , sparqlQuery:DNAAnalyte , sparqlQuery:TotalRNAAnalyte , sparqlQuery:GenomePlexAmplifiedDNAAnalyte .

sparqlQuery:RepliGDNATissueSample
      rdf:type owl:Class ;
      rdfs:subClassOf sparqlQuery:TissueSample ;
      owl:equivalentClass
              [ rdf:type owl:Class ;
                owl:intersectionOf (sparqlQuery:TissueSample [ rdf:type owl:Restriction ;
                            owl:hasValue sparqlQuery:SampleType_RepliGDNA ;
                            owl:onProperty sparqlQuery:sampleType
                          ])
              ] .

sparqlQuery:ResearchAdvantagesOfSemanticTechnologies
      rdf:type sparqlQuery:Goal .

sparqlQuery:ResearchDataIntegrity
      rdf:type sparqlQuery:Goal ;
      sparqlQuery:hasGoal sparqlQuery:GenomicDataIntegrity , sparqlQuery:ProteomicDataIntegrity .

sparqlQuery:Resource_2
      rdf:type rdfs:Resource .

sparqlQuery:RoughEndoplasmicReticulum
      rdf:type mage:CellularComponent .

sparqlQuery:SPARQLPackage
      rdf:type owl:Class ;
      rdfs:subClassOf owl:Thing ;
      dc:creator foaf:JimLomax .

sparqlQuery:SPARQLQuery
      rdf:type owl:Class ;
      rdfs:subClassOf sparqlQuery:SPARQLPackage ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:onProperty spin:query ;
                owl:someValuesFrom sp:Query
              ] ;
      dc:creator foaf:JimLomax .

sparqlQuery:SPARQLQueryClassficationOf
      rdf:type owl:ObjectProperty .

sparqlQuery:SPARQLQueryClassification
      rdf:type owl:Class ;
      rdfs:subClassOf sparqlQuery:SPARQLPackage ;
      dc:creator foaf:JimLomax .

sparqlQuery:SPARQLQuerySubClassification
      rdf:type owl:Class ;
      rdfs:subClassOf sparqlQuery:SPARQLPackage ;
      dc:creator foaf:JimLomax .

sparqlQuery:SampleDataRelationshipArtifact
      rdf:type owl:Class ;
      rdfs:comment "A SampleDataRelationship Archive Artifact contains a collection of biological samples and the process applied to those samples to generate expected results. The structure of this Archive Artifact is dependent on many factors including the project, microarray vendor,  platform, and version"^^xsd:string , "Note: this is only an intial iteration. The SDRF contains more imformation that tissue samples but for now we are only interested in representing and processing that information."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:ComputationalArtifact ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:onProperty sparqlQuery:project ;
                owl:someValuesFrom sparqlQuery:Project
              ] ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:onProperty sparqlQuery:hasDatatype ;
                owl:someValuesFrom sparqlQuery:PlatformDatatype
              ] ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:onProperty sparqlQuery:hasTissueSample ;
                owl:someValuesFrom sparqlQuery:TissueSample
              ] ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:onProperty sparqlQuery:hasPlatform ;
                owl:someValuesFrom sparqlQuery:Platform
              ] ;
      dc:creator foaf:JimLomax .

sparqlQuery:SampleType
      rdf:type owl:Class ;
      rdfs:comment "Sample Type indicates the molecular origin and sometimes the  neoplastic state of the tissue from which the sample was taken."^^xsd:string ;
      rdfs:subClassOf skos:Concept ;
      dc:creator foaf:JimLomax .

sparqlQuery:SampleType_BloodDerivedNormal
      rdf:type sparqlQuery:SampleType ;
      sparqlQuery:domainQuestion
              "Does this mean that the sample is derived from normal blood? And does this mean blood without a cancerous presence? "^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:SampleType_BuccalCellNormal
      rdf:type sparqlQuery:SampleType ;
      sparqlQuery:domainQuestion
              "Does this mean that the sample is derived from normal buccal cell?"^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:SampleType_CellLineControl
      rdf:type sparqlQuery:SampleType ;
      sparqlQuery:domainQuestion
              "Does this mean that the sample is derived from a cell line as a control group?"^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:SampleType_DNA
      rdf:type sparqlQuery:SampleType ;
      sparqlQuery:domainQuestion
              "Does this mean that the tissue sample is derived from a DNA? Does that even make sense?"^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:SampleType_EBVImmortalizedNormal
      rdf:type sparqlQuery:SampleType ;
      sparqlQuery:domainQuestion
              "Does this mean that the tissue sample is derived from a culture of normal but  EBV-immortalized cells"^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:SampleType_GenomePlexAmplifiedDNA
      rdf:type sparqlQuery:SampleType ;
      sparqlQuery:domainQuestion
              "What is GenomePlex Amplification of DNA?"^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:SampleType_PrimaryBloodDervivedCancer
      rdf:type sparqlQuery:SampleType ;
      sparqlQuery:domainQuestion
              "Does this mean that the sample is derived from leukocyte based tumor such as myeloma or leukemia and that this blood derived tumor is the primary tumor? And does this assume that a secondary tumor exists."^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:SampleType_PrimaryTumor
      rdf:type sparqlQuery:SampleType ;
      sparqlQuery:domainQuestion
              "Does this mean that the sample is derived from the primary tumor (regardless of types) and that a secondary tumor does exist? Or does this just mean the sample is derived from the tumor indicated as the primary tumor, regardless of whether or not any other tumor exists."^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:SampleType_RNA
      rdf:type sparqlQuery:SampleType ;
      sparqlQuery:domainQuestion
              "Does this mean that the tissue sample is derived from a RNA? Does that even make sense?"^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:SampleType_RecurrentBloodDerivedCancer
      rdf:type sparqlQuery:SampleType ;
      sparqlQuery:domainQuestion
              "Does this mean that the sample is derived from leukocyte based tumor such as myeloma or leukemia and that this blood derived tumor is the primary tumor? And does this assume that a secondary tumor exists."^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:SampleType_RecurrentTumor
      rdf:type sparqlQuery:SampleType ;
      sparqlQuery:domainQuestion
              "Does this mean that the sample is derived from the a tumor that has recurred, regardless if it is the primary or secondary tumor?"^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:SampleType_RepliGDNA
      rdf:type sparqlQuery:SampleType ;
      sparqlQuery:domainQuestion
              "What is GenomePlex Amplification of DNA?"^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:SampleType_Slides
      rdf:type sparqlQuery:SampleType ;
      sparqlQuery:domainQuestion
              "No idea!"^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:SampleType_SolidTissueNormal
      rdf:type sparqlQuery:SampleType ;
      sparqlQuery:domainQuestion
              "No idea!"^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:SampleType_TotalRNA
      rdf:type sparqlQuery:SampleType ;
      sparqlQuery:domainQuestion
              "What is total RNA? All RNA's (mRNA, tRNA, rRNA)"^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:SelectAllLanguageLabels
      rdf:type sparqlQuery:SPARQLQuery ;
      rdfs:comment "Retreives any label having a language tag."^^xsd:string ;
      rdfs:label "Select Labels: Language Tagged"^^xsd:string ;
      dc:creator foaf:JimLomax ;
      spin:query
              [ rdf:type sp:Select ;
                sp:resultVariables (_:b374 _:b375) ;
                sp:where ([ sp:object _:b375 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b374
                          ] [ rdf:type sp:Filter ;
                            sp:expression
                                    [ rdf:type sp:langMatches ;
                                      sp:arg1 [ rdf:type sp:lang ;
                                                sp:arg1 _:b375
                                              ] ;
                                      sp:arg2 "*"
                                    ]
                          ])
              ] .

sparqlQuery:SelectAllModelElements
      rdf:type sparqlQuery:SPARQLQuery ;
      rdfs:comment "Retrieve all model elements in the current graph context; derived from owl:Thing, ObjectProperty, DatatypeProperty, AnnotationProperty."^^xsd:string ;
      rdfs:label "Select Model Elements: All"^^xsd:string ;
      spin:query
              [ rdf:type sp:Select ;
                sp:resultVariables (_:b376) ;
                sp:where ([ rdf:type sp:Union ;
                            sp:elements (([ sp:object owl:Thing ;
                                          sp:predicate rdfs:subClassOf ;
                                          sp:subject _:b376
                                        ]) ([ sp:object owl:ObjectProperty ;
                                          sp:predicate rdf:type ;
                                          sp:subject _:b376
                                        ]) ([ sp:object owl:DatatypeProperty ;
                                          sp:predicate rdf:type ;
                                          sp:subject _:b376
                                        ]) ([ sp:object owl:AnnotationProperty ;
                                          sp:predicate rdf:type ;
                                          sp:subject _:b376
                                        ]))
                          ])
              ] .

sparqlQuery:SelectBioMaterials
      rdf:type rdfs:Class ;
      rdfs:subClassOf sp:Select .

sparqlQuery:SelectDistinctCancerTypes
      rdf:type sparqlQuery:SPARQLQuery ;
      rdfs:comment "Determines all cancer names referenced in the current graph context. When executing this query it is important to understand the context of the dataset. The query does not return all available cancer names, only those that exist in the dataset."^^xsd:string ;
      rdfs:label "Select Cancer Types: Distinct"^^xsd:string ;
      dc:creator "foaf:JimLomax"^^xsd:string ;
      dc:title "Select Distinct Cancer Types"^^xsd:string .

sparqlQuery:SelectDistinctPlatformDatatypes
      rdf:type sparqlQuery:SPARQLQuery ;
      rdfs:comment "Determines all platform datatype names referenced in the current dataset. When executing this query it is important to understand the context of the dataset. The query does not return all available platform datatypes names, only those that exist in the dataset."^^xsd:string ;
      rdfs:label "Select Platform Datatypes: Distinct"^^xsd:string ;
      dc:creator "foaf:JimLomax"^^xsd:string ;
      spin:query
              [ rdf:type sp:Select ;
                sp:distinct "true"^^xsd:boolean ;
                sp:orderBy (_:b377) ;
                sp:resultVariables (_:b377) ;
                sp:where ([ sp:object sparqlQuery:PlatformDatatype ;
                            sp:predicate rdf:type ;
                            sp:subject _:b378
                          ] [ sp:object _:b379 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b378
                          ] [ sp:object _:b377 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b379
                          ])
              ] .

sparqlQuery:SelectDistinctPlatforms
      rdf:type sparqlQuery:SPARQLQuery ;
      rdfs:comment "Determines all platform names referenced in the current graph copntext. When executing this query it is important to understand the context of the dataset. The query does not return all available platform names, only those that exist in the dataset."^^xsd:string ;
      rdfs:label "Select Platforms: Unique"^^xsd:string ;
      dc:creator "foaf:JimLomax"^^xsd:string ;
      spin:query
              [ rdf:type sp:Select ;
                sp:distinct "true"^^xsd:boolean ;
                sp:orderBy (_:b380) ;
                sp:resultVariables (_:b380) ;
                sp:where ([ sp:object sparqlQuery:Platform ;
                            sp:predicate rdf:type ;
                            sp:subject _:b381
                          ] [ sp:object _:b382 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b381
                          ] [ sp:object _:b380 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b382
                          ])
              ] .

sparqlQuery:SelectDistinctPlatforms-ShowPlatformNamePlatformIdVendorName
      rdf:type sparqlQuery:SPARQLQuery ;
      rdfs:comment "Determines all platforms in the current graph. When executing this query it is important to understand the context of the dataset. "^^xsd:string ;
      rdfs:label "Select Platforms: Unique"^^xsd:string ;
      dc:creator "foaf:JimLomax"^^xsd:string ;
      spin:query
              [ rdf:type sp:Select ;
                sp:distinct "true"^^xsd:boolean ;
                sp:orderBy ([ sp:varName "platformId"^^xsd:string
                          ]) ;
                sp:resultVariables (_:b383 _:b384 _:b385) ;
                sp:where ([ sp:object sparqlQuery:Platform ;
                            sp:predicate rdf:type ;
                            sp:subject _:b386
                          ] [ sp:object _:b387 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b386
                          ] [ sp:object _:b384 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b387
                          ] [ sp:object _:b388 ;
                            sp:predicate sparqlQuery:platformIdentifier ;
                            sp:subject _:b386
                          ] [ sp:object _:b383 ;
                            sp:predicate dc:identifier ;
                            sp:subject _:b388
                          ] [ sp:object _:b389 ;
                            sp:predicate sparqlQuery:hasVendor ;
                            sp:subject _:b386
                          ] [ sp:object _:b390 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b389
                          ] [ sp:object _:b385 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b390
                          ])
              ] .

sparqlQuery:SelectEnglishLanguageLabels
      rdf:type sparqlQuery:SPARQLQuery ;
      rdfs:comment "Retreive all labels that have the English language tag."^^xsd:string ;
      rdfs:label "Select Labels: English"^^xsd:string ;
      dc:creator foaf:JimLomax ;
      spin:query
              [ rdf:type sp:Select ;
                sp:resultVariables (_:b391 _:b392) ;
                sp:where ([ sp:object _:b392 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b391
                          ] [ rdf:type sp:Filter ;
                            sp:expression
                                    [ rdf:type sp:langMatches ;
                                      sp:arg1 [ rdf:type sp:lang ;
                                                sp:arg1 _:b392
                                              ] ;
                                      sp:arg2 "EN"
                                    ]
                          ])
              ] .

sparqlQuery:SelectHebrewLanguageLabels
      rdf:type sparqlQuery:SPARQLQuery ;
      rdfs:comment "Retreive all labels that have the Hebrew language tag."^^xsd:string ;
      rdfs:label "Select Labels: Hebrew"^^xsd:string ;
      dc:creator foaf:JimLomax ;
      spin:query
              [ rdf:type sp:Select ;
                sp:resultVariables (_:b393 _:b394) ;
                sp:where ([ sp:object _:b394 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b393
                          ] [ rdf:type sp:Filter ;
                            sp:expression
                                    [ rdf:type sp:langMatches ;
                                      sp:arg1 [ rdf:type sp:lang ;
                                                sp:arg1 _:b394
                                              ] ;
                                      sp:arg2 "HE"
                                    ]
                          ])
              ] .

sparqlQuery:SelectRawDataArchiveListings
      rdf:type sparqlQuery:SPARQLQuery ;
      rdfs:comment "Retrieve all raw data files for the current graph context."^^xsd:string ;
      rdfs:label "Raw Data Files: All"^^xsd:string ;
      dc:creator foaf:JimLomax ;
      spin:query
              [ rdf:type sp:Select ;
                sp:groupBy (_:b395 _:b396) ;
                sp:resultVariables (_:b395 _:b396 _:b397 _:b398) ;
                sp:where ([ sp:object sparqlQuery:ArchiveListing ;
                            sp:predicate rdf:type ;
                            sp:subject _:b399
                          ] [ sp:object _:b400 ;
                            sp:predicate sparqlQuery:locatedBy ;
                            sp:subject _:b399
                          ] [ sp:object _:b395 ;
                            sp:predicate sparqlQuery:file ;
                            sp:subject _:b400
                          ] [ sp:object _:b401 ;
                            sp:predicate sparqlQuery:hasDatatype ;
                            sp:subject _:b399
                          ] [ sp:object _:b402 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b401
                          ] [ sp:object _:b397 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b402
                          ] [ sp:object _:b403 ;
                            sp:predicate sparqlQuery:hasFileType ;
                            sp:subject _:b399
                          ] [ sp:object _:b404 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b403
                          ] [ sp:object "raw-data" ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b404
                          ] [ sp:object _:b405 ;
                            sp:predicate sparqlQuery:hasPlatform ;
                            sp:subject _:b399
                          ] [ sp:object _:b406 ;
                            sp:predicate sparqlQuery:platformIdentifier ;
                            sp:subject _:b405
                          ] [ sp:object _:b398 ;
                            sp:predicate dc:identifier ;
                            sp:subject _:b406
                          ] [ sp:object _:b407 ;
                            sp:predicate sparqlQuery:hasCancer ;
                            sp:subject _:b399
                          ] [ sp:object _:b408 ;
                            sp:predicate skos-xl:prefLabel ;
                            sp:subject _:b407
                          ] [ sp:object _:b396 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b408
                          ])
              ] .

sparqlQuery:SelectSpanishLanguageLabels
      rdf:type sparqlQuery:SPARQLQuery ;
      rdfs:comment "Retreive all labels that have the Spanish language tag."^^xsd:string ;
      rdfs:label "Labels: Spanish"^^xsd:string ;
      dc:creator foaf:JimLomax ;
      spin:query
              [ rdf:type sp:Select ;
                sp:resultVariables (_:b409 _:b410) ;
                sp:where ([ sp:object _:b410 ;
                            sp:predicate skos-xl:literalForm ;
                            sp:subject _:b409
                          ] [ rdf:type sp:Filter ;
                            sp:expression
                                    [ rdf:type sp:langMatches ;
                                      sp:arg1 [ rdf:type sp:lang ;
                                                sp:arg1 _:b410
                                              ] ;
                                      sp:arg2 "ES"
                                    ]
                          ])
              ] .

sparqlQuery:SerousCavity
      rdf:type owl:Class ;
      rdfs:subClassOf sparqlQuery:AnatomicSite ;
      sparqlQuery:domainQuestion
              "Is this really an anatomic site?"^^xsd:string .

sparqlQuery:ShipmentSent
      rdf:type owl:Class ;
      rdfs:subClassOf sparqlQuery:TemporalEvent ;
      dc:creator foaf:JimLomax .

sparqlQuery:ShowAvailableCancerTypesUseCase
      rdf:type sparqlQuery:UseCase ;
      rdfs:comment "Details the use case of an actor wanting to know the available cancer types in a specified dataset."^^xsd:string ;
      rdfs:label "Show Available Cancer Types"^^xsd:string ;
      sparqlQuery:hasGoal sparqlQuery:AcquireCancersAvailableGoal ;
      sparqlQuery:hasQuery
              sparqlQuery:SelectDistinctCancerTypes ;
      sparqlQuery:name "Show All Cancer Types Available"^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:ShowModelElementNotCoveredUseCase
      rdf:type sparqlQuery:UseCase ;
      sparqlQuery:hasGoal sparqlQuery:ModelClosureGoal ;
      sparqlQuery:hasQuery
              sparqlQuery:UseCaseNotCoveredModelElementsQuery ;
      sparqlQuery:involvesConcept
              sparqlQuery:UseCase , sparqlQuery:SPARQLQuery , sparqlQuery:involvesConcept , sparqlQuery:conceptInvolvedBy ;
      dc:creator foaf:JimLomax .

sparqlQuery:Slide
      rdf:type owl:Class ;
      rdfs:comment "A flat rectangular piece of glass on which specimens can be mounted for microscopic study."^^xsd:string , "We need a term for the slide analysis results, this concept will hold the quantitative values associated with each slide interpretation. For now I will leave this concept alone and add the slide result properties"^^xsd:string ;
      rdfs:subClassOf skos:Concept ;
      dc:creator foaf:JimLomax .

sparqlQuery:Slide1_Slide
      rdf:type sparqlQuery:Slide .

sparqlQuery:SlidesTissueSample
      rdf:type owl:Class ;
      rdfs:subClassOf sparqlQuery:TissueSample ;
      owl:equivalentClass
              [ rdf:type owl:Class ;
                owl:intersectionOf (sparqlQuery:TissueSample [ rdf:type owl:Restriction ;
                            owl:hasValue sparqlQuery:SampleType_Slides ;
                            owl:onProperty sparqlQuery:sampleType
                          ])
              ] .

sparqlQuery:SloanKetteringOrg
      rdf:type sparqlQuery:Organization .

sparqlQuery:SolidTissueNormalTissueSample
      rdf:type owl:Class ;
      rdfs:subClassOf sparqlQuery:TissueSample ;
      owl:equivalentClass
              [ rdf:type owl:Class ;
                owl:intersectionOf (sparqlQuery:TissueSample [ rdf:type owl:Restriction ;
                            owl:hasValue sparqlQuery:SampleType_SolidTissueNormal ;
                            owl:onProperty sparqlQuery:sampleType
                          ])
              ] .

sparqlQuery:StanfordOrg
      rdf:type sparqlQuery:Organization .

sparqlQuery:SurgicalProcedure
      rdf:type owl:Class ;
      rdfs:comment "A procedure to remove or repair a part of the body or to find out whether disease is present. An operation."^^xsd:string ;
      rdfs:subClassOf skos:Concept ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:onProperty dc:identifier ;
                owl:someValuesFrom xsd:string
              ] ;
      sparqlQuery:designNote
              "For TCGA, surgical procedures are identified by codes."^^xsd:string , "The same instance of a Surgical Procedure may be referred to by different names. For this reason we will employ a SKOS labeling system"^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:SurgicalProcedure1_SurgicalProcedure
      rdf:type sparqlQuery:SurgicalProcedure ;
      dc:identifier "Generic Surgery"^^xsd:string .

sparqlQuery:SurgicalProcedurePatientEvent
      rdf:type owl:Class ;
      rdfs:comment "The capturing of specific surgery in context of a patient. A surgical procudure does not necessarily have the context of a patient, it could be a context-free process used a reference."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:PatientEvent ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:onProperty sparqlQuery:event ;
                owl:someValuesFrom sparqlQuery:SurgicalProcedure
              ] ;
      dc:creator foaf:JimLomax ;
      owl:equivalentClass
              [ rdf:type owl:Class ;
                owl:intersectionOf (sparqlQuery:PatientEvent [ rdf:type owl:Restriction ;
                            owl:onProperty sparqlQuery:eventSource ;
                            owl:someValuesFrom sparqlQuery:SurgicalProcedure
                          ])
              ] .

sparqlQuery:TCGACollectionSite
      rdf:type owl:Class ;
      rdfs:comment "A Collecion Site is a physical location acting as the upstream provider of biological material.  Collection Centers do have specific processes, inputs and output. A Collection Site may be affiliated with one or more organizations, but they are not organizations themselves."^^xsd:string ;
      rdfs:subClassOf skos:Concept ;
      dc:creator foaf:JimLomax .

sparqlQuery:TCGACollectionSite_CALGB
      rdf:type sparqlQuery:TCGACollectionSite .

sparqlQuery:TCGACollectionSite_CellLines
      rdf:type sparqlQuery:TCGACollectionSite .

sparqlQuery:TCGACollectionSite_DukeBrainBank
      rdf:type sparqlQuery:TCGACollectionSite .

sparqlQuery:TCGACollectionSite_GynecologicOncology
      rdf:type sparqlQuery:TCGACollectionSite .

sparqlQuery:TCGACollectionSite_HenryFord
      rdf:type sparqlQuery:TCGACollectionSite .

sparqlQuery:TCGACollectionSite_Intgen
      rdf:type sparqlQuery:TCGACollectionSite .

sparqlQuery:TCGACollectionSite_MDABrainBank
      rdf:type sparqlQuery:TCGACollectionSite ;
      sparqlQuery:organization
              sparqlQuery:MDAOrg .

sparqlQuery:TCGACollectionSite_MDALungBank
      rdf:type sparqlQuery:TCGACollectionSite ;
      sparqlQuery:organization
              sparqlQuery:MDAOrg .

sparqlQuery:TCGACollectionSite_MDAOvarianBank
      rdf:type sparqlQuery:TCGACollectionSite ;
      sparqlQuery:organization
              sparqlQuery:MDAOrg .

sparqlQuery:TCGACollectionSite_NCI
      rdf:type sparqlQuery:TCGACollectionSite .

sparqlQuery:TCGACollectionSite_UCSFBrainBank
      rdf:type sparqlQuery:TCGACollectionSite ;
      sparqlQuery:organization
              sparqlQuery:UCSFOrg .

sparqlQuery:TCGACollectionSite_UCSFOvarianBank
      rdf:type sparqlQuery:TCGACollectionSite ;
      sparqlQuery:organization
              sparqlQuery:UCSFOrg .

sparqlQuery:TCGADataIntegrity
      rdf:type sparqlQuery:Goal .

sparqlQuery:TCGAProject
      rdf:type sparqlQuery:Project .

sparqlQuery:TIF
      rdf:type sparqlQuery:ImageFormat .

sparqlQuery:TargetedMolecularTherapy
      rdf:type owl:Class ;
      rdfs:comment "Cancer therapies designed to act upon specific molecules in metabolic pathways or processes involved in carcinogenesis, tumor growth, or tumor spread."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:TherapeuticProcedure ;
      dc:creator foaf:JimLomax .

sparqlQuery:TargetedMolecularTherapyPatientEvent
      rdf:type owl:Class ;
      rdfs:comment "Target Molecular Therapy applied to a Patient, temporally."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:TherapeuticProcedurePatientEvent ;
      sparqlQuery:designNote
              "A Targeted Molecular Therapy Patient Event is a Patient Event that is generated by (event source) a Molecular Therapy."^^xsd:string ;
      dc:creator foaf:JimLomax ;
      owl:equivalentClass
              [ rdf:type owl:Class ;
                owl:intersectionOf (sparqlQuery:TherapeuticProcedurePatientEvent [ rdf:type owl:Restriction ;
                            owl:onProperty sparqlQuery:eventSource ;
                            owl:someValuesFrom sparqlQuery:TargetedMolecularTherapy
                          ])
              ] .

sparqlQuery:Template
      rdf:type spin:SelectTemplate ;
      rdfs:subClassOf spin:SelectTemplates .

sparqlQuery:TemporalEvent
      rdf:type owl:Class ;
      rdfs:comment "Faceted taxonomy of time based entities."^^xsd:string ;
      rdfs:subClassOf time-entry:InstantEvent ;
      dc:creator foaf:JimLomax .

sparqlQuery:TenM_Concentration
      rdf:type sparqlQuery:Concentration ;
      sparqlQuery:units sparqlQuery:Molarity_ConcentrationUnits ;
      sparqlQuery:value "10"^^xsd:string .

sparqlQuery:TheDataCoordinatingCenter
      rdf:type sparqlQuery:DataCoordinatingCenter .

sparqlQuery:TherapeuticProcedure
      rdf:type owl:Class ;
      rdfs:comment "The action or administration of therapeutic agents to produce an effect that is intended to alter the course of a pathologic process."^^xsd:string ;
      rdfs:subClassOf skos:Concept ;
      sparqlQuery:designNote
              "A specific instance of Therapeutic Procedure may be referred to by different names to support different perspectives. For this reason we will employ a SKOS labeling system."^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:TherapeuticProcedureList1_Item_Chemotherapy1
      rdf:type collections:ListItem ;
      collections:itemContent
              sparqlQuery:Chemotherapy1_TherapeuticProcedure ;
      collections:nextItem
              sparqlQuery:TherapeuticProcedureList1_Item_Chemotherpay2 .

sparqlQuery:TherapeuticProcedureList1_Item_Chemotherpay2
      rdf:type collections:ListItem ;
      collections:itemContent
              sparqlQuery:Chemotherapy2_TherapeuticProcedure ;
      collections:nextItem
              sparqlQuery:TherapeuticProcedureList1_Item_Radiation1 .

sparqlQuery:TherapeuticProcedureList1_Item_Radiation1
      rdf:type collections:ListItem ;
      collections:itemContent
              sparqlQuery:ExternalBeamRadiationTherapy1_TherapeuticProcedure .

sparqlQuery:TherapeuticProcedureOutcome
      rdf:type owl:Class ;
      rdfs:comment "The result of a therpeutic procedure (therapy). There are most likely members to this concept that are defined by NCI Thesaurus."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:Outcome ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:onProperty sparqlQuery:outcomeOf ;
                owl:someValuesFrom sparqlQuery:TherapeuticProcedure
              ] ;
      dc:creator foaf:JimLomax ;
      owl:equivalentClass
              [ rdf:type owl:Class ;
                owl:intersectionOf (sparqlQuery:Outcome [ rdf:type owl:Restriction ;
                            owl:onProperty sparqlQuery:outcomeOf ;
                            owl:someValuesFrom sparqlQuery:TherapeuticProcedure
                          ])
              ] .

sparqlQuery:TherapeuticProcedurePatientEvent
      rdf:type owl:Class ;
      rdfs:comment "Administration of a therapeutic procedure to a patient. A TherapeuticProcedurePatientEvent differs from a Therapeutic Procedure, in that a TherapeuticProcedure is simply existential and not applied to a patient, temporally. "^^xsd:string ;
      rdfs:subClassOf sparqlQuery:PatientEvent ;
      sparqlQuery:designNote
              "A TherapeuticProcedurePatientEvent is a Patient Event that is generated by (eventSource) a Therapeutic Procedure"^^xsd:string ;
      dc:creator foaf:JimLomax ;
      owl:equivalentClass
              [ rdf:type owl:Class ;
                owl:intersectionOf (sparqlQuery:PatientEvent [ rdf:type owl:Restriction ;
                            owl:onProperty sparqlQuery:eventSource ;
                            owl:someValuesFrom sparqlQuery:TherapeuticProcedure
                          ])
              ] .

sparqlQuery:TherpaeuticProcedureList1
      rdf:type collections:List ;
      collections:firstItem
              sparqlQuery:TherapeuticProcedureList1_Item_Chemotherapy1 ;
      collections:lastItem
              sparqlQuery:TherapeuticProcedureList1_Item_Radiation1 .

sparqlQuery:ThreeM_Concentration
      rdf:type sparqlQuery:Concentration ;
      sparqlQuery:units sparqlQuery:Molarity_ConcentrationUnits ;
      sparqlQuery:value "3"^^xsd:string .

sparqlQuery:TissueSample
      rdf:type owl:Class ;
      rdfs:comment "A tissue sample in the context of TCGA  is a biological sample from a tumor."^^xsd:string ;
      rdfs:subClassOf skos:Concept ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:cardinality "1"^^xsd:int ;
                owl:onProperty sparqlQuery:tissueType
              ] ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:onProperty sparqlQuery:genomicCenter ;
                owl:someValuesFrom sparqlQuery:GenomicProcessingCenter
              ] ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:onProperty sparqlQuery:patient ;
                owl:someValuesFrom sparqlQuery:Patient
              ] ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:cardinality "1"^^xsd:nonNegativeInteger ;
                owl:onProperty sparqlQuery:patient
              ] ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:onProperty sparqlQuery:collectionSite ;
                owl:someValuesFrom sparqlQuery:TCGACollectionSite
              ] ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:onProperty sparqlQuery:tissueType ;
                owl:someValuesFrom sparqlQuery:TissueType
              ] ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:cardinality "1"^^xsd:int ;
                owl:onProperty sparqlQuery:collectionSite
              ] ;
      sparqlQuery:designNote
              "A tissue sample may be processed by at least but possibly  more than one genomic processing center, such as a genomic characterization center and a genomic sequencing center (TCGA specific)"^^xsd:string , "A tissue sample is collected and pre-processed from its upstream colllection site by one BCR."^^xsd:string , "A tissue sample is physically collected from one collection site (TCGA specific)"^^xsd:string , "A tissue sample may be labeled differently from different perspectives, therefore a SKOS  labeling system will be employed."^^xsd:string , "A tissue sample may be associated with at least one Project."^^xsd:string , "A tissue sample originates from one patient."^^xsd:string , "A tissue sample must be from one specific type of tissue (TCGA specific)"^^xsd:string , "A tissue sample is a biospecimen"^^xsd:string , "A tissue sample, by its nature, must have at least one Portion; the Portion is the physical subdivision of the sample; it is the whole sample if no further subdivision exists (TCGA specific)"^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:TissueSamplesDisjoint
      rdf:type rdfs:Class ;
      rdfs:subClassOf rdf:Statement .

sparqlQuery:TissueType
      rdf:type owl:Class ;
      rdfs:subClassOf skos:Concept ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:onProperty sparqlQuery:name ;
                owl:someValuesFrom rdfs:Literal
              ] .

sparqlQuery:TotalRNAAnalyte
      rdf:type owl:Class ;
      rdfs:comment "The analyte in question  is purified RNA from tissue. It contains all the RNA of the cells. This is in contrast to a  purification containing only mRNA"^^xsd:string ;
      rdfs:subClassOf sparqlQuery:Analyte ;
      dc:creator foaf:JimLomax ;
      owl:disjointWith sparqlQuery:EBVImmortalizedNormalAnalyte , sparqlQuery:RepliGDNAAnalyte , sparqlQuery:DNAAnalyte , sparqlQuery:GenomePlexAmplifiedDNAAnalyte .

sparqlQuery:TotalRNATissueSample
      rdf:type owl:Class ;
      rdfs:subClassOf sparqlQuery:TissueSample ;
      owl:equivalentClass
              [ rdf:type owl:Class ;
                owl:intersectionOf (sparqlQuery:TissueSample [ rdf:type owl:Restriction ;
                            owl:hasValue sparqlQuery:SampleType_TotalRNA ;
                            owl:onProperty sparqlQuery:sampleType
                          ])
              ] .

sparqlQuery:TransformRawTCGAToRDF
      rdf:type sparqlQuery:Goal .

sparqlQuery:TumorMarker
      rdf:type owl:Class ;
      rdfs:comment "A substance present in or produced by a tumor or by the host, that can be used for differentiating neoplastic from normal tissue based on measurements in body fluids, secretions, cells, and/or tissues. Markers are used in diagnosis, staging and prognosis of cancer, provide an estimation of tumor burden, and serve for monitoring effects of therapy, detecting recurrence, localization of tumors, and screening in general populations."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:DiseaseMarker ;
      dc:creator foaf:JimLomax .

sparqlQuery:TwentyThreeGray_RadiationDosage
      rdf:type sparqlQuery:RadiationDosage ;
      sparqlQuery:units sparqlQuery:Gray_DosageUnits ;
      sparqlQuery:value "23"^^xsd:string .

sparqlQuery:TwoPills_Dosage
      rdf:type sparqlQuery:Dosage ;
      sparqlQuery:units sparqlQuery:Pill_DosageUnits ;
      sparqlQuery:value "2"^^xsd:string .

sparqlQuery:UCSFOrg
      rdf:type sparqlQuery:Organization .

sparqlQuery:UnitOfMeasure
      rdf:type owl:Class ;
      rdfs:comment "A named quantity in terms of which other quantities are measured or specified, used as a standard measurement of like kinds."^^xsd:string ;
      rdfs:subClassOf skos:Concept ;
      sparqlQuery:designNote
              "Units are notoriusly named accordin to perspective, abbreviation of more formal names is common. Therefore a SKOS labeling system will be employed to capture different names for the same unit of measure."^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:Units
      rdf:type owl:Class ;
      rdfs:comment "A named quantity in terms of which other quantities are measured or specified, used as a standard measurement of like kinds."^^xsd:string ;
      rdfs:subClassOf skos:Concept ;
      sparqlQuery:designNote
              "Units are notoriusly named accordin to perspective, abbreviation of more formal names is common. Therefore a SKOS labeling system will be employed to capture different names for the same unit of measure."^^xsd:string ;
      dc:creator foaf:JimLomax ;
      owl:equivalentClass sparqlQuery:UnitOfMeasure .

sparqlQuery:UniversityOfNorthCarolinaAtChapelHillOrg
      rdf:type sparqlQuery:Organization .

sparqlQuery:UseCase
      rdf:type owl:Class ;
      rdfs:comment "A description of a system’s behavior as it responds to a request that originates from outside of that system. A use case has a name, at least one Actor (entity that interacts with the system), at least one Activity (a granular action taken by an Actor on a system), can be realized in least one application (system),has at least one description of how the actor interacts with the system to accomplish a goal, an identfier( from whatever identification scheme is in play)"^^xsd:string ;
      rdfs:label "Use Case"^^xsd:string ;
      rdfs:subClassOf skos:Concept ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:onProperty sparqlQuery:hasGoal ;
                owl:someValuesFrom sparqlQuery:Goal
              ] ;
      rdfs:subClassOf
              [ rdf:type owl:Restriction ;
                owl:onProperty sparqlQuery:hasIdentifier ;
                owl:someValuesFrom rdfs:Literal
              ] .

sparqlQuery:UseCaseCoveredModelElementsQuery
      rdf:type sparqlQuery:SPARQLQuery ;
      rdfs:comment "Retrieve all model elements that are referenced by UseCases. In this case we deem that a model element has been covered by a use case."^^xsd:string ;
      rdfs:label "Model Elements: Covered By Use Cases"^^xsd:string ;
      dc:creator foaf:JimLomax ;
      spin:query
              [ rdf:type sp:Select ;
                sp:resultVariables (_:b411 _:b412) ;
                sp:where ([ sp:object sparqlQuery:UseCase ;
                            sp:predicate rdf:type ;
                            sp:subject _:b412
                          ] [ sp:object _:b411 ;
                            sp:predicate sparqlQuery:involvesConcept ;
                            sp:subject _:b412
                          ])
              ] ;
      spin:query
              [ rdf:type sp:Select ;
                sp:resultVariables (_:b413 _:b414) ;
                sp:where ([ sp:object sparqlQuery:UseCase ;
                            sp:predicate rdf:type ;
                            sp:subject _:b414
                          ] [ sp:object _:b414 ;
                            sp:predicate sparqlQuery:conceptInvolvedBy ;
                            sp:subject _:b413
                          ])
              ] .

sparqlQuery:UseCaseNotCoveredModelElementsQuery
      rdf:type sparqlQuery:SPARQLQuery ;
      rdfs:comment "Retrieve all model elements that are not referenced by any UseCase. In this case we refer to the model elements as uncovered. Uncovered model elements are usually suspect as to their usefulness, since they are not included in UseCases."^^xsd:string ;
      rdfs:label "Model Elements: Not Covered By Use Cases"^^xsd:string ;
      dc:creator foaf:JimLomax ;
      spin:query
              [ rdf:type sp:Select ;
                sp:distinct "true"^^xsd:boolean ;
                sp:resultVariables (_:b415) ;
                sp:where (([ rdf:type sp:Union ;
                              sp:elements (([ sp:object owl:Thing ;
                                            sp:predicate rdfs:subClassOf ;
                                            sp:subject _:b415
                                          ]) ([ sp:object owl:ObjectProperty ;
                                            sp:predicate rdf:type ;
                                            sp:subject _:b415
                                          ]) ([ sp:object owl:DatatypeProperty ;
                                            sp:predicate rdf:type ;
                                            sp:subject _:b415
                                          ]) ([ sp:object owl:AnnotationProperty ;
                                            sp:predicate rdf:type ;
                                            sp:subject _:b415
                                          ]))
                            ]) [ rdf:type sp:Optional ;
                            sp:elements ([ sp:object _:b416 ;
                                        sp:predicate sparqlQuery:conceptInvolvedBy ;
                                        sp:subject _:b415
                                      ])
                          ] [ rdf:type sp:Filter ;
                            sp:expression
                                    [ rdf:type sp:not ;
                                      sp:arg1 [ rdf:type sp:bound ;
                                                sp:arg1 _:b416
                                              ]
                                    ]
                          ])
              ] .

sparqlQuery:VitalStatus
      rdf:type owl:Class ;
      rdfs:comment "Indicates a vital status of a subject; living or not."^^xsd:string ;
      rdfs:subClassOf skos:Concept ;
      dc:creator foaf:JimLomax .

sparqlQuery:VolumeUnits
      rdf:type owl:Class ;
      rdfs:subClassOf sparqlQuery:Units .

sparqlQuery:WHG-4x44K_G4112FPlatform
      rdf:type sparqlQuery:Platform ;
      sparqlQuery:hasVendor
              sparqlQuery:AgilentOrg .

sparqlQuery:WashingtonUniversityOrg
      rdf:type sparqlQuery:Organization .

sparqlQuery:Weight
      rdf:type owl:Class ;
      rdfs:comment "The vertical force exerted by a mass as a result of gravity"^^xsd:string ;
      rdfs:subClassOf sparqlQuery:Quantity ;
      sparqlQuery:designNote
              "A Weight  instance has  the capacity to be labeled differently to support different perspectives. For example one consumer may label a weight by its numeric value, however another may deem it \"NormalWeight\", \"Overweight\", \"MaximumWeight\", etc. For this reason a SKOS labeling system will be employed."^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:WeightUnits
      rdf:type owl:Class ;
      rdfs:subClassOf sparqlQuery:Units .

sparqlQuery:Well
      rdf:type owl:Class ;
      rdfs:comment "A Well is a logical and physical division of a Microplate; it is a physical container for a small amount of substance to be analyzed"^^xsd:string ;
      rdfs:subClassOf skos:Concept ;
      sparqlQuery:designNote
              "An instance of Well can be labeled differently to support multiple perspectives of the same Well (ordinarily for different purposes), therefore a SKOS labeling system will be employed."^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:WellNumber
      rdf:type owl:Class ;
      rdfs:comment "A WellNumber is a unique identification for a Well in the context of its container. For TCGA data the parent will be a Microplate."^^xsd:string ;
      rdfs:subClassOf skos:Concept ;
      dc:creator foaf:JimLomax .

sparqlQuery:White_Race
      rdf:type sparqlQuery:Race ;
      dc:creator foaf:JimLomax .

sparqlQuery:XMLTechnologyArtifact
      rdf:type owl:Class ;
      rdfs:comment "Any file that is XML related: XML, XSD, XSLT, etc."^^xsd:string ;
      rdfs:subClassOf sparqlQuery:ComputationalArtifact ;
      dc:creator foaf:JimLomax .

sparqlQuery:abbreviatedForm
      rdf:type owl:ObjectProperty ;
      rdfs:comment "Property that established a term to abbreviation of term relationship between skos-xl Labels."^^xsd:string ;
      rdfs:subPropertyOf skos-xl:labelRelation ;
      sparqlQuery:designNote
              "The abbreviation property was added to assist in multiple naming conventions of the same member. Mutliple valid names for a member is a common occurence in integration projects, particularly so when attemping to integrate TCGA data sources with insititutional data sources, as each has adopted naming standards that do not necessarily agree. It is also common within the institution to correctly represent the same member with a formal name and a commonly accepted abbreviation(s)."^^xsd:string , "An obvious comment, however,to be very clear,  abbrevation is NOT a  transitive or functional property."^^xsd:string ;
      dc:creator foaf:JimLomax ;
      owl:inverseOf sparqlQuery:fullForm .

sparqlQuery:accessionNumberOf
      rdf:type owl:ObjectProperty ;
      rdfs:subPropertyOf sparqlQuery:hasAccessionNumber .

sparqlQuery:allelicProbeAOf
      rdf:type owl:ObjectProperty ;
      rdfs:subPropertyOf sparqlQuery:probeSequenceOf .

sparqlQuery:allelicProbeBOf
      rdf:type owl:ObjectProperty ;
      rdfs:subPropertyOf sparqlQuery:probeSequenceOf .

sparqlQuery:archiveDownloadName
      rdf:type owl:ObjectProperty ;
      rdfs:subPropertyOf sparqlQuery:name .

sparqlQuery:archiveListingName
      rdf:type owl:ObjectProperty ;
      rdfs:subPropertyOf sparqlQuery:name .

sparqlQuery:barcode
      rdf:type owl:FunctionalProperty ;
      rdfs:comment "Barcode is a functional property since any object with a barcode must be guaranteed that a barcode is unique."^^xsd:string ;
      rdfs:subPropertyOf dc:identifier ;
      dc:creator foaf:JimLomax .

sparqlQuery:cancer
      rdf:type owl:ObjectProperty ;
      rdfs:comment "Contingent on acceptance of Cancer into the ontology"^^xsd:string ;
      rdfs:subPropertyOf sparqlQuery:disease .

sparqlQuery:cghg4447aPlatform
      rdf:type sparqlQuery:Platform ;
      sparqlQuery:hasVendor
              sparqlQuery:AgilentOrg .

sparqlQuery:channelTypeOf
      rdf:type owl:ObjectProperty .

sparqlQuery:chromosomeArm
      rdf:type owl:ObjectProperty .

sparqlQuery:chromosomeArmName
      rdf:type owl:ObjectProperty ;
      rdfs:subPropertyOf sparqlQuery:name .

sparqlQuery:chromosomeBandNumber
      rdf:type owl:ObjectProperty .

sparqlQuery:chromosomeBandOf
      rdf:type owl:ObjectProperty .

sparqlQuery:chromosomeNumber
      rdf:type owl:ObjectProperty .

sparqlQuery:chromosomeOf
      rdf:type owl:ObjectProperty .

sparqlQuery:code
      rdf:type owl:DatatypeProperty ;
      rdfs:range rdfs:Literal .

sparqlQuery:collectionSite
      rdf:type owl:ObjectProperty ;
      rdfs:comment "Contingent on acceptance of Collection Site  into the ontology"^^xsd:string ;
      owl:inverseOf sparqlQuery:collectionSiteOf .

sparqlQuery:collectionSiteId
      rdf:type owl:FunctionalProperty ;
      rdfs:subPropertyOf dc:identifier .

sparqlQuery:collectionSiteName
      rdf:type owl:ObjectProperty ;
      rdfs:subPropertyOf sparqlQuery:name .

sparqlQuery:collectionSiteOf
      rdf:type owl:ObjectProperty .

sparqlQuery:composedOf
      rdf:type owl:ObjectProperty ;
      owl:inverseOf sparqlQuery:composes .

sparqlQuery:composes
      rdf:type owl:ObjectProperty .

sparqlQuery:compressionAlgorithmOf
      rdf:type owl:ObjectProperty .

sparqlQuery:conceptInvolvedBy
      rdf:type owl:ObjectProperty ;
      owl:inverseOf sparqlQuery:involvesConcept .

sparqlQuery:controlFeatureTypeOf
      rdf:type owl:ObjectProperty .

sparqlQuery:correspondsTo
      rdf:type owl:ObjectProperty .

sparqlQuery:cpgSiteIdOf
      rdf:type owl:ObjectProperty .

sparqlQuery:createdOn
      rdf:type owl:ObjectProperty ;
      rdfs:comment "The date an entity was created."^^xsd:string ;
      rdfs:subPropertyOf sparqlQuery:dateTimeInstant .

sparqlQuery:creationDate
      rdf:type owl:ObjectProperty ;
      rdfs:comment "The date an entity was created."^^xsd:string ;
      rdfs:subPropertyOf sparqlQuery:dateTimeInstant .

sparqlQuery:cy3LabelingProtocol1
      rdf:type mage:Protocol .

sparqlQuery:cy3LabelingTreatment1
      rdf:type mage:Treatment .

sparqlQuery:cy3PreWashProtocol1
      rdf:type mage:Protocol .

sparqlQuery:cy3PreWashTreatment1
      rdf:type mage:Treatment .

sparqlQuery:dateTime
      rdf:type owl:DatatypeProperty ;
      rdfs:comment "Any entity in the ontology having a dateTime"^^xsd:string .

sparqlQuery:dateTimeInstant
      rdf:type owl:DatatypeProperty ;
      rdfs:range time-entry:InstantThing ;
      rdfs:subPropertyOf sparqlQuery:dateTimeThing .

sparqlQuery:dateTimeThing
      rdf:type owl:DatatypeProperty ;
      rdfs:range time-entry:TemporalThing ;
      rdfs:subPropertyOf sparqlQuery:dateTime .

sparqlQuery:death
      rdf:type owl:ObjectProperty .

sparqlQuery:designElementOf
      rdf:type owl:ObjectProperty .

sparqlQuery:designNote
      rdf:type owl:AnnotationProperty ;
      rdfs:subPropertyOf rdfs:comment .

sparqlQuery:diagnosis
      rdf:type owl:ObjectProperty .

sparqlQuery:directory
      rdf:type owl:ObjectProperty .

sparqlQuery:disease
      rdf:type owl:ObjectProperty ;
      rdfs:comment "Contingent on acceptance of Cancer into the ontology"^^xsd:string ;
      owl:inverseOf sparqlQuery:diseaseOf .

sparqlQuery:diseaseGrading
      rdf:type owl:ObjectProperty ;
      rdfs:comment "comment placeholder"^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:diseaseOf
      rdf:type owl:ObjectProperty .

sparqlQuery:domainQuestion
      rdf:type owl:AnnotationProperty ;
      rdfs:subPropertyOf rdfs:comment .

sparqlQuery:endingBasePairNumber
      rdf:type owl:DatatypeProperty .

sparqlQuery:event
      rdf:type owl:ObjectProperty .

sparqlQuery:eventSource
      rdf:type owl:ObjectProperty ;
      rdfs:comment "The source \"object\" of an event; the entity or nature of the action."^^xsd:string .

sparqlQuery:eventTarget
      rdf:type owl:ObjectProperty ;
      rdfs:comment "The target \"object\" of an event; the target of the action."^^xsd:string .

sparqlQuery:examinationId
      rdf:type owl:FunctionalProperty ;
      rdfs:subPropertyOf dc:identifier ;
      sparqlQuery:designNote
              "examinationId is functional since any object using examinationId must be guarnteed that it will have a unique examiniation Id. A Examination can only have on examinationId by definition"^^xsd:string .

sparqlQuery:examinationIdOf
      rdf:type owl:ObjectProperty .

sparqlQuery:exhibitsMorphology
      rdf:type owl:ObjectProperty ;
      rdfs:comment "The subject exhibits a morphology, a structure and/or composition,  resembling the predicate. In a biological context this means that the subjects resembles the object in terms of its biological structure and composition."^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:exhibitsTumorMorphology
      rdf:type owl:ObjectProperty ;
      rdfs:comment "The diomain exhibits structural or compositional similarities to the range, which is a tumor."^^xsd:string ;
      rdfs:subPropertyOf sparqlQuery:exhibitsMorphology ;
      sparqlQuery:designNote
              "Exhibits Tumor Morpholgy is a specialization of Exhibits Morphology since the range of the relationship is implicitly a tumor."^^xsd:string , "The domain is intentionally unspecified since it could be an instance of another tumor or a tumor sample or a sample of anything  that may or may not yet be classified."^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:extendedByUseCase
      rdf:type owl:ObjectProperty ;
      owl:inverseOf sparqlQuery:extendsUseCase .

sparqlQuery:extendsUseCase
      rdf:type owl:ObjectProperty ;
      rdfs:comment "This property represents the modeling situation where one Use Case extends the behavior of another Use Case. The extending Use Case initiates and owns the extends relationship. The extended Use Case is unaware that it has been extended, as it must remain a unit of intact behavior for potential extension by other extending Use Cases.  The domain and range for this property are both implicitly Use Cases."^^xsd:string ;
      rdfs:domain sparqlQuery:UseCase ;
      rdfs:label "Extends Use Case"^^xsd:string ;
      rdfs:range sparqlQuery:UseCase ;
      dc:creator foaf:JimLomax .

sparqlQuery:extensionActivityOf
      rdf:type owl:ObjectProperty .

sparqlQuery:extensionOf
      rdf:type owl:ObjectProperty ;
      owl:inverseOf sparqlQuery:hasExtension .

sparqlQuery:extensionPointOf
      rdf:type owl:ObjectProperty .

sparqlQuery:file
      rdf:type owl:ObjectProperty .

sparqlQuery:fileTypeOf
      rdf:type owl:ObjectProperty .

sparqlQuery:fullForm
      rdf:type owl:ObjectProperty ;
      rdfs:subPropertyOf skos-xl:labelRelation .

sparqlQuery:g4502a071Platform
      rdf:type sparqlQuery:Platform ;
      sparqlQuery:hasVendor
              sparqlQuery:AgilentOrg .

sparqlQuery:g4502a072Platform
      rdf:type sparqlQuery:Platform ;
      sparqlQuery:hasVendor
              sparqlQuery:AgilentOrg .

sparqlQuery:g4502a073Platform
      rdf:type sparqlQuery:Platform ;
      sparqlQuery:hasVendor
              sparqlQuery:AgilentOrg .

sparqlQuery:geneIdOf
      rdf:type owl:ObjectProperty .

sparqlQuery:geneSymbolOf
      rdf:type owl:ObjectProperty .

sparqlQuery:generalizesUseCase
      rdf:type owl:ObjectProperty ;
      rdfs:comment "This property represents the modeling situation where one Use Case generalizes the behavior of another Use Case. The generalizing Use Case represents a set of  common behaviors, requirements, constraints, and assumptions with a more specialized use case.  The domain and range for this property are both implicitly Use Cases. The inverse of this property is specializesUseCase."^^xsd:string ;
      rdfs:domain sparqlQuery:UseCase ;
      rdfs:label "Generalizes Use Case"^^xsd:string ;
      rdfs:range sparqlQuery:UseCase ;
      dc:creator foaf:JimLomax ;
      owl:inverseOf sparqlQuery:specializesUseCase .

sparqlQuery:genomeBuild
      rdf:type owl:ObjectProperty .

sparqlQuery:genome_wide_snp6Platform
      rdf:type sparqlQuery:Platform ;
      sparqlQuery:hasVendor
              sparqlQuery:AffymetrixOrg .

sparqlQuery:genomicCenter
      rdf:type owl:ObjectProperty ;
      rdfs:comment "Contingent on acceptance of Genomic Center into the ontology"^^xsd:string ;
      rdfs:subPropertyOf sparqlQuery:organization ;
      owl:inverseOf sparqlQuery:genomicCenterOf .

sparqlQuery:genomicCenterOf
      rdf:type owl:ObjectProperty .

sparqlQuery:genomicSequenceIdOf
      rdf:type owl:ObjectProperty .

sparqlQuery:genomicSequenceSourceReferenceOf
      rdf:type owl:ObjectProperty .

sparqlQuery:goalOf
      rdf:type owl:TransitiveProperty ;
      owl:inverseOf sparqlQuery:hasGoal .

sparqlQuery:hasAccessLevel
      rdf:type owl:ObjectProperty .

sparqlQuery:hasAccessionNumber
      rdf:type owl:ObjectProperty ;
      rdfs:subPropertyOf sparqlQuery:hasGenomicSequenceId ;
      owl:inverseOf sparqlQuery:accessionNumberOf .

sparqlQuery:hasActivity
      rdf:type owl:ObjectProperty .

sparqlQuery:hasActor
      rdf:type owl:ObjectProperty .

sparqlQuery:hasAllelicProbeA
      rdf:type owl:ObjectProperty ;
      rdfs:subPropertyOf sparqlQuery:hasProbeSequence ;
      owl:inverseOf sparqlQuery:allelicProbeAOf .

sparqlQuery:hasAllelicProbeB
      rdf:type owl:ObjectProperty ;
      rdfs:subPropertyOf sparqlQuery:hasProbeSequence ;
      owl:inverseOf sparqlQuery:allelicProbeBOf .

sparqlQuery:hasApplication
      rdf:type owl:ObjectProperty .

sparqlQuery:hasApproval
      rdf:type owl:AnnotationProperty .

sparqlQuery:hasArchive
      rdf:type owl:ObjectProperty .

sparqlQuery:hasArchiveDownload
      rdf:type owl:ObjectProperty .

sparqlQuery:hasArchiveName
      rdf:type owl:ObjectProperty ;
      rdfs:subPropertyOf sparqlQuery:name .

sparqlQuery:hasArchiveVersion
      rdf:type owl:ObjectProperty ;
      rdfs:subPropertyOf mage:has_version .

sparqlQuery:hasBranchConidition
      rdf:type owl:ObjectProperty .

sparqlQuery:hasCancer
      rdf:type owl:ObjectProperty ;
      rdfs:comment "Contingent on acceptance of Cancer into the ontology"^^xsd:string ;
      rdfs:subPropertyOf sparqlQuery:disease .

sparqlQuery:hasChannelType
      rdf:type owl:ObjectProperty ;
      owl:inverseOf sparqlQuery:channelTypeOf .

sparqlQuery:hasChromosome
      rdf:type owl:ObjectProperty ;
      owl:inverseOf sparqlQuery:chromosomeOf .

sparqlQuery:hasChromosomeBand
      rdf:type owl:ObjectProperty ;
      owl:inverseOf sparqlQuery:chromosomeBandOf .

sparqlQuery:hasCollectionSite
      rdf:type owl:ObjectProperty ;
      rdfs:comment "Contingent on acceptance of Collection Site  into the ontology"^^xsd:string ;
      owl:inverseOf sparqlQuery:collectionSiteOf .

sparqlQuery:hasCpgSiteId
      rdf:type owl:ObjectProperty ;
      rdfs:subPropertyOf dc:identifier ;
      owl:inverseOf sparqlQuery:cpgSiteIdOf .

sparqlQuery:hasDatatype
      rdf:type owl:ObjectProperty ;
      owl:inverseOf sparqlQuery:platformOf .

sparqlQuery:hasDesignElement
      rdf:type owl:ObjectProperty .

sparqlQuery:hasExtension
      rdf:type owl:ObjectProperty .

sparqlQuery:hasExtensionActivity
      rdf:type owl:ObjectProperty ;
      owl:inverseOf sparqlQuery:extensionActivityOf .

sparqlQuery:hasExtensionPoint
      rdf:type owl:ObjectProperty ;
      owl:inverseOf sparqlQuery:extensionPointOf .

sparqlQuery:hasFileType
      rdf:type owl:TransitiveProperty ;
      owl:inverseOf sparqlQuery:fileTypeOf .

sparqlQuery:hasGeneId
      rdf:type owl:ObjectProperty ;
      owl:inverseOf sparqlQuery:geneIdOf .

sparqlQuery:hasGeneSymbol
      rdf:type owl:ObjectProperty ;
      owl:inverseOf sparqlQuery:geneSymbolOf .

sparqlQuery:hasGenomicCenter
      rdf:type owl:ObjectProperty ;
      rdfs:comment "Contingent on acceptance of Genomic Center into the ontology"^^xsd:string ;
      rdfs:subPropertyOf sparqlQuery:organization ;
      owl:inverseOf sparqlQuery:genomicCenterOf .

sparqlQuery:hasGenomicSequenceId
      rdf:type owl:ObjectProperty ;
      rdfs:subPropertyOf dc:identifier ;
      owl:inverseOf sparqlQuery:genomicSequenceIdOf .

sparqlQuery:hasGenomicSequenceReferenceSource
      rdf:type owl:ObjectProperty ;
      rdfs:comment "A property that describes a genomic sequence's source reference (such as NCBI's refseq sequence database)"^^xsd:string ;
      owl:inverseOf sparqlQuery:genomicSequenceSourceReferenceOf .

sparqlQuery:hasGoal
      rdf:type owl:ObjectProperty ;
      owl:inverseOf sparqlQuery:goalOf .

sparqlQuery:hasIdentifier
      rdf:type owl:ObjectProperty .

sparqlQuery:hasImageFormat
      rdf:type owl:ObjectProperty ;
      owl:inverseOf sparqlQuery:imageFormatOF .

sparqlQuery:hasInterest
      rdf:type owl:ObjectProperty .

sparqlQuery:hasLanguage
      rdf:type owl:ObjectProperty ;
      rdfs:comment "Property indicating that the class has a language dimension. The assumption is that the language dimension is not the language of the class."^^xsd:string .

sparqlQuery:hasMicroarray
      rdf:type owl:ObjectProperty .

sparqlQuery:hasMolecularLocation
      rdf:type owl:ObjectProperty ;
      rdfs:subPropertyOf sparqlQuery:locatedBy ;
      owl:inverseOf sparqlQuery:molecularLocationOf .

sparqlQuery:hasName
      rdf:type rdf:Property ;
      rdfs:subPropertyOf rdfs:label ;
      owl:equivalentProperty
              sparqlQuery:name .

sparqlQuery:hasNextBase
      rdf:type owl:ObjectProperty ;
      owl:inverseOf sparqlQuery:nextBaseOf .

sparqlQuery:hasParent
      rdf:type owl:TransitiveProperty ;
      owl:inverseOf sparqlQuery:parentOf .

sparqlQuery:hasPatient
      rdf:type owl:ObjectProperty ;
      rdfs:comment "Contingent on the acceptance of the Patient class into the ontology"^^xsd:string ;
      owl:inverseOf sparqlQuery:patientOf .

sparqlQuery:hasPatientId
      rdf:type owl:FunctionalProperty ;
      rdfs:subPropertyOf dc:identifier ;
      sparqlQuery:designNote
              "hasPatientId is synonymous with the property patientId; eventually hasPatientId should be removed."^^xsd:string , "hasPatientId is functional since any object using PatientId must be guaranteed that it will have a unique PatientId; a Patient can only have on PatientId."^^xsd:string ;
      dc:creator foaf:JimLomax ;
      owl:inverseOf sparqlQuery:patientIdOf .

sparqlQuery:hasPlatform
      rdf:type owl:ObjectProperty ;
      owl:inverseOf sparqlQuery:platformOf .

sparqlQuery:hasProbe
      rdf:type owl:ObjectProperty ;
      owl:inverseOf sparqlQuery:probeOf .

sparqlQuery:hasProbeSequence
      rdf:type owl:ObjectProperty ;
      rdfs:subPropertyOf sparqlQuery:hasSequence ;
      owl:inverseOf sparqlQuery:probeSequenceOf .

sparqlQuery:hasProject
      rdf:type owl:ObjectProperty ;
      owl:inverseOf sparqlQuery:platformOf .

sparqlQuery:hasQuery
      rdf:type owl:ObjectProperty .

sparqlQuery:hasResponsibiliy
      rdf:type owl:ObjectProperty ;
      owl:inverseOf sparqlQuery:responsibilityOf .

sparqlQuery:hasSPARQLQueryClassification
      rdf:type owl:ObjectProperty ;
      owl:inverseOf sparqlQuery:SPARQLQueryClassficationOf .

sparqlQuery:hasSPARQLQuerySubClassification
      rdf:type owl:TransitiveProperty .

sparqlQuery:hasSequence
      rdf:type owl:ObjectProperty ;
      owl:inverseOf sparqlQuery:sequenceOf .

sparqlQuery:hasTargetSequence
      rdf:type owl:ObjectProperty ;
      rdfs:subPropertyOf sparqlQuery:hasSequence ;
      owl:inverseOf sparqlQuery:targetSequenceOf .

sparqlQuery:hasTissueSample
      rdf:type owl:ObjectProperty ;
      rdfs:comment "Contingent on accepting TissueSample into the ontology"^^xsd:string ;
      owl:inverseOf sparqlQuery:tissueSampleOf .

sparqlQuery:hasTissueType
      rdf:type owl:ObjectProperty ;
      owl:inverseOf sparqlQuery:tissueTypeOf .

sparqlQuery:hasValidPlatformDatatype
      rdf:type owl:ObjectProperty ;
      owl:inverseOf sparqlQuery:validPlatformDatatypeOf .

sparqlQuery:hasVendor
      rdf:type owl:ObjectProperty ;
      rdfs:subPropertyOf sparqlQuery:organization ;
      owl:inverseOf sparqlQuery:vendorOf .

sparqlQuery:has_Term
      rdf:type owl:ObjectProperty .

sparqlQuery:has_address
      rdf:type owl:ObjectProperty ;
      rdfs:comment "Under discussion. We feel there will be a need to have this property for classes that will have Addresses."^^xsd:string .

sparqlQuery:has_address_role
      rdf:type owl:ObjectProperty ;
      rdfs:comment "Contingent on acceptance of Address Role into the ontology"^^xsd:string .

sparqlQuery:has_aliquot
      rdf:type owl:ObjectProperty ;
      rdfs:comment "Contingent on acceptance of Aliquot into the ontology"^^xsd:string ;
      rdfs:range sparqlQuery:Aliquot .

sparqlQuery:has_aliquot_barcode
      rdf:type owl:DatatypeProperty ;
      rdfs:comment "Contingent on acceptance of Aliquot into the ontology. Aliquot Barcodes have a specific text representation that can be described by a regular expression."^^xsd:string .

sparqlQuery:has_bio_material
      rdf:type owl:ObjectProperty ;
      rdfs:comment "Contingent on use case  for a class having a TCGA:BioMaterial"^^xsd:string .

sparqlQuery:has_chromosome_subband
      rdf:type owl:ObjectProperty ;
      rdfs:subPropertyOf sparqlQuery:hasChromosomeBand .

sparqlQuery:has_cytogenic_location
      rdf:type rdf:Property ;
      rdfs:subPropertyOf sparqlQuery:locatedBy .

sparqlQuery:has_genomic_center_ID
      rdf:type owl:DatatypeProperty ;
      rdfs:comment "Contingent on acceptance of Genomic Center into the ontology. Genomic Center IDs have a specific format."^^xsd:string ;
      rdfs:range xsd:integer .

sparqlQuery:has_input_material
      rdf:type owl:ObjectProperty ;
      rdfs:comment "We are discussing creating this property as it seems apprporitate for a Treatment. However, we are still trying to discern what MAGE is trying to represent in  their Treatment class. A Treatment should transform an input material to an output material but there is no mention of a material in the MAGE Treatment."^^xsd:string ;
      owl:inverseOf sparqlQuery:has_output_material .

sparqlQuery:has_labeling_compound
      rdf:type owl:ObjectProperty ;
      rdfs:comment "A labeling compound is typically used on a bio material that will subsequently undergo image processing to extract a feature indentified by the labeled compound. There is a has_compund property in MAGE but we may add this as a subclass of that property for those classes that would only allow LabelingCompounds."^^xsd:string .

sparqlQuery:has_material_source
      rdf:type owl:ObjectProperty ;
      rdfs:comment "We will need to add this to the ontology so that classes that are Bio Material (or subclasses) can specify where the material was obtained. Still under discussion."^^xsd:string .

sparqlQuery:has_organization_ID
      rdf:type owl:DatatypeProperty ;
      rdfs:comment "Still under investigation but it seems to be missing from the MAGE ontology"^^xsd:string .

sparqlQuery:has_output_material
      rdf:type owl:ObjectProperty ;
      rdfs:comment "Contingent on accepting a new definition of Treatment, see has_input_material Property"^^xsd:string ;
      owl:inverseOf sparqlQuery:has_input_material .

sparqlQuery:has_plate
      rdf:type owl:ObjectProperty ;
      rdfs:comment "Contingent on accepatnce of Plate into the ontology"^^xsd:string .

sparqlQuery:has_plate_ID
      rdf:type owl:DatatypeProperty ;
      rdfs:comment "Contingent on acceptance of Plate into the ontology"^^xsd:string .

sparqlQuery:has_platform_version
      rdf:type owl:ObjectProperty ;
      rdfs:subPropertyOf mage:has_version .

sparqlQuery:has_plating_center_ID
      rdf:type rdf:Property , owl:DatatypeProperty ;
      rdfs:comment "Contingent on acceptance of Plating Center into the ontology"^^xsd:string .

sparqlQuery:has_quality_control
      rdf:type owl:ObjectProperty .

sparqlQuery:has_raw_source
      rdf:type owl:ObjectProperty ;
      rdfs:comment "Contingent on accepting Aliquot into the ontology. In TCGA parlance, an Aliguot would have exactly one raw source from which it was derived orginally and that raw source would be a BioMaterial"^^xsd:string .

sparqlQuery:has_string_representation
      rdf:type owl:DatatypeProperty .

sparqlQuery:has_vial
      rdf:type owl:ObjectProperty ;
      rdfs:comment "Contingent on accepting Vial into the ontology"^^xsd:string .

sparqlQuery:has_vial_ID
      rdf:type owl:DatatypeProperty .

sparqlQuery:hg-cgh-244aPlatform
      rdf:type sparqlQuery:Platform ;
      sparqlQuery:hasVendor
              sparqlQuery:AgilentOrg .

sparqlQuery:hthgu133aPlatform
      rdf:type sparqlQuery:Platform ;
      sparqlQuery:hasVendor
              sparqlQuery:AffymetrixOrg .

sparqlQuery:huex-1_0-st-v2Platform
      rdf:type sparqlQuery:Platform ;
      sparqlQuery:hasVendor
              sparqlQuery:AffymetrixOrg .

sparqlQuery:humanmethylation27Platform
      rdf:type sparqlQuery:Platform ;
      sparqlQuery:hasVendor
              sparqlQuery:IlluminaOrg .

sparqlQuery:ietfTag
      rdf:type rdf:Property ;
      rdfs:subPropertyOf dc:identifier .

sparqlQuery:illuminadnamethylation_oma002_cpiPlatform
      rdf:type sparqlQuery:Platform ;
      sparqlQuery:hasVendor
              sparqlQuery:IlluminaOrg .

sparqlQuery:illuminadnamethylation_oma003_cpiPlatform
      rdf:type sparqlQuery:Platform ;
      sparqlQuery:hasVendor
              sparqlQuery:IlluminaOrg .

sparqlQuery:illuminaga_mrna_dgePlatform
      rdf:type sparqlQuery:Platform ;
      sparqlQuery:hasVendor
              sparqlQuery:IlluminaOrg .

sparqlQuery:imageFormatOF
      rdf:type owl:ObjectProperty .

sparqlQuery:immortalizingAgent
      rdf:type owl:ObjectProperty .

sparqlQuery:includedByUseCase
      rdf:type owl:ObjectProperty ;
      owl:inverseOf sparqlQuery:includesUseCase .

sparqlQuery:includesUseCase
      rdf:type owl:ObjectProperty ;
      rdfs:comment "Indicates that the subject Use Case includes the behavior of the object Use Case"^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:indicates
      rdf:type owl:ObjectProperty .

sparqlQuery:inspiredBy
      rdf:type owl:ObjectProperty .

sparqlQuery:involvesConcept
      rdf:type owl:ObjectProperty ;
      rdfs:range
              [ rdf:type owl:Class ;
                owl:unionOf (rdfs:Class owl:AnnotationProperty owl:DatatypeProperty owl:ObjectProperty)
              ] .

sparqlQuery:isExternal
      rdf:type owl:DatatypeProperty .

sparqlQuery:isPlanned
      rdf:type owl:DatatypeProperty .

sparqlQuery:isPrimary
      rdf:type owl:DatatypeProperty .

sparqlQuery:labProcedure
      rdf:type owl:ObjectProperty .

sparqlQuery:lastModifiedDate
      rdf:type owl:ObjectProperty ;
      rdfs:subPropertyOf sparqlQuery:dateTimeInstant .

sparqlQuery:lastUpdatedOn
      rdf:type owl:ObjectProperty ;
      rdfs:subPropertyOf sparqlQuery:dateTimeInstant .

sparqlQuery:lessExtensiveThan
      rdf:type owl:ObjectProperty .

sparqlQuery:locatedBy
      rdf:type rdf:Property .

sparqlQuery:methylated
      rdf:type owl:DatatypeProperty .

sparqlQuery:microarrayIdentifier
      rdf:type owl:ObjectProperty .

sparqlQuery:molecularLocationOf
      rdf:type owl:ObjectProperty .

sparqlQuery:moreExtensiveThan
      rdf:type owl:TransitiveProperty ;
      rdfs:domain sparqlQuery:Indicator ;
      owl:inverseOf sparqlQuery:lessExtensiveThan .

sparqlQuery:name
      rdf:type rdf:Property ;
      rdfs:subPropertyOf rdfs:label .

sparqlQuery:nextBaseOf
      rdf:type owl:ObjectProperty .

sparqlQuery:organization
      rdf:type owl:ObjectProperty ;
      owl:inverseOf sparqlQuery:organizationOf .

sparqlQuery:organizationDomain
      rdf:type owl:ObjectProperty ;
      owl:inverseOf sparqlQuery:organizationDomainOf .

sparqlQuery:organizationDomainOf
      rdf:type owl:ObjectProperty .

sparqlQuery:organizationName
      rdf:type owl:ObjectProperty ;
      rdfs:subPropertyOf sparqlQuery:name .

sparqlQuery:organizationOf
      rdf:type owl:ObjectProperty .

sparqlQuery:outcome
      rdf:type owl:ObjectProperty ;
      rdfs:range sparqlQuery:Outcome ;
      owl:inverseOf sparqlQuery:outcomeOf .

sparqlQuery:outcomeOf
      rdf:type owl:ObjectProperty .

sparqlQuery:parentGoal
      rdf:type owl:ObjectProperty ;
      rdfs:comment "comment placeholder"^^xsd:string ;
      dc:creator foaf:JimLomax .

sparqlQuery:parentOf
      rdf:type owl:TransitiveProperty .

sparqlQuery:patient
      rdf:type owl:ObjectProperty ;
      rdfs:comment "Contingent on the acceptance of the Patient class into the ontology"^^xsd:string ;
      owl:inverseOf sparqlQuery:patientOf .

sparqlQuery:patientId
      rdf:type owl:FunctionalProperty ;
      rdfs:subPropertyOf dc:identifier ;
      sparqlQuery:designNote
              "patientId is functional since any object using patientId must be guarnteed that it will have a unique patientId. A Patient can only have on patientId."^^xsd:string ;
      owl:inverseOf sparqlQuery:patientIdOf .

sparqlQuery:patientIdOf
      rdf:type owl:ObjectProperty .

sparqlQuery:patientOf
      rdf:type owl:ObjectProperty .

sparqlQuery:place
      rdf:type owl:ObjectProperty .

sparqlQuery:platformDatatypeOf
      rdf:type owl:ObjectProperty .

sparqlQuery:platformIdentifier
      rdf:type owl:FunctionalProperty ;
      rdfs:subPropertyOf dc:identifier .

sparqlQuery:platformName
      rdf:type owl:ObjectProperty .

sparqlQuery:platformOf
      rdf:type owl:ObjectProperty .

sparqlQuery:platingCenter
      rdf:type owl:ObjectProperty ;
      rdfs:comment "Contingent on accptance of Plating Center into the ontology"^^xsd:string ;
      rdfs:subPropertyOf sparqlQuery:organization .

sparqlQuery:portion
      rdf:type owl:ObjectProperty ;
      rdfs:comment "Contingent on acceptance of Portion into the ontology (which also depends on accepting Vial)"^^xsd:string ;
      owl:inverseOf sparqlQuery:portionOf .

sparqlQuery:portionOf
      rdf:type owl:ObjectProperty ;
      rdfs:range sparqlQuery:TissueSample ;
      owl:inverseOf sparqlQuery:tissueSampleOf .

sparqlQuery:probeOf
      rdf:type owl:ObjectProperty .

sparqlQuery:probeSequenceOf
      rdf:type owl:ObjectProperty ;
      rdfs:subPropertyOf sparqlQuery:sequenceOf .

sparqlQuery:procurementStatus
      rdf:type owl:ObjectProperty .

sparqlQuery:project
      rdf:type owl:ObjectProperty ;
      owl:inverseOf sparqlQuery:platformOf .

sparqlQuery:projectName
      rdf:type owl:ObjectProperty ;
      rdfs:subPropertyOf sparqlQuery:name .

sparqlQuery:projectOf
      rdf:type owl:ObjectProperty .

sparqlQuery:queryOf
      rdf:type owl:ObjectProperty .

sparqlQuery:realizedBy
      rdf:type owl:ObjectProperty ;
      owl:inverseOf sparqlQuery:inspiredBy .

sparqlQuery:refersTo
      rdf:type owl:ObjectProperty .

sparqlQuery:regimen
      rdf:type owl:ObjectProperty ;
      owl:inverseOf sparqlQuery:regimenOf .

sparqlQuery:regimenModel
      rdf:type owl:ObjectProperty ;
      rdfs:range sparqlQuery:RegimenModel ;
      owl:inverseOf sparqlQuery:regimenModelOf .

sparqlQuery:regimenModelOf
      rdf:type owl:ObjectProperty .

sparqlQuery:regimenOf
      rdf:type owl:ObjectProperty ;
      rdfs:domain sparqlQuery:Regimen .

sparqlQuery:responsibilityOf
      rdf:type owl:ObjectProperty .

sparqlQuery:sampleType
      rdf:type owl:ObjectProperty .

sparqlQuery:sequenceOf
      rdf:type owl:ObjectProperty .

sparqlQuery:specializesUseCase
      rdf:type owl:ObjectProperty ;
      rdfs:comment "This property represents the modeling situation where one Use Case specializes the behavior of another Use Case. The specializing Use Case has common behaviors, requirements, constraints, and assumptions with a more general use case.  The domain and range for this property are both implicitly Use Cases. The inverse of this property is generalizesUseCase."^^xsd:string ;
      rdfs:domain sparqlQuery:UseCase ;
      rdfs:label "Generalizes Use Case"^^xsd:string ;
      rdfs:range sparqlQuery:UseCase ;
      dc:creator foaf:JimLomax ;
      owl:inverseOf sparqlQuery:generalizesUseCase .

sparqlQuery:startingBasePairNumber
      rdf:type owl:DatatypeProperty .

sparqlQuery:subGoal
      rdf:type owl:TransitiveProperty ;
      owl:inverseOf sparqlQuery:parentGoal .

sparqlQuery:targetSequenceOf
      rdf:type owl:ObjectProperty ;
      rdfs:subPropertyOf sparqlQuery:sequenceOf .

sparqlQuery:therapeuticProcedure
      rdf:type owl:ObjectProperty ;
      owl:inverseOf sparqlQuery:therapeuticProcedureOf .

sparqlQuery:therapeuticProcedureOf
      rdf:type owl:ObjectProperty .

sparqlQuery:therapeuticProcedures
      rdf:type owl:ObjectProperty ;
      rdfs:range collections:Collection .

sparqlQuery:tissueSampleId
      rdf:type owl:ObjectProperty ;
      rdfs:comment "Contingent on acceptance of Tissue Sample into the ontology. Generaly TissueSample IDs embed information about what Organization supplied the sample and often a Patient ID."^^xsd:string .

sparqlQuery:tissueSampleOf
      rdf:type owl:ObjectProperty ;
      dc:creator foaf:JimLomax .

sparqlQuery:tissueType
      rdf:type owl:ObjectProperty ;
      owl:inverseOf sparqlQuery:tissueTypeOf .

sparqlQuery:tissueTypeOf
      rdf:type owl:ObjectProperty .

sparqlQuery:transformationOf
      rdf:type owl:ObjectProperty .

sparqlQuery:transformedBy
      rdf:type owl:ObjectProperty ;
      owl:inverseOf sparqlQuery:transformationOf .

sparqlQuery:units
      rdf:type owl:ObjectProperty ;
      rdfs:range sparqlQuery:Units .

sparqlQuery:uploadCompletedOn
      rdf:type owl:ObjectProperty ;
      rdfs:comment "The date an entity was uploaded."^^xsd:string ;
      rdfs:subPropertyOf sparqlQuery:dateTimeInstant .

sparqlQuery:validPlatformDatatypeOf
      rdf:type owl:ObjectProperty .

sparqlQuery:value
      rdf:type owl:DatatypeProperty .

sparqlQuery:vendorOf
      rdf:type owl:ObjectProperty .

sparqlQuery:xDimension
      rdf:type owl:DatatypeProperty ;
      rdfs:comment "A property for any physical object having an x dimemsion"^^xsd:string .

sparqlQuery:xMax
      rdf:type owl:DatatypeProperty .

sparqlQuery:yDimension
      rdf:type owl:DatatypeProperty ;
      rdfs:comment "A property for any physical object having a Y dimension"^^xsd:string .

sparqlQuery:yMax
      rdf:type owl:DatatypeProperty .

mage:has_number
      rdf:type owl:DatatypeProperty .

dc:approvedDate
      rdf:type owl:AnnotationProperty ;
      rdfs:subPropertyOf dc:date .

dc:creator
      rdfs:range foaf:Person .

nco:Affiliation_1
      rdf:type nco:Affiliation .

foaf:DawitGebremichael
      rdf:type foaf:Person .

foaf:JimLomax
      rdf:type foaf:Person ;
      foaf:firstName "Jim"^^xsd:string ;
      foaf:surname "Lomax"^^xsd:string .

foaf:LathaRamdas
      rdf:type foaf:Person ;
      foaf:family_name "Ramdas"^^xsd:string ;
      foaf:firstName "Latha"^^xsd:string .

foaf:MoSanyang
      rdf:type foaf:Person ;
      foaf:family_name "Sanyang"^^xsd:string ;
      foaf:firstName "Mo"^^xsd:string .

foaf:ParsaMirhaji
      rdf:type foaf:Person .

foaf:PradhepRaju
      rdf:type foaf:Person .

_:b112
      sp:varName "prefLabelPlatform"^^xsd:string .

_:b113
      sp:varName "platformIDClass"^^xsd:string .

_:b114
      sp:varName "cancerClass"^^xsd:string .

_:b115
      sp:varName "cancerNameClass"^^xsd:string .

_:b116
      sp:varName "genomicCenterClass"^^xsd:string .

_:b117
      sp:varName "organizationNameClass"^^xsd:string .

_:b118
      sp:varName "archiveClass"^^xsd:string .

_:b119
      sp:varName "archiveVersion"^^xsd:string .

_:b120
      sp:varName "projectClass"^^xsd:string .

_:b121
      sp:varName "projectNameClass"^^xsd:string .

_:b122
      sp:varName "accessLevelClass"^^xsd:string .

_:b126
      sp:varName "GenomicCenterName"^^xsd:string .

_:b125
      sp:varName "PlatformName"^^xsd:string .

_:b124
      sp:varName "DatatypeName"^^xsd:string .

_:b123
      sp:varName "CancerName"^^xsd:string .

_:b127
      sp:varName "fileName"^^xsd:string .

_:b128
      sp:varName "archiveListing"^^xsd:string .

_:b129
      sp:varName "fileLocationClass"^^xsd:string .

_:b130
      sp:varName "datatypeClass"^^xsd:string .

_:b131
      sp:varName "datatypeNameClass"^^xsd:string .

_:b132
      sp:varName "filetypeClass"^^xsd:string .

_:b133
      sp:varName "prefLabelFileType"^^xsd:string .

_:b134
      sp:varName "platformClass"^^xsd:string .

_:b135
      sp:varName "prefLabelPlatform"^^xsd:string .

_:b136
      sp:varName "cancerClass"^^xsd:string .

_:b137
      sp:varName "cancerNameClass"^^xsd:string .

_:b138
      sp:varName "genomicCenterClass"^^xsd:string .

_:b139
      sp:varName "organizationNameClass"^^xsd:string .

_:b140
      sp:varName "cancerName"^^xsd:string .

_:b141
      sp:varName "sample"^^xsd:string .

_:b142
      sp:varName "cancerClass"^^xsd:string .

_:b143
      sp:varName "cancerNameClass"^^xsd:string .

_:b144
      sp:varName "collectionSiteClass"^^xsd:string .

_:b145
      sp:varName "collectionSiteIdClass"^^xsd:string .

_:b146
      sp:varName "collectionSiteId"^^xsd:string .

_:b147
      sp:varName "patient"^^xsd:string .

_:b148
      sp:varName "patientIdClass"^^xsd:string .

_:b149
      sp:varName "patientId"^^xsd:string .

_:b188
      sp:varName "GenomicCenterName"^^xsd:string .

_:b187
      sp:varName "PlatformId"^^xsd:string .

_:b186
      sp:varName "DatatypeName"^^xsd:string .

_:b185
      sp:varName "CancerName"^^xsd:string .

_:b189
      sp:varName "fileName"^^xsd:string .

_:b190
      sp:varName "archiveListing"^^xsd:string .

_:b191
      sp:varName "fileLocationClass"^^xsd:string .

_:b192
      sp:varName "datatypeClass"^^xsd:string .

_:b193
      sp:varName "datatypeNameClass"^^xsd:string .

_:b194
      sp:varName "filetypeClass"^^xsd:string .

_:b195
      sp:varName "prefLabelFileType"^^xsd:string .

_:b196
      sp:varName "platformClass"^^xsd:string .

_:b197
      sp:varName "prefLabelPlatform"^^xsd:string .

_:b198
      sp:varName "cancerClass"^^xsd:string .

_:b199
      sp:varName "cancerNameClass"^^xsd:string .

_:b200
      sp:varName "genomicCenterClass"^^xsd:string .

_:b201
      sp:varName "organizationNameClass"^^xsd:string .

_:b209
      sp:varName "AccessLevel"^^xsd:string .

_:b208
      sp:varName "DataSource"^^xsd:string .

_:b207
      sp:varName "Version"^^xsd:string .

_:b206
      sp:varName "GenomicCenterName"^^xsd:string .

_:b205
      sp:varName "PlatformID"^^xsd:string .

_:b204
      sp:varName "PlatformName"^^xsd:string .

_:b203
      sp:varName "DatatypeName"^^xsd:string .

_:b202
      sp:varName "CancerName"^^xsd:string .

_:b210
      sp:varName "fileName"^^xsd:string .

_:b211
      sp:varName "archiveListing"^^xsd:string .

_:b212
      sp:varName "fileLocationClass"^^xsd:string .

_:b213
      sp:varName "datatypeClass"^^xsd:string .

_:b214
      sp:varName "datatypeNameClass"^^xsd:string .

_:b215
      sp:varName "filetypeClass"^^xsd:string .

_:b216
      sp:varName "prefLabelFileType"^^xsd:string .

_:b217
      sp:varName "platformClass"^^xsd:string .

_:b218
      sp:varName "prefLabelPlatform"^^xsd:string .

_:b219
      sp:varName "platformIDClass"^^xsd:string .

_:b220
      sp:varName "cancerClass"^^xsd:string .

_:b221
      sp:varName "cancerNameClass"^^xsd:string .

_:b222
      sp:varName "genomicCenterClass"^^xsd:string .

_:b223
      sp:varName "organizationNameClass"^^xsd:string .

_:b224
      sp:varName "archiveClass"^^xsd:string .

_:b225
      sp:varName "archiveVersion"^^xsd:string .

_:b226
      sp:varName "projectClass"^^xsd:string .

_:b227
      sp:varName "projectNameClass"^^xsd:string .

_:b228
      sp:varName "accessLevelClass"^^xsd:string .

_:b246
      sp:varName "archiveListing"^^xsd:string .

_:b247
      sp:varName "filetypeClass"^^xsd:string .

_:b248
      sp:varName "prefLabelFileType"^^xsd:string .

_:b249
      sp:varName "cancerName"^^xsd:string .

_:b250
      sp:varName "sample"^^xsd:string .

_:b251
      sp:varName "cancerClass"^^xsd:string .

_:b252
      sp:varName "sampleIdClass"^^xsd:string .

_:b253
      sp:varName "cancerNameClass"^^xsd:string .

_:b258
      sp:varName "CenterName"^^xsd:string .

_:b257
      sp:varName "PlatformName"^^xsd:string .

_:b256
      sp:varName "PlatformId"^^xsd:string .

_:b255
      sp:varName "DatatypeName"^^xsd:string .

_:b254
      sp:varName "CancerName"^^xsd:string .

_:b259
      sp:varName "sampleId"^^xsd:string .

_:b260
      sp:varName "sample"^^xsd:string .

_:b261
      sp:varName "sampleIdClass"^^xsd:string .

_:b262
      sp:varName "platformClass"^^xsd:string .

_:b263
      sp:varName "platformIdClass"^^xsd:string .

_:b264
      sp:varName "platformClassName"^^xsd:string .

_:b265
      sp:varName "cancerClass"^^xsd:string .

_:b266
      sp:varName "cancerNameClass"^^xsd:string .

_:b267
      sp:varName "datatypeClass"^^xsd:string .

_:b268
      sp:varName "datatypeNameClass"^^xsd:string .

_:b269
      sp:varName "centerClass"^^xsd:string .

_:b270
      sp:varName "centerNameClass"^^xsd:string .

_:b375
      sp:varName "object"^^xsd:string .

_:b374
      sp:varName "subject"^^xsd:string .

_:b376
      sp:varName "modelElement"^^xsd:string .

_:b377
      sp:varName "datatype"^^xsd:string .

_:b378
      sp:varName "datatypeClass"^^xsd:string .

_:b379
      sp:varName "datatypeNameClass"^^xsd:string .

_:b380
      sp:varName "platformName"^^xsd:string .

_:b381
      sp:varName "platformClass"^^xsd:string .

_:b382
      sp:varName "platformNameClass"^^xsd:string .

_:b385
      sp:varName "vendorName"^^xsd:string .

_:b384
      sp:varName "platformName"^^xsd:string .

_:b383
      sp:varName "platformID"^^xsd:string .

_:b386
      sp:varName "platformClass"^^xsd:string .

_:b387
      sp:varName "platformNameClass"^^xsd:string .

_:b388
      sp:varName "platformIDClass"^^xsd:string .

_:b389
      sp:varName "platformVendorClass"^^xsd:string .

_:b390
      sp:varName "platformVendorNameClass"^^xsd:string .

_:b392
      sp:varName "object"^^xsd:string .

_:b391
      sp:varName "subject"^^xsd:string .

_:b394
      sp:varName "object"^^xsd:string .

_:b393
      sp:varName "subject"^^xsd:string .

_:b396
      sp:varName "cancerName"^^xsd:string .

_:b395
      sp:varName "fileName"^^xsd:string .

_:b398
      sp:varName "platformID"^^xsd:string .

_:b397
      sp:varName "datatypeName"^^xsd:string .

_:b399
      sp:varName "archiveListing"^^xsd:string .

_:b400
      sp:varName "fileLocationClass"^^xsd:string .

_:b401
      sp:varName "datatypeClass"^^xsd:string .

_:b402
      sp:varName "datatypeNameClass"^^xsd:string .

_:b403
      sp:varName "filetypeClass"^^xsd:string .

_:b404
      sp:varName "filetypeNameClass"^^xsd:string .

_:b405
      sp:varName "platformClass"^^xsd:string .

_:b406
      sp:varName "platformIdClass"^^xsd:string .

_:b407
      sp:varName "cancerClass"^^xsd:string .

_:b408
      sp:varName "cancerNameClass"^^xsd:string .

_:b410
      sp:varName "object"^^xsd:string .

_:b409
      sp:varName "subject"^^xsd:string .

_:b412
      sp:varName "usecase"^^xsd:string .

_:b411
      sp:varName "modelElement"^^xsd:string .

_:b414
      sp:varName "usecase"^^xsd:string .

_:b413
      sp:varName "modelElement"^^xsd:string .

_:b415
      sp:varName "modelElement"^^xsd:string .

_:b416
      sp:varName "usecase"^^xsd:string .

_:b72
      sp:varName "archiveListing"^^xsd:string .

_:b73
      sp:varName "fileLocationClass"^^xsd:string .

_:b71
      sp:varName "fileName"^^xsd:string .

_:b74
      sp:varName "datatypeClass"^^xsd:string .

_:b75
      sp:varName "datatypeNameClass"^^xsd:string .

_:b70
      sp:varName "DatatypeName"^^xsd:string .

_:b66
      sp:varName "archiveListing"^^xsd:string .

_:b67
      sp:varName "fileLocationClass"^^xsd:string .

_:b65
      sp:varName "fileName"^^xsd:string .

_:b68
      sp:varName "cancerClass"^^xsd:string .

_:b69
      sp:varName "cancerNameClass"^^xsd:string .

_:b64
      sp:varName "CancerName"^^xsd:string .

_:b234
      sp:varName "archiveListing"^^xsd:string .

_:b235
      sp:varName "fileLocationClass"^^xsd:string .

_:b233
      sp:varName "fileName"^^xsd:string .

_:b236
      sp:varName "datatypeClass"^^xsd:string .

_:b237
      sp:varName "datatypeNameClass"^^xsd:string .

_:b230
      sp:varName "DatatypeName"^^xsd:string .

_:b238
      sp:varName "filetypeClass"^^xsd:string .

_:b239
      sp:varName "prefLabelFileType"^^xsd:string .

_:b240
      sp:varName "platformClass"^^xsd:string .

_:b241
      sp:varName "prefLabelPlatform"^^xsd:string .

_:b231
      sp:varName "PlatformName"^^xsd:string .

_:b242
      sp:varName "cancerClass"^^xsd:string .

_:b243
      sp:varName "cancerNameClass"^^xsd:string .

_:b229
      sp:varName "CancerName"^^xsd:string .

_:b244
      sp:varName "genomicCenterClass"^^xsd:string .

_:b245
      sp:varName "organizationNameClass"^^xsd:string .

_:b232
      sp:varName "GenomicCenterName"^^xsd:string .

_:b78
      sp:varName "archiveListing"^^xsd:string .

_:b79
      sp:varName "fileLocationClass"^^xsd:string .

_:b77
      sp:varName "fileName"^^xsd:string .

_:b80
      sp:varName "fileTypeClass"^^xsd:string .

_:b81
      sp:varName "fileTypeClassName"^^xsd:string .

_:b76
      sp:varName "fileTypeName"^^xsd:string .

_:b3  sp:varName "archiveListing"^^xsd:string .

_:b4  sp:varName "fileLocationClass"^^xsd:string .

_:b2  sp:varName "fileName"^^xsd:string .

_:b5  sp:varName "datatypeClass"^^xsd:string .

_:b6  sp:varName "datatypeNameClass"^^xsd:string .

_:b1  sp:varName "datatypeName"^^xsd:string .

_:b84
      sp:varName "archiveListing"^^xsd:string .

_:b85
      sp:varName "fileLocationClass"^^xsd:string .

_:b83
      sp:varName "fileName"^^xsd:string .

_:b86
      sp:varName "platformClass"^^xsd:string .

_:b87
      sp:varName "platformIdClass"^^xsd:string .

_:b82
      sp:varName "platformID"^^xsd:string .

_:b45
      sp:varName "archiveListing"^^xsd:string .

_:b46
      sp:varName "fileLocationClass"^^xsd:string .

_:b44
      sp:varName "fileName"^^xsd:string .

_:b47
      sp:varName "datatypeClass"^^xsd:string .

_:b48
      sp:varName "datatypeNameClass"^^xsd:string .

_:b36
      sp:varName "datatypeName"^^xsd:string .

_:b49
      sp:varName "filetypeClass"^^xsd:string .

_:b50
      sp:varName "prefLabelFileType"^^xsd:string .

_:b43
      sp:varName "fileType"^^xsd:string .

_:b51
      sp:varName "platformClass"^^xsd:string .

_:b52
      sp:varName "prefLabelPlatform"^^xsd:string .

_:b37
      sp:varName "platformName"^^xsd:string .

_:b53
      sp:varName "platformIDClass"^^xsd:string .

_:b38
      sp:varName "platformID"^^xsd:string .

_:b54
      sp:varName "genomicCenterClass"^^xsd:string .

_:b55
      sp:varName "organizationNameClass"^^xsd:string .

_:b39
      sp:varName "genomicCenterName"^^xsd:string .

_:b56
      sp:varName "archiveClass"^^xsd:string .

_:b57
      sp:varName "archiveVersion"^^xsd:string .

_:b40
      sp:varName "version"^^xsd:string .

_:b58
      sp:varName "projectClass"^^xsd:string .

_:b59
      sp:varName "projectNameClass"^^xsd:string .

_:b41
      sp:varName "dataSource"^^xsd:string .

_:b60
      sp:varName "accessLevelClass"^^xsd:string .

_:b42
      sp:varName "accessLevel"^^xsd:string .

_:b61
      sp:varName "cancerClass"^^xsd:string .

_:b62
      sp:varName "cancerNameClass"^^xsd:string .

_:b35
      sp:varName "cancerName"^^xsd:string .

_:b63
      sp:varName "cancerIdClass"^^xsd:string .

_:b16
      sp:varName "archiveListing"^^xsd:string .

_:b17
      sp:varName "fileLocationClass"^^xsd:string .

_:b15
      sp:varName "fileName"^^xsd:string .

_:b18
      sp:varName "datatypeClass"^^xsd:string .

_:b19
      sp:varName "datatypeNameClass"^^xsd:string .

_:b9  sp:varName "datatypeName"^^xsd:string .

_:b20
      sp:varName "filetypeClass"^^xsd:string .

_:b21
      sp:varName "prefLabelFileType"^^xsd:string .

_:b14
      sp:varName "fileType"^^xsd:string .

_:b23
      sp:varName "platformClass"^^xsd:string .

_:b22
      sp:varName "prefLabelPlatform"^^xsd:string .

_:b10
      sp:varName "platformName"^^xsd:string .

_:b24
      sp:varName "platformIDClass"^^xsd:string .

_:b11
      sp:varName "platformID"^^xsd:string .

_:b25
      sp:varName "cancerClass"^^xsd:string .

_:b26
      sp:varName "cancerNameClass"^^xsd:string .

_:b8  sp:varName "cancerName"^^xsd:string .

_:b27
      sp:varName "cancerIdClass"^^xsd:string .

_:b7  sp:varName "cancerId"^^xsd:string .

_:b28
      sp:varName "genomicCenterClass"^^xsd:string .

_:b29
      sp:varName "organizationNameClass"^^xsd:string .

_:b12
      sp:varName "genomicCenterName"^^xsd:string .

_:b30
      sp:varName "archiveClass"^^xsd:string .

_:b31
      sp:varName "archiveVersion"^^xsd:string .

_:b13
      sp:varName "version"^^xsd:string .

_:b32
      sp:varName "projectClass"^^xsd:string .

_:b33
      sp:varName "projectNameClass"^^xsd:string .

_:b34
      sp:varName "accessLevelClass"^^xsd:string .

_:b278
      sp:varName "sample"^^xsd:string .

_:b279
      sp:varName "sampleIdClass"^^xsd:string .

_:b277
      sp:varName "sampleId"^^xsd:string .

_:b280
      sp:varName "platformClass"^^xsd:string .

_:b281
      sp:varName "platformIdClass"^^xsd:string .

_:b282
      sp:varName "platformNameClass"^^xsd:string .

_:b274
      sp:varName "PlatformName"^^xsd:string .

_:b273
      sp:varName "PlatformId"^^xsd:string .

_:b283
      sp:varName "cancerClass"^^xsd:string .

_:b284
      sp:varName "cancerNameClass"^^xsd:string .

_:b271
      sp:varName "CancerName"^^xsd:string .

_:b285
      sp:varName "datatypeClass"^^xsd:string .

_:b286
      sp:varName "datatypeNameClass"^^xsd:string .

_:b272
      sp:varName "DatatypeName"^^xsd:string .

_:b287
      sp:varName "centerClass"^^xsd:string .

_:b288
      sp:varName "centerNameClass"^^xsd:string .

_:b275
      sp:varName "CenterName"^^xsd:string .

_:b289
      sp:varName "sampleParent"^^xsd:string .

_:b290
      sp:varName "archiveClass"^^xsd:string .

_:b291
      sp:varName "archiveVersion"^^xsd:string .

_:b276
      sp:varName "Version"^^xsd:string .

_:b356
      sp:varName "sample"^^xsd:string .

_:b357
      sp:varName "sampleIdClass"^^xsd:string .

_:b355
      sp:varName "sampleId"^^xsd:string .

_:b358
      sp:varName "platformClass"^^xsd:string .

_:b359
      sp:varName "platformIdClass"^^xsd:string .

_:b350
      sp:varName "PlatformId"^^xsd:string .

_:b360
      sp:varName "platformNameClass"^^xsd:string .

_:b351
      sp:varName "PlatformName"^^xsd:string .

_:b361
      sp:varName "cancerClass"^^xsd:string .

_:b362
      sp:varName "cancerNameClass"^^xsd:string .

_:b347
      sp:varName "CancerName"^^xsd:string .

_:b363
      sp:varName "datatypeClass"^^xsd:string .

_:b364
      sp:varName "datatypeNameClass"^^xsd:string .

_:b348
      sp:varName "DatatypeName"^^xsd:string .

_:b365
      sp:varName "centerClass"^^xsd:string .

_:b366
      sp:varName "centerNameClass"^^xsd:string .

_:b349
      sp:varName "CenterName"^^xsd:string .

_:b367
      sp:varName "sampleParent"^^xsd:string .

_:b368
      sp:varName "archiveClass"^^xsd:string .

_:b369
      sp:varName "modifiedDateClass"^^xsd:string .

_:b353
      sp:varName "ModifiedDate"^^xsd:string .

_:b370
      sp:varName "archiveVersion"^^xsd:string .

_:b352
      sp:varName "Version"^^xsd:string .

_:b371
      sp:varName "tissueTypeClass"^^xsd:string .

_:b354
      sp:varName "TissueType"^^xsd:string .

_:b372
      sp:varName "archiveDownloadClass"^^xsd:string .

_:b373
      sp:varName "downloadDateTimeClass"^^xsd:string .

_:b346
      sp:varName "DownloadDateTime"^^xsd:string .

_:b299
      sp:varName "sample"^^xsd:string .

_:b300
      sp:varName "sampleIdClass"^^xsd:string .

_:b298
      sp:varName "sampleId"^^xsd:string .

_:b301
      sp:varName "platformClass"^^xsd:string .

_:b302
      sp:varName "platformIdClass"^^xsd:string .

_:b295
      sp:varName "PlatformId"^^xsd:string .

_:b303
      sp:varName "platformNameClass"^^xsd:string .

_:b296
      sp:varName "PlatformName"^^xsd:string .

_:b304
      sp:varName "cancerClass"^^xsd:string .

_:b305
      sp:varName "cancerNameClass"^^xsd:string .

_:b292
      sp:varName "CancerName"^^xsd:string .

_:b306
      sp:varName "datatypeClass"^^xsd:string .

_:b307
      sp:varName "datatypeNameClass"^^xsd:string .

_:b293
      sp:varName "DatatypeName"^^xsd:string .

_:b308
      sp:varName "centerClass"^^xsd:string .

_:b309
      sp:varName "centerNameClass"^^xsd:string .

_:b294
      sp:varName "CenterName"^^xsd:string .

_:b310
      sp:varName "sampleParent"^^xsd:string .

_:b311
      sp:varName "archiveClass"^^xsd:string .

_:b312
      sp:varName "archiveVersion"^^xsd:string .

_:b297
      sp:varName "Version"^^xsd:string .

_:b325
      sp:varName "sample"^^xsd:string .

_:b326
      sp:varName "sampleIdClass"^^xsd:string .

_:b324
      sp:varName "sampleId"^^xsd:string .

_:b327
      sp:varName "platformClass"^^xsd:string .

_:b328
      sp:varName "platformIdClass"^^xsd:string .

_:b317
      sp:varName "PlatformId"^^xsd:string .

_:b329
      sp:varName "platformNameClass"^^xsd:string .

_:b318
      sp:varName "PlatformName"^^xsd:string .

_:b330
      sp:varName "cancerClass"^^xsd:string .

_:b331
      sp:varName "cancerNameClass"^^xsd:string .

_:b314
      sp:varName "CancerName"^^xsd:string .

_:b332
      sp:varName "datatypeClass"^^xsd:string .

_:b333
      sp:varName "datatypeNameClass"^^xsd:string .

_:b315
      sp:varName "DatatypeName"^^xsd:string .

_:b334
      sp:varName "centerClass"^^xsd:string .

_:b335
      sp:varName "centerNameClass"^^xsd:string .

_:b316
      sp:varName "CenterName"^^xsd:string .

_:b336
      sp:varName "sampleParent"^^xsd:string .

_:b337
      sp:varName "archiveClass"^^xsd:string .

_:b338
      sp:varName "modifiedDateClass"^^xsd:string .

_:b320
      sp:varName "ModifiedDate"^^xsd:string .

_:b339
      sp:varName "archiveVersion"^^xsd:string .

_:b319
      sp:varName "Version"^^xsd:string .

_:b340
      sp:varName "projectClass"^^xsd:string .

_:b341
      sp:varName "projectNameClass"^^xsd:string .

_:b321
      sp:varName "Project"^^xsd:string .

_:b342
      sp:varName "accessLevelClass"^^xsd:string .

_:b322
      sp:varName "AccessLevel"^^xsd:string .

_:b343
      sp:varName "tissueTypeClass"^^xsd:string .

_:b323
      sp:varName "TissueType"^^xsd:string .

_:b344
      sp:varName "archiveDownloadClass"^^xsd:string .

_:b345
      sp:varName "downloadDateTimeClass"^^xsd:string .

_:b313
      sp:varName "DownloadDateTime"^^xsd:string .

_:b162
      sp:varName "sample"^^xsd:string .

_:b163
      sp:varName "sampleIdClass"^^xsd:string .

_:b164
      sp:varName "platformClass"^^xsd:string .

_:b165
      sp:varName "platformIdClass"^^xsd:string .

_:b154
      sp:varName "PlatformId"^^xsd:string .

_:b166
      sp:varName "platformNameClass"^^xsd:string .

_:b155
      sp:varName "PlatformName"^^xsd:string .

_:b167
      sp:varName "cancerClass"^^xsd:string .

_:b168
      sp:varName "cancerNameClass"^^xsd:string .

_:b151
      sp:varName "CancerName"^^xsd:string .

_:b169
      sp:varName "datatypeClass"^^xsd:string .

_:b170
      sp:varName "datatypeNameClass"^^xsd:string .

_:b152
      sp:varName "DatatypeName"^^xsd:string .

_:b171
      sp:varName "centerClass"^^xsd:string .

_:b172
      sp:varName "centerNameClass"^^xsd:string .

_:b153
      sp:varName "CenterName"^^xsd:string .

_:b173
      sp:varName "sampleParent"^^xsd:string .

_:b174
      sp:varName "archiveClass"^^xsd:string .

_:b175
      sp:varName "modifiedDateClass"^^xsd:string .

_:b157
      sp:varName "ModifiedDate"^^xsd:string .

_:b176
      sp:varName "archiveVersion"^^xsd:string .

_:b156
      sp:varName "Version"^^xsd:string .

_:b177
      sp:varName "projectClass"^^xsd:string .

_:b178
      sp:varName "projectNameClass"^^xsd:string .

_:b158
      sp:varName "DataSource"^^xsd:string .

_:b179
      sp:varName "accessLevelClass"^^xsd:string .

_:b159
      sp:varName "AccessLevel"^^xsd:string .

_:b180
      sp:varName "tissueTypeClass"^^xsd:string .

_:b160
      sp:varName "TissueType"^^xsd:string .

_:b181
      sp:varName "patient"^^xsd:string .

_:b182
      sp:varName "patientIdClass"^^xsd:string .

_:b161
      sp:varName "PatientId"^^xsd:string .

_:b183
      sp:varName "archiveDownloadClass"^^xsd:string .

_:b184
      sp:varName "downloadDateTimeClass"^^xsd:string .

_:b150
      sp:varName "DownloadDateTime"^^xsd:string .

_:b88
      sp:varName "genomicCenterName"^^xsd:string .

_:b89
      sp:varName "fileName"^^xsd:string .

_:b90
      sp:varName "archiveListing"^^xsd:string .

_:b91
      sp:varName "fileLocationClass"^^xsd:string .

_:b92
      sp:varName "genomicCenterClass"^^xsd:string .

_:b93
      sp:varName "organizationNameClass"^^xsd:string .

_:b94
      sp:varName "datatypeClass"^^xsd:string .

_:b95
      sp:varName "datatypeNameClass"^^xsd:string .

_:b103
      sp:varName "AccessLevel"^^xsd:string .

_:b102
      sp:varName "DataSource"^^xsd:string .

_:b101
      sp:varName "Version"^^xsd:string .

_:b100
      sp:varName "GenomicCenterName"^^xsd:string .

_:b99
      sp:varName "PlatformID"^^xsd:string .

_:b98
      sp:varName "PlatformName"^^xsd:string .

_:b97
      sp:varName "DatatypeName"^^xsd:string .

_:b96
      sp:varName "CancerName"^^xsd:string .

_:b104
      sp:varName "fileName"^^xsd:string .

_:b105
      sp:varName "archiveListing"^^xsd:string .

_:b106
      sp:varName "fileLocationClass"^^xsd:string .

_:b107
      sp:varName "datatypeClass"^^xsd:string .

_:b108
      sp:varName "datatypeNameClass"^^xsd:string .

_:b109
      sp:varName "filetypeClass"^^xsd:string .

_:b110
      sp:varName "prefLabelFileType"^^xsd:string .

_:b111
      sp:varName "platformClass"^^xsd:string .
